

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Jun 05 20:33:45 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    61                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    62                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    63                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    64                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    65   000000                     
    66                           ; Version 2.20
    67                           ; Generated 12/02/2020 GMT
    68                           ; 
    69                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    70                           ; All rights reserved.
    71                           ; 
    72                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    73                           ; 
    74                           ; Redistribution and use in source and binary forms, with or without modification, are
    75                           ; permitted provided that the following conditions are met:
    76                           ; 
    77                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    78                           ;        conditions and the following disclaimer.
    79                           ; 
    80                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    81                           ;        of conditions and the following disclaimer in the documentation and/or other
    82                           ;        materials provided with the distribution.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC18F4580 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100   000000                     
   101                           	psect	idataCOMRAM
   102   001ED0                     __pidataCOMRAM:
   103                           	callstack 0
   104                           
   105                           ;initializer for _atmpt
   106   001ED0  03                 	db	3
   107                           
   108                           ;initializer for read_switches@once
   109   001ED1  01                 	db	1
   110                           
   111                           	psect	idataBANK0
   112   001DE4                     __pidataBANK0:
   113                           	callstack 0
   114                           
   115                           ;initializer for _event
   116   001DE4  EB                 	db	low STR_1
   117   001DE5  2F                 	db	high STR_1
   118   001DE6  F1                 	db	low STR_2
   119   001DE7  2F                 	db	high STR_2
   120   001DE8  E8                 	db	low STR_3
   121   001DE9  2F                 	db	high STR_3
   122   001DEA  D9                 	db	low STR_4
   123   001DEB  2F                 	db	high STR_4
   124   001DEC  DC                 	db	low STR_5
   125   001DED  2F                 	db	high STR_5
   126   001DEE  DF                 	db	low STR_6
   127   001DEF  2F                 	db	high STR_6
   128   001DF0  E2                 	db	low STR_7
   129   001DF1  2F                 	db	high STR_7
   130   001DF2  E5                 	db	low STR_8
   131   001DF3  2F                 	db	high STR_8
   132                           
   133                           ;initializer for _logs
   134   001DF4  5F                 	db	low STR_22
   135   001DF5  2F                 	db	high STR_22
   136   001DF6  96                 	db	low STR_23
   137   001DF7  2E                 	db	high STR_23
   138   001DF8  D3                 	db	low STR_24
   139   001DF9  2E                 	db	high STR_24
   140   001DFA  4E                 	db	low STR_25
   141   001DFB  2F                 	db	high STR_25
   142   001DFC  7D                 	db	low STR_26
   143   001DFD  2E                 	db	high STR_26
   144   000000                     _RCREG	set	4014
   145   000000                     _TXREG	set	4013
   146   000000                     _SPBRG	set	4015
   147   000000                     _SSPADD	set	4040
   148   000000                     _SSPCON1	set	4038
   149   000000                     _ADRESL	set	4035
   150   000000                     _ADRESH	set	4036
   151   000000                     _ABDOVF	set	32199
   152   000000                     _ACKSTAT	set	32302
   153   000000                     _CKE	set	32318
   154   000000                     _T08BIT	set	32430
   155   000000                     _RBPU	set	32655
   156   000000                     _VCFG1	set	32269
   157   000000                     _GODONE	set	32273
   158   000000                     _PORTBbits	set	3969
   159   000000                     _ADCON1	set	4033
   160   000000                     _ADCON0	set	4034
   161   000000                     _TRISD	set	3989
   162   000000                     _RCIF	set	31989
   163   000000                     _RCIE	set	31981
   164   000000                     _TXIF	set	31988
   165   000000                     _ABDEN	set	32192
   166   000000                     _WUE	set	32193
   167   000000                     _BRG16	set	32195
   168   000000                     _CREN	set	32092
   169   000000                     _RX9	set	32094
   170   000000                     _BRGH	set	32098
   171   000000                     _SENDB	set	32099
   172   000000                     _SYNC	set	32100
   173   000000                     _TXEN	set	32101
   174   000000                     _TRISC6	set	31910
   175   000000                     _TRISC7	set	31911
   176   000000                     _ACKEN	set	32300
   177   000000                     _ACKDT	set	32301
   178   000000                     _RCEN	set	32299
   179   000000                     _RSEN	set	32297
   180   000000                     _PEN	set	32298
   181   000000                     _SEN	set	32296
   182   000000                     _SMP	set	32319
   183   000000                     _TRISC4	set	31908
   184   000000                     _TRISC3	set	31907
   185   000000                     _TMR0IE	set	32661
   186   000000                     _TMR0IF	set	32658
   187   000000                     _PSA	set	32427
   188   000000                     _TMR0ON	set	32431
   189   000000                     _T0CS	set	32429
   190   000000                     _PEIE	set	32662
   191   000000                     _GO	set	32273
   192   000000                     _ADON	set	32272
   193   000000                     _VCFG0	set	32268
   194   000000                     _ADCS2	set	32258
   195   000000                     _ADCS1	set	32257
   196   000000                     _ADCS0	set	32256
   197   000000                     _ACQT0	set	32259
   198   000000                     _ACQT1	set	32260
   199   000000                     _ACQT2	set	32261
   200   000000                     _RD7	set	31775
   201   000000                     _RC0	set	31760
   202   000000                     _RC2	set	31762
   203   000000                     _PORTB	set	3969
   204   000000                     _RC1	set	31761
   205   000000                     _TRISB	set	3987
   206   000000                     _TRISC	set	3988
   207   000000                     _PORTD	set	3971
   208   000000                     _TRISD7	set	31919
   209   000000                     _TXIE	set	31980
   210   000000                     _SSPIF	set	31987
   211   000000                     _ADFM	set	32263
   212   000000                     _GIE	set	32663
   213   000000                     _TMR0	set	4054
   214   000000                     _SSPBUF	set	4041
   215   000000                     _BCLIF	set	32011
   216   000000                     _SPEN	set	32095
   217   000000                     _TX9	set	32102
   218                           
   219                           	psect	mediumconst
   220   002E7C                     __pmediumconst:
   221                           	callstack 0
   222   002E7C  00                 	db	0
   223   002E7D                     STR_26:
   224   002E7D  43                 	db	67	;'C'
   225   002E7E  48                 	db	72	;'H'
   226   002E7F  41                 	db	65	;'A'
   227   002E80  4E                 	db	78	;'N'
   228   002E81  47                 	db	71	;'G'
   229   002E82  45                 	db	69	;'E'
   230   002E83  20                 	db	32
   231   002E84  50                 	db	80	;'P'
   232   002E85  41                 	db	65	;'A'
   233   002E86  53                 	db	83	;'S'
   234   002E87  53                 	db	83	;'S'
   235   002E88  57                 	db	87	;'W'
   236   002E89  4F                 	db	79	;'O'
   237   002E8A  52                 	db	82	;'R'
   238   002E8B  44                 	db	68	;'D'
   239   002E8C  20                 	db	32
   240   002E8D  20                 	db	32
   241   002E8E  20                 	db	32
   242   002E8F  20                 	db	32
   243   002E90  20                 	db	32
   244   002E91  20                 	db	32
   245   002E92  20                 	db	32
   246   002E93  20                 	db	32
   247   002E94  20                 	db	32
   248   002E95  00                 	db	0
   249   002E96                     STR_23:
   250   002E96  44                 	db	68	;'D'
   251   002E97  4F                 	db	79	;'O'
   252   002E98  57                 	db	87	;'W'
   253   002E99  4E                 	db	78	;'N'
   254   002E9A  4C                 	db	76	;'L'
   255   002E9B  4F                 	db	79	;'O'
   256   002E9C  41                 	db	65	;'A'
   257   002E9D  44                 	db	68	;'D'
   258   002E9E  20                 	db	32
   259   002E9F  4C                 	db	76	;'L'
   260   002EA0  4F                 	db	79	;'O'
   261   002EA1  47                 	db	71	;'G'
   262   002EA2  20                 	db	32
   263   002EA3  20                 	db	32
   264   002EA4  20                 	db	32
   265   002EA5  20                 	db	32
   266   002EA6  20                 	db	32
   267   002EA7  20                 	db	32
   268   002EA8  20                 	db	32
   269   002EA9  20                 	db	32
   270   002EAA  20                 	db	32
   271   002EAB  20                 	db	32
   272   002EAC  00                 	db	0
   273   002EAD                     STR_41:
   274   002EAD  45                 	db	69	;'E'
   275   002EAE  4E                 	db	78	;'N'
   276   002EAF  54                 	db	84	;'T'
   277   002EB0  45                 	db	69	;'E'
   278   002EB1  52                 	db	82	;'R'
   279   002EB2  20                 	db	32
   280   002EB3  4E                 	db	78	;'N'
   281   002EB4  45                 	db	69	;'E'
   282   002EB5  57                 	db	87	;'W'
   283   002EB6  20                 	db	32
   284   002EB7  50                 	db	80	;'P'
   285   002EB8  41                 	db	65	;'A'
   286   002EB9  53                 	db	83	;'S'
   287   002EBA  53                 	db	83	;'S'
   288   002EBB  57                 	db	87	;'W'
   289   002EBC  4F                 	db	79	;'O'
   290   002EBD  52                 	db	82	;'R'
   291   002EBE  44                 	db	68	;'D'
   292   002EBF  00                 	db	0
   293   002EC0                     STR_37:
   294   002EC0  20                 	db	32
   295   002EC1  4C                 	db	76	;'L'
   296   002EC2  4F                 	db	79	;'O'
   297   002EC3  47                 	db	71	;'G'
   298   002EC4  53                 	db	83	;'S'
   299   002EC5  20                 	db	32
   300   002EC6  44                 	db	68	;'D'
   301   002EC7  4F                 	db	79	;'O'
   302   002EC8  57                 	db	87	;'W'
   303   002EC9  4E                 	db	78	;'N'
   304   002ECA  4C                 	db	76	;'L'
   305   002ECB  4F                 	db	79	;'O'
   306   002ECC  41                 	db	65	;'A'
   307   002ECD  44                 	db	68	;'D'
   308   002ECE  45                 	db	69	;'E'
   309   002ECF  44                 	db	68	;'D'
   310   002ED0  20                 	db	32
   311   002ED1  20                 	db	32
   312   002ED2  00                 	db	0
   313   002ED3                     STR_24:
   314   002ED3  43                 	db	67	;'C'
   315   002ED4  4C                 	db	76	;'L'
   316   002ED5  45                 	db	69	;'E'
   317   002ED6  41                 	db	65	;'A'
   318   002ED7  52                 	db	82	;'R'
   319   002ED8  20                 	db	32
   320   002ED9  4C                 	db	76	;'L'
   321   002EDA  4F                 	db	79	;'O'
   322   002EDB  47                 	db	71	;'G'
   323   002EDC  20                 	db	32
   324   002EDD  20                 	db	32
   325   002EDE  20                 	db	32
   326   002EDF  20                 	db	32
   327   002EE0  20                 	db	32
   328   002EE1  20                 	db	32
   329   002EE2  20                 	db	32
   330   002EE3  20                 	db	32
   331   002EE4  20                 	db	32
   332   002EE5  00                 	db	0
   333   002EE6                     STR_46:
   334   002EE6  52                 	db	82	;'R'
   335   002EE7  45                 	db	69	;'E'
   336   002EE8  20                 	db	32
   337   002EE9  45                 	db	69	;'E'
   338   002EEA  4E                 	db	78	;'N'
   339   002EEB  54                 	db	84	;'T'
   340   002EEC  45                 	db	69	;'E'
   341   002EED  52                 	db	82	;'R'
   342   002EEE  20                 	db	32
   343   002EEF  50                 	db	80	;'P'
   344   002EF0  41                 	db	65	;'A'
   345   002EF1  53                 	db	83	;'S'
   346   002EF2  53                 	db	83	;'S'
   347   002EF3  57                 	db	87	;'W'
   348   002EF4  4F                 	db	79	;'O'
   349   002EF5  52                 	db	82	;'R'
   350   002EF6  44                 	db	68	;'D'
   351   002EF7  00                 	db	0
   352   002EF8                     STR_38:
   353   002EF8  20                 	db	32
   354   002EF9  53                 	db	83	;'S'
   355   002EFA  55                 	db	85	;'U'
   356   002EFB  43                 	db	67	;'C'
   357   002EFC  43                 	db	67	;'C'
   358   002EFD  45                 	db	69	;'E'
   359   002EFE  53                 	db	83	;'S'
   360   002EFF  53                 	db	83	;'S'
   361   002F00  46                 	db	70	;'F'
   362   002F01  55                 	db	85	;'U'
   363   002F02  4C                 	db	76	;'L'
   364   002F03  4C                 	db	76	;'L'
   365   002F04  59                 	db	89	;'Y'
   366   002F05  20                 	db	32
   367   002F06  20                 	db	32
   368   002F07  20                 	db	32
   369   002F08  20                 	db	32
   370   002F09  00                 	db	0
   371   002F0A                     STR_52:
   372   002F0A  20                 	db	32
   373   002F0B  20                 	db	32
   374   002F0C  20                 	db	32
   375   002F0D  20                 	db	32
   376   002F0E  46                 	db	70	;'F'
   377   002F0F  41                 	db	65	;'A'
   378   002F10  49                 	db	73	;'I'
   379   002F11  4C                 	db	76	;'L'
   380   002F12  55                 	db	85	;'U'
   381   002F13  52                 	db	82	;'R'
   382   002F14  45                 	db	69	;'E'
   383   002F15  20                 	db	32
   384   002F16  20                 	db	32
   385   002F17  20                 	db	32
   386   002F18  20                 	db	32
   387   002F19  20                 	db	32
   388   002F1A  00                 	db	0
   389   002F1B                     STR_54:
   390   002F1B  20                 	db	32
   391   002F1C  53                 	db	83	;'S'
   392   002F1D  55                 	db	85	;'U'
   393   002F1E  43                 	db	67	;'C'
   394   002F1F  43                 	db	67	;'C'
   395   002F20  45                 	db	69	;'E'
   396   002F21  53                 	db	83	;'S'
   397   002F22  53                 	db	83	;'S'
   398   002F23  46                 	db	70	;'F'
   399   002F24  55                 	db	85	;'U'
   400   002F25  4C                 	db	76	;'L'
   401   002F26  4C                 	db	76	;'L'
   402   002F27  59                 	db	89	;'Y'
   403   002F28  20                 	db	32
   404   002F29  20                 	db	32
   405   002F2A  20                 	db	32
   406   002F2B  00                 	db	0
   407   002F2C                     STR_51:
   408   002F2C  43                 	db	67	;'C'
   409   002F2D  48                 	db	72	;'H'
   410   002F2E  41                 	db	65	;'A'
   411   002F2F  4E                 	db	78	;'N'
   412   002F30  47                 	db	71	;'G'
   413   002F31  45                 	db	69	;'E'
   414   002F32  20                 	db	32
   415   002F33  50                 	db	80	;'P'
   416   002F34  41                 	db	65	;'A'
   417   002F35  53                 	db	83	;'S'
   418   002F36  53                 	db	83	;'S'
   419   002F37  57                 	db	87	;'W'
   420   002F38  4F                 	db	79	;'O'
   421   002F39  52                 	db	82	;'R'
   422   002F3A  44                 	db	68	;'D'
   423   002F3B  20                 	db	32
   424   002F3C  00                 	db	0
   425   002F3D                     STR_39:
   426   002F3D  4C                 	db	76	;'L'
   427   002F3E  4F                 	db	79	;'O'
   428   002F3F  47                 	db	71	;'G'
   429   002F40  53                 	db	83	;'S'
   430   002F41  20                 	db	32
   431   002F42  41                 	db	65	;'A'
   432   002F43  52                 	db	82	;'R'
   433   002F44  45                 	db	69	;'E'
   434   002F45  20                 	db	32
   435   002F46  43                 	db	67	;'C'
   436   002F47  4C                 	db	76	;'L'
   437   002F48  45                 	db	69	;'E'
   438   002F49  41                 	db	65	;'A'
   439   002F4A  52                 	db	82	;'R'
   440   002F4B  45                 	db	69	;'E'
   441   002F4C  44                 	db	68	;'D'
   442   002F4D  00                 	db	0
   443   002F4E                     STR_25:
   444   002F4E  53                 	db	83	;'S'
   445   002F4F  45                 	db	69	;'E'
   446   002F50  54                 	db	84	;'T'
   447   002F51  20                 	db	32
   448   002F52  54                 	db	84	;'T'
   449   002F53  49                 	db	73	;'I'
   450   002F54  4D                 	db	77	;'M'
   451   002F55  45                 	db	69	;'E'
   452   002F56  20                 	db	32
   453   002F57  20                 	db	32
   454   002F58  20                 	db	32
   455   002F59  20                 	db	32
   456   002F5A  20                 	db	32
   457   002F5B  20                 	db	32
   458   002F5C  20                 	db	32
   459   002F5D  20                 	db	32
   460   002F5E  00                 	db	0
   461   002F5F                     STR_22:
   462   002F5F  56                 	db	86	;'V'
   463   002F60  49                 	db	73	;'I'
   464   002F61  45                 	db	69	;'E'
   465   002F62  57                 	db	87	;'W'
   466   002F63  20                 	db	32
   467   002F64  4C                 	db	76	;'L'
   468   002F65  4F                 	db	79	;'O'
   469   002F66  47                 	db	71	;'G'
   470   002F67  20                 	db	32
   471   002F68  20                 	db	32
   472   002F69  20                 	db	32
   473   002F6A  20                 	db	32
   474   002F6B  20                 	db	32
   475   002F6C  20                 	db	32
   476   002F6D  20                 	db	32
   477   002F6E  00                 	db	0
   478   002F6F                     STR_19:
   479   002F6F  59                 	db	89	;'Y'
   480   002F70  4F                 	db	79	;'O'
   481   002F71  55                 	db	85	;'U'
   482   002F72  20                 	db	32
   483   002F73  41                 	db	65	;'A'
   484   002F74  52                 	db	82	;'R'
   485   002F75  45                 	db	69	;'E'
   486   002F76  20                 	db	32
   487   002F77  42                 	db	66	;'B'
   488   002F78  4C                 	db	76	;'L'
   489   002F79  4F                 	db	79	;'O'
   490   002F7A  43                 	db	67	;'C'
   491   002F7B  4B                 	db	75	;'K'
   492   002F7C  45                 	db	69	;'E'
   493   002F7D  44                 	db	68	;'D'
   494   002F7E  00                 	db	0
   495   002F7F                     STR_17:
   496   002F7F  57                 	db	87	;'W'
   497   002F80  52                 	db	82	;'R'
   498   002F81  4F                 	db	79	;'O'
   499   002F82  4E                 	db	78	;'N'
   500   002F83  47                 	db	71	;'G'
   501   002F84  20                 	db	32
   502   002F85  50                 	db	80	;'P'
   503   002F86  41                 	db	65	;'A'
   504   002F87  53                 	db	83	;'S'
   505   002F88  53                 	db	83	;'S'
   506   002F89  57                 	db	87	;'W'
   507   002F8A  4F                 	db	79	;'O'
   508   002F8B  52                 	db	82	;'R'
   509   002F8C  44                 	db	68	;'D'
   510   002F8D  00                 	db	0
   511   002F8E                     STR_29:
   512   002F8E  4E                 	db	78	;'N'
   513   002F8F  4F                 	db	79	;'O'
   514   002F90  20                 	db	32
   515   002F91  4C                 	db	76	;'L'
   516   002F92  4F                 	db	79	;'O'
   517   002F93  47                 	db	71	;'G'
   518   002F94  53                 	db	83	;'S'
   519   002F95  20                 	db	32
   520   002F96  46                 	db	70	;'F'
   521   002F97  4F                 	db	79	;'O'
   522   002F98  55                 	db	85	;'U'
   523   002F99  4E                 	db	78	;'N'
   524   002F9A  44                 	db	68	;'D'
   525   002F9B  00                 	db	0
   526   002F9C                     STR_40:
   527   002F9C  53                 	db	83	;'S'
   528   002F9D  55                 	db	85	;'U'
   529   002F9E  43                 	db	67	;'C'
   530   002F9F  43                 	db	67	;'C'
   531   002FA0  45                 	db	69	;'E'
   532   002FA1  53                 	db	83	;'S'
   533   002FA2  53                 	db	83	;'S'
   534   002FA3  46                 	db	70	;'F'
   535   002FA4  55                 	db	85	;'U'
   536   002FA5  4C                 	db	76	;'L'
   537   002FA6  4C                 	db	76	;'L'
   538   002FA7  59                 	db	89	;'Y'
   539   002FA8  00                 	db	0
   540   002FA9                     STR_18:
   541   002FA9  41                 	db	65	;'A'
   542   002FAA  74                 	db	116	;'t'
   543   002FAB  74                 	db	116	;'t'
   544   002FAC  65                 	db	101	;'e'
   545   002FAD  6D                 	db	109	;'m'
   546   002FAE  70                 	db	112	;'p'
   547   002FAF  74                 	db	116	;'t'
   548   002FB0  20                 	db	32
   549   002FB1  4C                 	db	76	;'L'
   550   002FB2  65                 	db	101	;'e'
   551   002FB3  66                 	db	102	;'f'
   552   002FB4  74                 	db	116	;'t'
   553   002FB5  00                 	db	0
   554   002FB6                     STR_55:
   555   002FB6  48                 	db	72	;'H'
   556   002FB7  48                 	db	72	;'H'
   557   002FB8  3A                 	db	58	;':'
   558   002FB9  4D                 	db	77	;'M'
   559   002FBA  4D                 	db	77	;'M'
   560   002FBB  3A                 	db	58	;':'
   561   002FBC  53                 	db	83	;'S'
   562   002FBD  53                 	db	83	;'S'
   563   002FBE  00                 	db	0
   564   002FBF                     STR_21:
   565   002FBF  53                 	db	83	;'S'
   566   002FC0  45                 	db	69	;'E'
   567   002FC1  43                 	db	67	;'C'
   568   002FC2  4F                 	db	79	;'O'
   569   002FC3  4E                 	db	78	;'N'
   570   002FC4  44                 	db	68	;'D'
   571   002FC5  53                 	db	83	;'S'
   572   002FC6  00                 	db	0
   573   002FC7                     STR_30:
   574   002FC7  4C                 	db	76	;'L'
   575   002FC8  4F                 	db	79	;'O'
   576   002FC9  47                 	db	71	;'G'
   577   002FCA  53                 	db	83	;'S'
   578   002FCB  00                 	db	0
   579   002FCC                     STR_20:
   580   002FCC  46                 	db	70	;'F'
   581   002FCD  4F                 	db	79	;'O'
   582   002FCE  52                 	db	82	;'R'
   583   002FCF  20                 	db	32
   584   002FD0  00                 	db	0
   585   002FD1                     STR_9:
   586   002FD1  54                 	db	84	;'T'
   587   002FD2  49                 	db	73	;'I'
   588   002FD3  4D                 	db	77	;'M'
   589   002FD4  45                 	db	69	;'E'
   590   002FD5  00                 	db	0
   591   002FD6                     STR_36:
   592   002FD6  0A                 	db	10
   593   002FD7  0D                 	db	13
   594   002FD8  00                 	db	0
   595   002FD9                     STR_4:
   596   002FD9  47                 	db	71	;'G'
   597   002FDA  31                 	db	49	;'1'
   598   002FDB  00                 	db	0
   599   002FDC                     STR_5:
   600   002FDC  47                 	db	71	;'G'
   601   002FDD  32                 	db	50	;'2'
   602   002FDE  00                 	db	0
   603   002FDF                     STR_6:
   604   002FDF  47                 	db	71	;'G'
   605   002FE0  33                 	db	51	;'3'
   606   002FE1  00                 	db	0
   607   002FE2                     STR_7:
   608   002FE2  47                 	db	71	;'G'
   609   002FE3  34                 	db	52	;'4'
   610   002FE4  00                 	db	0
   611   002FE5                     STR_8:
   612   002FE5  2D                 	db	45
   613   002FE6  43                 	db	67	;'C'
   614   002FE7  00                 	db	0
   615   002FE8                     STR_3:
   616   002FE8  47                 	db	71	;'G'
   617   002FE9  4E                 	db	78	;'N'
   618   002FEA  00                 	db	0
   619   002FEB                     STR_1:
   620   002FEB  4F                 	db	79	;'O'
   621   002FEC  4E                 	db	78	;'N'
   622   002FED  00                 	db	0
   623   002FEE                     STR_11:
   624   002FEE  53                 	db	83	;'S'
   625   002FEF  50                 	db	80	;'P'
   626   002FF0  00                 	db	0
   627   002FF1                     STR_2:
   628   002FF1  47                 	db	71	;'G'
   629   002FF2  52                 	db	82	;'R'
   630   002FF3  00                 	db	0
   631   002FF4                     STR_10:
   632   002FF4  45                 	db	69	;'E'
   633   002FF5  56                 	db	86	;'V'
   634   002FF6  00                 	db	0
   635   002FF7                     STR_31:
   636   002FF7  2E                 	db	46
   637   002FF8  00                 	db	0
   638   002FF9                     STR_32:
   639   002FF9  3A                 	db	58	;':'
   640   002FFA  00                 	db	0
   641   002FFB                     STR_15:
   642   002FFB  2A                 	db	42
   643   002FFC  00                 	db	0
   644   002FFD                     STR_13:
   645   002FFD  5F                 	db	95	;'_'
   646   002FFE  00                 	db	0
   647   002FFF  00                 	db	0	; dummy byte at the end
   648   000000                     
   649                           ; #config settings
   650                           
   651                           	psect	cinit
   652   001B4A                     __pcinit:
   653                           	callstack 0
   654   001B4A                     start_initialization:
   655                           	callstack 0
   656   001B4A                     __initialization:
   657                           	callstack 0
   658                           
   659                           ; Initialize objects allocated to BANK0 (26 bytes)
   660                           ; load TBLPTR registers with __pidataBANK0
   661   001B4A  0EE4               	movlw	low __pidataBANK0
   662   001B4C  6EF6               	movwf	tblptrl,c
   663   001B4E  0E1D               	movlw	high __pidataBANK0
   664   001B50  6EF7               	movwf	tblptrh,c
   665   001B52  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   666   001B54  6EF8               	movwf	tblptru,c
   667   001B56  EE00  F083         	lfsr	0,__pdataBANK0
   668   001B5A  EE10 F01A          	lfsr	1,26
   669   001B5E                     copy_data0:
   670   001B5E  0009               	tblrd		*+
   671   001B60  CFF5 FFEE          	movff	tablat,postinc0
   672   001B64  50E5               	movf	postdec1,w,c
   673   001B66  50E1               	movf	fsr1l,w,c
   674   001B68  E1FA               	bnz	copy_data0
   675                           
   676                           ; Initialize objects allocated to COMRAM (2 bytes)
   677                           ; load TBLPTR registers with __pidataCOMRAM
   678   001B6A  0ED0               	movlw	low __pidataCOMRAM
   679   001B6C  6EF6               	movwf	tblptrl,c
   680   001B6E  0E1E               	movlw	high __pidataCOMRAM
   681   001B70  6EF7               	movwf	tblptrh,c
   682   001B72  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   683   001B74  6EF8               	movwf	tblptru,c
   684   001B76  0009               	tblrd		*+	;fetch initializer
   685   001B78  CFF5 F058          	movff	tablat,__pdataCOMRAM
   686   001B7C  0009               	tblrd		*+	;fetch initializer
   687   001B7E  CFF5 F059          	movff	tablat,__pdataCOMRAM+1
   688                           
   689                           ; Clear objects allocated to BANK0 (35 bytes)
   690   001B82  EE00  F060         	lfsr	0,__pbssBANK0
   691   001B86  0E23               	movlw	35
   692   001B88                     clear_0:
   693   001B88  6AEE               	clrf	postinc0,c
   694   001B8A  06E8               	decf	wreg,f,c
   695   001B8C  E1FD               	bnz	clear_0
   696                           
   697                           ; Clear objects allocated to COMRAM (52 bytes)
   698   001B8E  EE00  F001         	lfsr	0,__pbssCOMRAM
   699   001B92  0E34               	movlw	52
   700   001B94                     clear_1:
   701   001B94  6AEE               	clrf	postinc0,c
   702   001B96  06E8               	decf	wreg,f,c
   703   001B98  E1FD               	bnz	clear_1
   704   001B9A                     end_of_initialization:
   705                           	callstack 0
   706   001B9A                     __end_of__initialization:
   707                           	callstack 0
   708   001B9A  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   709   001B9C  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   710   001B9E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   711   001BA0  6EF8               	movwf	tblptru,c
   712   001BA2  0100               	movlb	0
   713   001BA4  EF4A  F007         	goto	_main	;jump to C main() function
   714                           
   715                           	psect	bssCOMRAM
   716   000001                     __pbssCOMRAM:
   717                           	callstack 0
   718   000001                     _clock_reg:
   719                           	callstack 0
   720   000001                     	ds	3
   721   000004                     _secs:
   722                           	callstack 0
   723   000004                     	ds	2
   724   000006                     _min:
   725                           	callstack 0
   726   000006                     	ds	2
   727   000008                     _hrs:
   728                           	callstack 0
   729   000008                     	ds	2
   730   00000A                     _t_flag:
   731                           	callstack 0
   732   00000A                     	ds	2
   733   00000C                     _time_flag:
   734                           	callstack 0
   735   00000C                     	ds	2
   736   00000E                     change_pass@delay:
   737                           	callstack 0
   738   00000E                     	ds	2
   739   000010                     _i@menu$F461:
   740                           	callstack 0
   741   000010                     	ds	2
   742   000012                     _flag:
   743                           	callstack 0
   744   000012                     	ds	2
   745   000014                     password@delay:
   746                           	callstack 0
   747   000014                     	ds	2
   748   000016                     _sec:
   749                           	callstack 0
   750   000016                     	ds	2
   751   000018                     _flag1:
   752                           	callstack 0
   753   000018                     	ds	2
   754   00001A                     _i:
   755                           	callstack 0
   756   00001A                     	ds	2
   757   00001C                     _speed:
   758                           	callstack 0
   759   00001C                     	ds	2
   760   00001E                     _dummy:
   761                           	callstack 0
   762   00001E                     	ds	1
   763   00001F                     change_pass@pass_f:
   764                           	callstack 0
   765   00001F                     	ds	1
   766   000020                     change_pass@index2:
   767                           	callstack 0
   768   000020                     	ds	1
   769   000021                     change_pass@index1:
   770                           	callstack 0
   771   000021                     	ds	1
   772   000022                     view_log@i:
   773                           	callstack 0
   774   000022                     	ds	1
   775   000023                     _overflow:
   776                           	callstack 0
   777   000023                     	ds	1
   778   000024                     _lap:
   779                           	callstack 0
   780   000024                     	ds	1
   781   000025                     _cp_f:
   782                           	callstack 0
   783   000025                     	ds	1
   784   000026                     _j:
   785                           	callstack 0
   786   000026                     	ds	1
   787   000027                     read_switches@key:
   788                           	callstack 0
   789   000027                     	ds	1
   790   000028                     _key:
   791                           	callstack 0
   792   000028                     	ds	1
   793   000029                     _on:
   794                           	callstack 0
   795   000029                     	ds	1
   796   00002A                     _menu_f:
   797                           	callstack 0
   798   00002A                     	ds	1
   799   00002B                     _main_f:
   800                           	callstack 0
   801   00002B                     	ds	1
   802   00002C                     _time:
   803                           	callstack 0
   804   00002C                     	ds	9
   805                           
   806                           	psect	dataCOMRAM
   807   000058                     __pdataCOMRAM:
   808                           	callstack 0
   809   000058                     _atmpt:
   810                           	callstack 0
   811   000058                     	ds	1
   812   000059                     read_switches@once:
   813                           	callstack 0
   814   000059                     	ds	1
   815                           
   816                           	psect	bssBANK0
   817   000060                     __pbssBANK0:
   818                           	callstack 0
   819   000060                     _arr:
   820                           	callstack 0
   821   000060                     	ds	11
   822   00006B                     _re_password:
   823                           	callstack 0
   824   00006B                     	ds	4
   825   00006F                     isr@count:
   826                           	callstack 0
   827   00006F                     	ds	4
   828   000073                     password@count:
   829                           	callstack 0
   830   000073                     	ds	4
   831   000077                     _oe_pass:
   832                           	callstack 0
   833   000077                     	ds	4
   834   00007B                     _ent_pass:
   835                           	callstack 0
   836   00007B                     	ds	4
   837   00007F                     _new_password:
   838                           	callstack 0
   839   00007F                     	ds	4
   840                           
   841                           	psect	dataBANK0
   842   000083                     __pdataBANK0:
   843                           	callstack 0
   844   000083                     _event:
   845                           	callstack 0
   846   000083                     	ds	16
   847   000093                     _logs:
   848                           	callstack 0
   849   000093                     	ds	10
   850                           
   851                           	psect	cstackCOMRAM
   852   000035                     __pcstackCOMRAM:
   853                           	callstack 0
   854   000035                     ?_read_adc:
   855                           	callstack 0
   856   000035                     ?___lwdiv:
   857                           	callstack 0
   858   000035                     clcd_write@control_bit:
   859                           	callstack 0
   860   000035                     read_switches@detection_type:
   861                           	callstack 0
   862   000035                     i2c_write@data:
   863                           	callstack 0
   864   000035                     putch@byte:
   865                           	callstack 0
   866   000035                     ___lwdiv@dividend:
   867                           	callstack 0
   868                           
   869                           ; 2 bytes @ 0x0
   870   000035                     	ds	1
   871   000036                     clcd_write@byte:
   872                           	callstack 0
   873   000036                     read_ds1307@address:
   874                           	callstack 0
   875   000036                     write_external_eeprom@data:
   876                           	callstack 0
   877   000036                     read_external_eeprom@address:
   878                           	callstack 0
   879   000036                     puts@s:
   880                           	callstack 0
   881                           
   882                           ; 2 bytes @ 0x1
   883   000036                     	ds	1
   884   000037                     ??_init_clcd:
   885   000037                     ??_read_adc:
   886   000037                     read_ds1307@data:
   887                           	callstack 0
   888   000037                     read_external_eeprom@data:
   889                           	callstack 0
   890   000037                     clcd_print@data:
   891                           	callstack 0
   892   000037                     write_external_eeprom@i:
   893                           	callstack 0
   894   000037                     ___lwdiv@divisor:
   895                           	callstack 0
   896                           
   897                           ; 2 bytes @ 0x2
   898   000037                     	ds	1
   899   000038                     
   900                           ; 1 bytes @ 0x3
   901   000038                     	ds	1
   902   000039                     clcd_print@addr:
   903                           	callstack 0
   904   000039                     write_external_eeprom@address:
   905                           	callstack 0
   906   000039                     read_adc@reg_val:
   907                           	callstack 0
   908   000039                     ___lwdiv@quotient:
   909                           	callstack 0
   910                           
   911                           ; 2 bytes @ 0x4
   912   000039                     	ds	1
   913   00003A                     clear_log@key:
   914                           	callstack 0
   915                           
   916                           ; 1 bytes @ 0x5
   917   00003A                     	ds	1
   918   00003B                     read_adc@channel:
   919                           	callstack 0
   920   00003B                     ___lwdiv@counter:
   921                           	callstack 0
   922                           
   923                           ; 1 bytes @ 0x6
   924   00003B                     	ds	1
   925   00003C                     ?___lwmod:
   926                           	callstack 0
   927   00003C                     ___lwmod@dividend:
   928                           	callstack 0
   929                           
   930                           ; 2 bytes @ 0x7
   931   00003C                     	ds	2
   932   00003E                     ___lwmod@divisor:
   933                           	callstack 0
   934                           
   935                           ; 2 bytes @ 0x9
   936   00003E                     	ds	2
   937   000040                     ___lwmod@counter:
   938                           	callstack 0
   939                           
   940                           ; 1 bytes @ 0xB
   941   000040                     	ds	1
   942   000041                     ??_store_event:
   943   000041                     clcd_putch@addr:
   944                           	callstack 0
   945   000041                     write_ds1307@data:
   946                           	callstack 0
   947                           
   948                           ; 1 bytes @ 0xC
   949   000041                     	ds	1
   950   000042                     clcd_putch@data:
   951                           	callstack 0
   952   000042                     write_ds1307@address:
   953                           	callstack 0
   954                           
   955                           ; 1 bytes @ 0xD
   956   000042                     	ds	1
   957   000043                     ??_password:
   958   000043                     ??_view_log:
   959   000043                     ??_save_exit:
   960   000043                     init_ds1307@dummy:
   961                           	callstack 0
   962   000043                     menu@key:
   963                           	callstack 0
   964   000043                     display_speed@adc_reg_val:
   965                           	callstack 0
   966   000043                     store_event@i:
   967                           	callstack 0
   968                           
   969                           ; 2 bytes @ 0xE
   970   000043                     	ds	1
   971   000044                     
   972                           ; 1 bytes @ 0xF
   973   000044                     	ds	1
   974   000045                     ??_change_pass:
   975   000045                     display_event@key:
   976                           	callstack 0
   977   000045                     save_exit@key:
   978                           	callstack 0
   979   000045                     password@i_350:
   980                           	callstack 0
   981   000045                     download_log@i_541:
   982                           	callstack 0
   983                           
   984                           ; 4 bytes @ 0x10
   985   000045                     	ds	1
   986   000046                     ??_settime:
   987   000046                     dashboard@key:
   988                           	callstack 0
   989                           
   990                           ; 1 bytes @ 0x11
   991   000046                     	ds	1
   992   000047                     change_pass@i_578:
   993                           	callstack 0
   994                           
   995                           ; 4 bytes @ 0x12
   996   000047                     	ds	1
   997   000048                     view_log@key:
   998                           	callstack 0
   999   000048                     settime@key:
  1000                           	callstack 0
  1001                           
  1002                           ; 1 bytes @ 0x13
  1003   000048                     	ds	1
  1004   000049                     password@k:
  1005                           	callstack 0
  1006   000049                     download_log@i:
  1007                           	callstack 0
  1008                           
  1009                           ; 1 bytes @ 0x14
  1010   000049                     	ds	1
  1011   00004A                     password@k_339:
  1012                           	callstack 0
  1013   00004A                     download_log@j:
  1014                           	callstack 0
  1015                           
  1016                           ; 1 bytes @ 0x15
  1017   00004A                     	ds	1
  1018   00004B                     password@key:
  1019                           	callstack 0
  1020   00004B                     change_pass@i_583:
  1021                           	callstack 0
  1022                           
  1023                           ; 4 bytes @ 0x16
  1024   00004B                     	ds	1
  1025   00004C                     password@pass_f:
  1026                           	callstack 0
  1027                           
  1028                           ; 2 bytes @ 0x17
  1029   00004C                     	ds	2
  1030   00004E                     password@i_340:
  1031                           	callstack 0
  1032                           
  1033                           ; 2 bytes @ 0x19
  1034   00004E                     	ds	1
  1035   00004F                     change_pass@prev_i:
  1036                           	callstack 0
  1037                           
  1038                           ; 1 bytes @ 0x1A
  1039   00004F                     	ds	1
  1040   000050                     password@i:
  1041                           	callstack 0
  1042   000050                     change_pass@key:
  1043                           	callstack 0
  1044                           
  1045                           ; 1 bytes @ 0x1B
  1046   000050                     	ds	1
  1047   000051                     password@i_347:
  1048                           	callstack 0
  1049   000051                     change_pass@i:
  1050                           	callstack 0
  1051                           
  1052                           ; 2 bytes @ 0x1C
  1053   000051                     	ds	2
  1054   000053                     main@prev_key:
  1055                           	callstack 0
  1056                           
  1057                           ; 2 bytes @ 0x1E
  1058   000053                     	ds	2
  1059   000055                     main@delay:
  1060                           	callstack 0
  1061                           
  1062                           ; 2 bytes @ 0x20
  1063   000055                     	ds	2
  1064   000057                     main@key:
  1065                           	callstack 0
  1066                           
  1067                           ; 1 bytes @ 0x22
  1068   000057                     	ds	1
  1069                           
  1070 ;;
  1071 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1072 ;;
  1073 ;; *************** function _main *****************
  1074 ;; Defined at:
  1075 ;;		line 20 in file "main.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;		None
  1078 ;; Auto vars:     Size  Location     Type
  1079 ;;  delay           2   32[COMRAM] unsigned int 
  1080 ;;  prev_key        2   30[COMRAM] unsigned int 
  1081 ;;  key             1   34[COMRAM] unsigned char 
  1082 ;; Return value:  Size  Location     Type
  1083 ;;                  1    wreg      void 
  1084 ;; Registers used:
  1085 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1091 ;;      Params:         0       0       0       0       0       0       0
  1092 ;;      Locals:         5       0       0       0       0       0       0
  1093 ;;      Temps:          0       0       0       0       0       0       0
  1094 ;;      Totals:         5       0       0       0       0       0       0
  1095 ;;Total ram usage:        5 bytes
  1096 ;; Hardware stack levels required when called: 7
  1097 ;; This function calls:
  1098 ;;		_change_pass
  1099 ;;		_clear_log
  1100 ;;		_dashboard
  1101 ;;		_download_log
  1102 ;;		_inti_config
  1103 ;;		_menu
  1104 ;;		_password
  1105 ;;		_read_switches
  1106 ;;		_settime
  1107 ;;		_view_log
  1108 ;; This function is called by:
  1109 ;;		Startup code after reset
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113                           	psect	text0
  1114   000E94                     __ptext0:
  1115                           	callstack 0
  1116   000E94                     _main:
  1117                           	callstack 24
  1118   000E94                     
  1119                           ;main.c: 21:     inti_config();
  1120   000E94  EC16  F00F         	call	_inti_config	;wreg free
  1121   000E98                     
  1122                           ;main.c: 23:     char key;;main.c: 24:     unsigned int prev_key, delay=0;
  1123   000E98  0E00               	movlw	0
  1124   000E9A  6E56               	movwf	(main@delay+1)^0,c
  1125   000E9C  0E00               	movlw	0
  1126   000E9E  6E55               	movwf	main@delay^0,c
  1127   000EA0                     l3610:
  1128                           
  1129                           ;main.c: 26:         key = read_switches(0);
  1130   000EA0  0E00               	movlw	0
  1131   000EA2  EC61  F00C         	call	_read_switches
  1132   000EA6  6E57               	movwf	main@key^0,c
  1133   000EA8                     
  1134                           ;main.c: 28:         if(key!=0xFF)
  1135   000EA8  2857               	incf	main@key^0,w,c
  1136   000EAA  B4D8               	btfsc	status,2,c
  1137   000EAC  EF5A  F007         	goto	u3081
  1138   000EB0  EF5C  F007         	goto	u3080
  1139   000EB4                     u3081:
  1140   000EB4  EF7A  F007         	goto	l3626
  1141   000EB8                     u3080:
  1142   000EB8                     
  1143                           ;main.c: 29:         {;main.c: 30:             prev_key=key;
  1144   000EB8  C057  F053         	movff	main@key,main@prev_key
  1145   000EBC  6A54               	clrf	(main@prev_key+1)^0,c
  1146   000EBE                     
  1147                           ;main.c: 31:             delay++;
  1148   000EBE  4A55               	infsnz	main@delay^0,f,c
  1149   000EC0  2A56               	incf	(main@delay+1)^0,f,c
  1150   000EC2                     
  1151                           ;main.c: 33:         if(delay==1000)
  1152   000EC2  0EE8               	movlw	232
  1153   000EC4  1855               	xorwf	main@delay^0,w,c
  1154   000EC6  E107               	bnz	u3091
  1155   000EC8  0E03               	movlw	3
  1156   000ECA  1856               	xorwf	(main@delay+1)^0,w,c
  1157   000ECC  A4D8               	btfss	status,2,c
  1158   000ECE  EF6B  F007         	goto	u3091
  1159   000ED2  EF6D  F007         	goto	u3090
  1160   000ED6                     u3091:
  1161   000ED6  EF76  F007         	goto	l3624
  1162   000EDA                     u3090:
  1163   000EDA                     
  1164                           ;main.c: 34:         {;main.c: 35:             key=key+10;
  1165   000EDA  5057               	movf	main@key^0,w,c
  1166   000EDC  0F0A               	addlw	10
  1167   000EDE  6E57               	movwf	main@key^0,c
  1168   000EE0                     l3622:
  1169                           
  1170                           ;main.c: 36:             delay=0;
  1171   000EE0  0E00               	movlw	0
  1172   000EE2  6E56               	movwf	(main@delay+1)^0,c
  1173   000EE4  0E00               	movlw	0
  1174   000EE6  6E55               	movwf	main@delay^0,c
  1175                           
  1176                           ;main.c: 37:         }
  1177   000EE8  EF92  F007         	goto	l44
  1178   000EEC                     l3624:
  1179                           
  1180                           ;main.c: 39:             key=0;
  1181   000EEC  0E00               	movlw	0
  1182   000EEE  6E57               	movwf	main@key^0,c
  1183   000EF0  EF92  F007         	goto	l44
  1184   000EF4                     l3626:
  1185   000EF4  0EE8               	movlw	232
  1186   000EF6  5C55               	subwf	main@delay^0,w,c
  1187   000EF8  0E03               	movlw	3
  1188   000EFA  5856               	subwfb	(main@delay+1)^0,w,c
  1189   000EFC  B0D8               	btfsc	status,0,c
  1190   000EFE  EF83  F007         	goto	u3101
  1191   000F02  EF85  F007         	goto	u3100
  1192   000F06                     u3101:
  1193   000F06  EF92  F007         	goto	l44
  1194   000F0A                     u3100:
  1195   000F0A  5055               	movf	main@delay^0,w,c
  1196   000F0C  1056               	iorwf	(main@delay+1)^0,w,c
  1197   000F0E  B4D8               	btfsc	status,2,c
  1198   000F10  EF8C  F007         	goto	u3111
  1199   000F14  EF8E  F007         	goto	u3110
  1200   000F18                     u3111:
  1201   000F18  EF92  F007         	goto	l44
  1202   000F1C                     u3110:
  1203   000F1C                     
  1204                           ;main.c: 42:         {;main.c: 43:             key=prev_key;
  1205   000F1C  C053  F057         	movff	main@prev_key,main@key
  1206   000F20  EF70  F007         	goto	l3622
  1207   000F24                     l44:
  1208                           
  1209                           ;main.c: 47:         if(main_f == 0)
  1210   000F24  502B               	movf	_main_f^0,w,c
  1211   000F26  A4D8               	btfss	status,2,c
  1212   000F28  EF98  F007         	goto	u3121
  1213   000F2C  EF9A  F007         	goto	u3120
  1214   000F30                     u3121:
  1215   000F30  EF9F  F007         	goto	l3636
  1216   000F34                     u3120:
  1217   000F34                     
  1218                           ;main.c: 48:         {;main.c: 49:             dashboard(key);
  1219   000F34  5057               	movf	main@key^0,w,c
  1220   000F36  ECDD  F00B         	call	_dashboard
  1221                           
  1222                           ;main.c: 51:         }
  1223   000F3A  EF50  F007         	goto	l3610
  1224   000F3E                     l3636:
  1225   000F3E  042B               	decf	_main_f^0,w,c
  1226   000F40  A4D8               	btfss	status,2,c
  1227   000F42  EFA5  F007         	goto	u3131
  1228   000F46  EFA7  F007         	goto	u3130
  1229   000F4A                     u3131:
  1230   000F4A  EFAC  F007         	goto	l3640
  1231   000F4E                     u3130:
  1232   000F4E                     
  1233                           ;main.c: 53:         {;main.c: 54:             password(key);
  1234   000F4E  5057               	movf	main@key^0,w,c
  1235   000F50  EC09  F000         	call	_password
  1236                           
  1237                           ;main.c: 55:         }
  1238   000F54  EF50  F007         	goto	l3610
  1239   000F58                     l3640:
  1240   000F58  0E02               	movlw	2
  1241   000F5A  182B               	xorwf	_main_f^0,w,c
  1242   000F5C  A4D8               	btfss	status,2,c
  1243   000F5E  EFB3  F007         	goto	u3141
  1244   000F62  EFB5  F007         	goto	u3140
  1245   000F66                     u3141:
  1246   000F66  EFBA  F007         	goto	l3644
  1247   000F6A                     u3140:
  1248   000F6A                     
  1249                           ;main.c: 57:         {;main.c: 58:             menu(key);
  1250   000F6A  5057               	movf	main@key^0,w,c
  1251   000F6C  EC0A  F008         	call	_menu
  1252                           
  1253                           ;main.c: 59:         }
  1254   000F70  EF50  F007         	goto	l3610
  1255   000F74                     l3644:
  1256   000F74  0E03               	movlw	3
  1257   000F76  182B               	xorwf	_main_f^0,w,c
  1258   000F78  A4D8               	btfss	status,2,c
  1259   000F7A  EFC1  F007         	goto	u3151
  1260   000F7E  EFC3  F007         	goto	u3150
  1261   000F82                     u3151:
  1262   000F82  EF50  F007         	goto	l3610
  1263   000F86                     u3150:
  1264   000F86                     
  1265                           ;main.c: 61:         {;main.c: 62:             if(menu_f == 0)
  1266   000F86  502A               	movf	_menu_f^0,w,c
  1267   000F88  A4D8               	btfss	status,2,c
  1268   000F8A  EFC9  F007         	goto	u3161
  1269   000F8E  EFCB  F007         	goto	u3160
  1270   000F92                     u3161:
  1271   000F92  EFD0  F007         	goto	l3650
  1272   000F96                     u3160:
  1273   000F96                     
  1274                           ;main.c: 63:             {;main.c: 64:                 view_log(key);
  1275   000F96  5057               	movf	main@key^0,w,c
  1276   000F98  EC30  F006         	call	_view_log
  1277                           
  1278                           ;main.c: 65:             }
  1279   000F9C  EF50  F007         	goto	l3610
  1280   000FA0                     l3650:
  1281   000FA0  042A               	decf	_menu_f^0,w,c
  1282   000FA2  A4D8               	btfss	status,2,c
  1283   000FA4  EFD6  F007         	goto	u3171
  1284   000FA8  EFD8  F007         	goto	u3170
  1285   000FAC                     u3171:
  1286   000FAC  EFDC  F007         	goto	l3654
  1287   000FB0                     u3170:
  1288   000FB0                     
  1289                           ;main.c: 67:         {;main.c: 68:            download_log();
  1290   000FB0  EC79  F009         	call	_download_log	;wreg free
  1291                           
  1292                           ;main.c: 69:         }
  1293   000FB4  EF50  F007         	goto	l3610
  1294   000FB8                     l3654:
  1295   000FB8  0E02               	movlw	2
  1296   000FBA  182A               	xorwf	_menu_f^0,w,c
  1297   000FBC  A4D8               	btfss	status,2,c
  1298   000FBE  EFE3  F007         	goto	u3181
  1299   000FC2  EFE5  F007         	goto	u3180
  1300   000FC6                     u3181:
  1301   000FC6  EFEA  F007         	goto	l3658
  1302   000FCA                     u3180:
  1303   000FCA                     
  1304                           ;main.c: 71:         {;main.c: 72:            clear_log(key);
  1305   000FCA  5057               	movf	main@key^0,w,c
  1306   000FCC  EC1B  F00E         	call	_clear_log
  1307                           
  1308                           ;main.c: 73:         }
  1309   000FD0  EF50  F007         	goto	l3610
  1310   000FD4                     l3658:
  1311   000FD4  0E03               	movlw	3
  1312   000FD6  182A               	xorwf	_menu_f^0,w,c
  1313   000FD8  A4D8               	btfss	status,2,c
  1314   000FDA  EFF1  F007         	goto	u3191
  1315   000FDE  EFF3  F007         	goto	u3190
  1316   000FE2                     u3191:
  1317   000FE2  EFF8  F007         	goto	l3662
  1318   000FE6                     u3190:
  1319   000FE6                     
  1320                           ;main.c: 75:         {;main.c: 76:            settime(key);
  1321   000FE6  5057               	movf	main@key^0,w,c
  1322   000FE8  EC2C  F002         	call	_settime
  1323                           
  1324                           ;main.c: 77:         }
  1325   000FEC  EF50  F007         	goto	l3610
  1326   000FF0                     l3662:
  1327   000FF0  0E04               	movlw	4
  1328   000FF2  182A               	xorwf	_menu_f^0,w,c
  1329   000FF4  A4D8               	btfss	status,2,c
  1330   000FF6  EFFF  F007         	goto	u3201
  1331   000FFA  EF01  F008         	goto	u3200
  1332   000FFE                     u3201:
  1333   000FFE  EF06  F008         	goto	l56
  1334   001002                     u3200:
  1335   001002                     
  1336                           ;main.c: 79:         {;main.c: 80:             change_pass(key);
  1337   001002  5057               	movf	main@key^0,w,c
  1338   001004  EC3A  F004         	call	_change_pass
  1339   001008  EF50  F007         	goto	l3610
  1340   00100C                     l56:
  1341   00100C  EF50  F007         	goto	l3610
  1342   001010  EF07  F000         	goto	start
  1343   001014                     __end_of_main:
  1344                           	callstack 0
  1345                           
  1346 ;; *************** function _view_log *****************
  1347 ;; Defined at:
  1348 ;;		line 12 in file "view_log.c"
  1349 ;; Parameters:    Size  Location     Type
  1350 ;;  key             1    wreg     unsigned char 
  1351 ;; Auto vars:     Size  Location     Type
  1352 ;;  key             1   19[COMRAM] unsigned char 
  1353 ;; Return value:  Size  Location     Type
  1354 ;;                  1    wreg      void 
  1355 ;; Registers used:
  1356 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1357 ;; Tracked objects:
  1358 ;;		On entry : 0/0
  1359 ;;		On exit  : 0/0
  1360 ;;		Unchanged: 0/0
  1361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1362 ;;      Params:         0       0       0       0       0       0       0
  1363 ;;      Locals:         1       0       0       0       0       0       0
  1364 ;;      Temps:          5       0       0       0       0       0       0
  1365 ;;      Totals:         6       0       0       0       0       0       0
  1366 ;;Total ram usage:        6 bytes
  1367 ;; Hardware stack levels used: 1
  1368 ;; Hardware stack levels required when called: 5
  1369 ;; This function calls:
  1370 ;;		_clcd_print
  1371 ;;		_clcd_putch
  1372 ;;		_clcd_write
  1373 ;;		_read_external_eeprom
  1374 ;; This function is called by:
  1375 ;;		_main
  1376 ;; This function uses a non-reentrant model
  1377 ;;
  1378                           
  1379                           	psect	text1
  1380   000C60                     __ptext1:
  1381                           	callstack 0
  1382   000C60                     _view_log:
  1383                           	callstack 25
  1384                           
  1385                           ;incstack = 0
  1386                           ;view_log@key stored from wreg
  1387   000C60  6E48               	movwf	view_log@key^0,c
  1388   000C62                     
  1389                           ;view_log.c: 12: void view_log(char key);view_log.c: 13: {;view_log.c: 14:     static ch
      +                          ar i=0;;view_log.c: 15:     if(lap==0 && overflow==0)
  1390   000C62  5024               	movf	_lap^0,w,c
  1391   000C64  A4D8               	btfss	status,2,c
  1392   000C66  EF37  F006         	goto	u2331
  1393   000C6A  EF39  F006         	goto	u2330
  1394   000C6E                     u2331:
  1395   000C6E  EF49  F006         	goto	l3218
  1396   000C72                     u2330:
  1397   000C72  5023               	movf	_overflow^0,w,c
  1398   000C74  A4D8               	btfss	status,2,c
  1399   000C76  EF3F  F006         	goto	u2341
  1400   000C7A  EF41  F006         	goto	u2340
  1401   000C7E                     u2341:
  1402   000C7E  EF49  F006         	goto	l3218
  1403   000C82                     u2340:
  1404   000C82                     
  1405                           ;view_log.c: 16:         clcd_print("NO LOGS FOUND", (0x80 + (1)));
  1406   000C82  0E8E               	movlw	low STR_29
  1407   000C84  6E37               	movwf	clcd_print@data^0,c
  1408   000C86  0E2F               	movlw	high STR_29
  1409   000C88  6E38               	movwf	(clcd_print@data+1)^0,c
  1410   000C8A  0E81               	movlw	129
  1411   000C8C  6E39               	movwf	clcd_print@addr^0,c
  1412   000C8E  EC0C  F00D         	call	_clcd_print	;wreg free
  1413   000C92                     l3218:
  1414                           
  1415                           ;view_log.c: 18:     if(key==5)
  1416   000C92  0E05               	movlw	5
  1417   000C94  1848               	xorwf	view_log@key^0,w,c
  1418   000C96  A4D8               	btfss	status,2,c
  1419   000C98  EF50  F006         	goto	u2351
  1420   000C9C  EF52  F006         	goto	u2350
  1421   000CA0                     u2351:
  1422   000CA0  EF7F  F006         	goto	l3230
  1423   000CA4                     u2350:
  1424   000CA4                     
  1425                           ;view_log.c: 19:     {;view_log.c: 20:         if(overflow)
  1426   000CA4  5023               	movf	_overflow^0,w,c
  1427   000CA6  B4D8               	btfsc	status,2,c
  1428   000CA8  EF58  F006         	goto	u2361
  1429   000CAC  EF5A  F006         	goto	u2360
  1430   000CB0                     u2361:
  1431   000CB0  EF65  F006         	goto	l3226
  1432   000CB4                     u2360:
  1433   000CB4                     
  1434                           ;view_log.c: 21:         {;view_log.c: 22:             if(i<9)
  1435   000CB4  0E09               	movlw	9
  1436   000CB6  6022               	cpfslt	view_log@i^0,c
  1437   000CB8  EF60  F006         	goto	u2371
  1438   000CBC  EF62  F006         	goto	u2370
  1439   000CC0                     u2371:
  1440   000CC0  EF91  F006         	goto	l3236
  1441   000CC4                     u2370:
  1442   000CC4                     l3224:
  1443                           
  1444                           ;view_log.c: 23:                 i++;
  1445   000CC4  2A22               	incf	view_log@i^0,f,c
  1446   000CC6  EF91  F006         	goto	l3236
  1447   000CCA                     l3226:
  1448   000CCA  0EFF               	movlw	255
  1449   000CCC  2424               	addwf	_lap^0,w,c
  1450   000CCE  6E43               	movwf	??_view_log^0,c
  1451   000CD0  6A44               	clrf	(??_view_log+1)^0,c
  1452   000CD2  0EFF               	movlw	255
  1453   000CD4  2244               	addwfc	(??_view_log+1)^0,f,c
  1454   000CD6  5022               	movf	view_log@i^0,w,c
  1455   000CD8  6E45               	movwf	(??_view_log+2)^0,c
  1456   000CDA  6A46               	clrf	(??_view_log+3)^0,c
  1457   000CDC  5043               	movf	??_view_log^0,w,c
  1458   000CDE  5C45               	subwf	(??_view_log+2)^0,w,c
  1459   000CE0  5046               	movf	(??_view_log+3)^0,w,c
  1460   000CE2  0A80               	xorlw	128
  1461   000CE4  6E47               	movwf	(??_view_log+4)^0,c
  1462   000CE6  5044               	movf	(??_view_log+1)^0,w,c
  1463   000CE8  0A80               	xorlw	128
  1464   000CEA  5847               	subwfb	(??_view_log+4)^0,w,c
  1465   000CEC  B0D8               	btfsc	status,0,c
  1466   000CEE  EF7B  F006         	goto	u2381
  1467   000CF2  EF7D  F006         	goto	u2380
  1468   000CF6                     u2381:
  1469   000CF6  EF91  F006         	goto	l3236
  1470   000CFA                     u2380:
  1471   000CFA  EF62  F006         	goto	l3224
  1472   000CFE                     l3230:
  1473   000CFE  0E06               	movlw	6
  1474   000D00  1848               	xorwf	view_log@key^0,w,c
  1475   000D02  A4D8               	btfss	status,2,c
  1476   000D04  EF86  F006         	goto	u2391
  1477   000D08  EF88  F006         	goto	u2390
  1478   000D0C                     u2391:
  1479   000D0C  EF91  F006         	goto	l3236
  1480   000D10                     u2390:
  1481   000D10                     
  1482                           ;view_log.c: 29:     {;view_log.c: 30:         if(i>0)
  1483   000D10  5022               	movf	view_log@i^0,w,c
  1484   000D12  B4D8               	btfsc	status,2,c
  1485   000D14  EF8E  F006         	goto	u2401
  1486   000D18  EF90  F006         	goto	u2400
  1487   000D1C                     u2401:
  1488   000D1C  EF91  F006         	goto	l3236
  1489   000D20                     u2400:
  1490   000D20                     
  1491                           ;view_log.c: 31:             i--;
  1492   000D20  0622               	decf	view_log@i^0,f,c
  1493   000D22                     l3236:
  1494                           
  1495                           ;view_log.c: 33:     if(key==16)
  1496   000D22  0E10               	movlw	16
  1497   000D24  1848               	xorwf	view_log@key^0,w,c
  1498   000D26  A4D8               	btfss	status,2,c
  1499   000D28  EF98  F006         	goto	u2411
  1500   000D2C  EF9A  F006         	goto	u2410
  1501   000D30                     u2411:
  1502   000D30  EFA1  F006         	goto	l3242
  1503   000D34                     u2410:
  1504   000D34                     
  1505                           ;view_log.c: 34:     {;view_log.c: 35:         clcd_write(0x01, 0);
  1506   000D34  0E00               	movlw	0
  1507   000D36  6E35               	movwf	clcd_write@control_bit^0,c
  1508   000D38  0E01               	movlw	1
  1509   000D3A  EC5C  F00E         	call	_clcd_write
  1510   000D3E                     
  1511                           ;view_log.c: 36:         main_f=2;
  1512   000D3E  0E02               	movlw	2
  1513   000D40  6E2B               	movwf	_main_f^0,c
  1514   000D42                     l3242:
  1515                           
  1516                           ;view_log.c: 39:     if(lap || overflow)
  1517   000D42  5024               	movf	_lap^0,w,c
  1518   000D44  A4D8               	btfss	status,2,c
  1519   000D46  EFA7  F006         	goto	u2421
  1520   000D4A  EFA9  F006         	goto	u2420
  1521   000D4E                     u2421:
  1522   000D4E  EFB1  F006         	goto	l3246
  1523   000D52                     u2420:
  1524   000D52  5023               	movf	_overflow^0,w,c
  1525   000D54  B4D8               	btfsc	status,2,c
  1526   000D56  EFAF  F006         	goto	u2431
  1527   000D5A  EFB1  F006         	goto	u2430
  1528   000D5E                     u2431:
  1529   000D5E  EF49  F007         	goto	l526
  1530   000D62                     u2430:
  1531   000D62                     l3246:
  1532                           
  1533                           ;view_log.c: 40:     {;view_log.c: 41:     clcd_print("LOGS", (0x80 + (6)));
  1534   000D62  0EC7               	movlw	low STR_30
  1535   000D64  6E37               	movwf	clcd_print@data^0,c
  1536   000D66  0E2F               	movlw	high STR_30
  1537   000D68  6E38               	movwf	(clcd_print@data+1)^0,c
  1538   000D6A  0E86               	movlw	134
  1539   000D6C  6E39               	movwf	clcd_print@addr^0,c
  1540   000D6E  EC0C  F00D         	call	_clcd_print	;wreg free
  1541   000D72                     
  1542                           ;view_log.c: 42:     clcd_putch((i+1)+48, (0xC0 + (0)));
  1543   000D72  0EC0               	movlw	192
  1544   000D74  6E41               	movwf	clcd_putch@addr^0,c
  1545   000D76  5022               	movf	view_log@i^0,w,c
  1546   000D78  0F31               	addlw	49
  1547   000D7A  ECFF  F00E         	call	_clcd_putch
  1548   000D7E                     
  1549                           ;view_log.c: 43:     clcd_print(".", (0xC0 + (1)));
  1550   000D7E  0EF7               	movlw	low STR_31
  1551   000D80  6E37               	movwf	clcd_print@data^0,c
  1552   000D82  0E2F               	movlw	high STR_31
  1553   000D84  6E38               	movwf	(clcd_print@data+1)^0,c
  1554   000D86  0EC1               	movlw	193
  1555   000D88  6E39               	movwf	clcd_print@addr^0,c
  1556   000D8A  EC0C  F00D         	call	_clcd_print	;wreg free
  1557   000D8E                     
  1558                           ;view_log.c: 44:     clcd_putch(read_external_eeprom(i*10+0), (0xC0 + (2)));
  1559   000D8E  0EC2               	movlw	194
  1560   000D90  6E41               	movwf	clcd_putch@addr^0,c
  1561   000D92  5022               	movf	view_log@i^0,w,c
  1562   000D94  0D0A               	mullw	10
  1563   000D96  50F3               	movf	243,w,c
  1564   000D98  EC94  F00E         	call	_read_external_eeprom
  1565   000D9C  ECFF  F00E         	call	_clcd_putch
  1566   000DA0                     
  1567                           ;view_log.c: 45:     clcd_putch(read_external_eeprom(i*10+1), (0xC0 + (3)));
  1568   000DA0  0EC3               	movlw	195
  1569   000DA2  6E41               	movwf	clcd_putch@addr^0,c
  1570   000DA4  5022               	movf	view_log@i^0,w,c
  1571   000DA6  0D0A               	mullw	10
  1572   000DA8  28F3               	incf	243,w,c
  1573   000DAA  EC94  F00E         	call	_read_external_eeprom
  1574   000DAE  ECFF  F00E         	call	_clcd_putch
  1575   000DB2                     
  1576                           ;view_log.c: 46:     clcd_print(":", (0xC0 + (4)));
  1577   000DB2  0EF9               	movlw	low STR_32
  1578   000DB4  6E37               	movwf	clcd_print@data^0,c
  1579   000DB6  0E2F               	movlw	high STR_32
  1580   000DB8  6E38               	movwf	(clcd_print@data+1)^0,c
  1581   000DBA  0EC4               	movlw	196
  1582   000DBC  6E39               	movwf	clcd_print@addr^0,c
  1583   000DBE  EC0C  F00D         	call	_clcd_print	;wreg free
  1584   000DC2                     
  1585                           ;view_log.c: 47:     clcd_putch(read_external_eeprom(i*10+2), (0xC0 + (5)));
  1586   000DC2  0EC5               	movlw	197
  1587   000DC4  6E41               	movwf	clcd_putch@addr^0,c
  1588   000DC6  5022               	movf	view_log@i^0,w,c
  1589   000DC8  0D0A               	mullw	10
  1590   000DCA  50F3               	movf	243,w,c
  1591   000DCC  0F02               	addlw	2
  1592   000DCE  EC94  F00E         	call	_read_external_eeprom
  1593   000DD2  ECFF  F00E         	call	_clcd_putch
  1594   000DD6                     
  1595                           ;view_log.c: 48:     clcd_putch(read_external_eeprom(i*10+3), (0xC0 + (6)));
  1596   000DD6  0EC6               	movlw	198
  1597   000DD8  6E41               	movwf	clcd_putch@addr^0,c
  1598   000DDA  5022               	movf	view_log@i^0,w,c
  1599   000DDC  0D0A               	mullw	10
  1600   000DDE  50F3               	movf	243,w,c
  1601   000DE0  0F03               	addlw	3
  1602   000DE2  EC94  F00E         	call	_read_external_eeprom
  1603   000DE6  ECFF  F00E         	call	_clcd_putch
  1604   000DEA                     
  1605                           ;view_log.c: 49:     clcd_print(":", (0xC0 + (7)));
  1606   000DEA  0EF9               	movlw	low STR_32
  1607   000DEC  6E37               	movwf	clcd_print@data^0,c
  1608   000DEE  0E2F               	movlw	high STR_32
  1609   000DF0  6E38               	movwf	(clcd_print@data+1)^0,c
  1610   000DF2  0EC7               	movlw	199
  1611   000DF4  6E39               	movwf	clcd_print@addr^0,c
  1612   000DF6  EC0C  F00D         	call	_clcd_print	;wreg free
  1613   000DFA                     
  1614                           ;view_log.c: 50:     clcd_putch(read_external_eeprom(i*10+4), (0xC0 + (8)));
  1615   000DFA  0EC8               	movlw	200
  1616   000DFC  6E41               	movwf	clcd_putch@addr^0,c
  1617   000DFE  5022               	movf	view_log@i^0,w,c
  1618   000E00  0D0A               	mullw	10
  1619   000E02  50F3               	movf	243,w,c
  1620   000E04  0F04               	addlw	4
  1621   000E06  EC94  F00E         	call	_read_external_eeprom
  1622   000E0A  ECFF  F00E         	call	_clcd_putch
  1623   000E0E                     
  1624                           ;view_log.c: 51:     clcd_putch(read_external_eeprom(i*10+5), (0xC0 + (9)));
  1625   000E0E  0EC9               	movlw	201
  1626   000E10  6E41               	movwf	clcd_putch@addr^0,c
  1627   000E12  5022               	movf	view_log@i^0,w,c
  1628   000E14  0D0A               	mullw	10
  1629   000E16  50F3               	movf	243,w,c
  1630   000E18  0F05               	addlw	5
  1631   000E1A  EC94  F00E         	call	_read_external_eeprom
  1632   000E1E  ECFF  F00E         	call	_clcd_putch
  1633   000E22                     
  1634                           ;view_log.c: 52:     clcd_print(":", (0xC0 + (10)));
  1635   000E22  0EF9               	movlw	low STR_32
  1636   000E24  6E37               	movwf	clcd_print@data^0,c
  1637   000E26  0E2F               	movlw	high STR_32
  1638   000E28  6E38               	movwf	(clcd_print@data+1)^0,c
  1639   000E2A  0ECA               	movlw	202
  1640   000E2C  6E39               	movwf	clcd_print@addr^0,c
  1641   000E2E  EC0C  F00D         	call	_clcd_print	;wreg free
  1642   000E32                     
  1643                           ;view_log.c: 53:     clcd_putch(read_external_eeprom(i*10+6), (0xC0 + (11)));
  1644   000E32  0ECB               	movlw	203
  1645   000E34  6E41               	movwf	clcd_putch@addr^0,c
  1646   000E36  5022               	movf	view_log@i^0,w,c
  1647   000E38  0D0A               	mullw	10
  1648   000E3A  50F3               	movf	243,w,c
  1649   000E3C  0F06               	addlw	6
  1650   000E3E  EC94  F00E         	call	_read_external_eeprom
  1651   000E42  ECFF  F00E         	call	_clcd_putch
  1652   000E46                     
  1653                           ;view_log.c: 54:     clcd_putch(read_external_eeprom(i*10+7), (0xC0 + (12)));
  1654   000E46  0ECC               	movlw	204
  1655   000E48  6E41               	movwf	clcd_putch@addr^0,c
  1656   000E4A  5022               	movf	view_log@i^0,w,c
  1657   000E4C  0D0A               	mullw	10
  1658   000E4E  50F3               	movf	243,w,c
  1659   000E50  0F07               	addlw	7
  1660   000E52  EC94  F00E         	call	_read_external_eeprom
  1661   000E56  ECFF  F00E         	call	_clcd_putch
  1662   000E5A                     
  1663                           ;view_log.c: 55:     clcd_print(":", (0xC0 + (13)));
  1664   000E5A  0EF9               	movlw	low STR_32
  1665   000E5C  6E37               	movwf	clcd_print@data^0,c
  1666   000E5E  0E2F               	movlw	high STR_32
  1667   000E60  6E38               	movwf	(clcd_print@data+1)^0,c
  1668   000E62  0ECD               	movlw	205
  1669   000E64  6E39               	movwf	clcd_print@addr^0,c
  1670   000E66  EC0C  F00D         	call	_clcd_print	;wreg free
  1671   000E6A                     
  1672                           ;view_log.c: 56:     clcd_putch(read_external_eeprom(i*10+8), (0xC0 + (14)));
  1673   000E6A  0ECE               	movlw	206
  1674   000E6C  6E41               	movwf	clcd_putch@addr^0,c
  1675   000E6E  5022               	movf	view_log@i^0,w,c
  1676   000E70  0D0A               	mullw	10
  1677   000E72  50F3               	movf	243,w,c
  1678   000E74  0F08               	addlw	8
  1679   000E76  EC94  F00E         	call	_read_external_eeprom
  1680   000E7A  ECFF  F00E         	call	_clcd_putch
  1681   000E7E                     
  1682                           ;view_log.c: 57:     clcd_putch(read_external_eeprom(i*10+9), (0xC0 + (15)));
  1683   000E7E  0ECF               	movlw	207
  1684   000E80  6E41               	movwf	clcd_putch@addr^0,c
  1685   000E82  5022               	movf	view_log@i^0,w,c
  1686   000E84  0D0A               	mullw	10
  1687   000E86  50F3               	movf	243,w,c
  1688   000E88  0F09               	addlw	9
  1689   000E8A  EC94  F00E         	call	_read_external_eeprom
  1690   000E8E  ECFF  F00E         	call	_clcd_putch
  1691   000E92                     l526:
  1692   000E92  0012               	return		;funcret
  1693   000E94                     __end_of_view_log:
  1694                           	callstack 0
  1695                           
  1696 ;; *************** function _settime *****************
  1697 ;; Defined at:
  1698 ;;		line 13 in file "set_time.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;  key             1    wreg     unsigned char 
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;  key             1   19[COMRAM] unsigned char 
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  1    wreg      void 
  1705 ;; Registers used:
  1706 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1712 ;;      Params:         0       0       0       0       0       0       0
  1713 ;;      Locals:         1       0       0       0       0       0       0
  1714 ;;      Temps:          2       0       0       0       0       0       0
  1715 ;;      Totals:         3       0       0       0       0       0       0
  1716 ;;Total ram usage:        3 bytes
  1717 ;; Hardware stack levels used: 1
  1718 ;; Hardware stack levels required when called: 6
  1719 ;; This function calls:
  1720 ;;		_clcd_print
  1721 ;;		_save_exit
  1722 ;; This function is called by:
  1723 ;;		_main
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727                           	psect	text2
  1728   000458                     __ptext2:
  1729                           	callstack 0
  1730   000458                     _settime:
  1731                           	callstack 24
  1732                           
  1733                           ;incstack = 0
  1734                           ;settime@key stored from wreg
  1735   000458  6E48               	movwf	settime@key^0,c
  1736   00045A                     
  1737                           ;set_time.c: 13: void settime(char key);set_time.c: 14: {;set_time.c: 15:     if (key ==
      +                           6)
  1738   00045A  0E06               	movlw	6
  1739   00045C  1848               	xorwf	settime@key^0,w,c
  1740   00045E  A4D8               	btfss	status,2,c
  1741   000460  EF34  F002         	goto	u2521
  1742   000464  EF36  F002         	goto	u2520
  1743   000468                     u2521:
  1744   000468  EF4A  F002         	goto	l3348
  1745   00046C                     u2520:
  1746   00046C                     
  1747                           ;set_time.c: 16:     {;set_time.c: 17:         ++time_flag;
  1748   00046C  4A0C               	infsnz	_time_flag^0,f,c
  1749   00046E  2A0D               	incf	(_time_flag+1)^0,f,c
  1750   000470                     
  1751                           ;set_time.c: 18:         if (time_flag > 2)
  1752   000470  BE0D               	btfsc	(_time_flag+1)^0,7,c
  1753   000472  EF44  F002         	goto	u2531
  1754   000476  500D               	movf	(_time_flag+1)^0,w,c
  1755   000478  E109               	bnz	u2530
  1756   00047A  0E03               	movlw	3
  1757   00047C  5C0C               	subwf	_time_flag^0,w,c
  1758   00047E  A0D8               	btfss	status,0,c
  1759   000480  EF44  F002         	goto	u2531
  1760   000484  EF46  F002         	goto	u2530
  1761   000488                     u2531:
  1762   000488  EF4A  F002         	goto	l3348
  1763   00048C                     u2530:
  1764   00048C                     
  1765                           ;set_time.c: 19:             time_flag = 0;
  1766   00048C  0E00               	movlw	0
  1767   00048E  6E0D               	movwf	(_time_flag+1)^0,c
  1768   000490  0E00               	movlw	0
  1769   000492  6E0C               	movwf	_time_flag^0,c
  1770   000494                     l3348:
  1771                           
  1772                           ;set_time.c: 22:     if (time_flag == 0)
  1773   000494  500C               	movf	_time_flag^0,w,c
  1774   000496  100D               	iorwf	(_time_flag+1)^0,w,c
  1775   000498  A4D8               	btfss	status,2,c
  1776   00049A  EF51  F002         	goto	u2541
  1777   00049E  EF53  F002         	goto	u2540
  1778   0004A2                     u2541:
  1779   0004A2  EFF7  F002         	goto	l3392
  1780   0004A6                     u2540:
  1781   0004A6                     
  1782                           ;set_time.c: 23:     {;set_time.c: 24:         clcd_print("HH:MM:SS", (0x80 + (0)));
  1783   0004A6  0EB6               	movlw	low STR_55
  1784   0004A8  6E37               	movwf	clcd_print@data^0,c
  1785   0004AA  0E2F               	movlw	high STR_55
  1786   0004AC  6E38               	movwf	(clcd_print@data+1)^0,c
  1787   0004AE  0E80               	movlw	128
  1788   0004B0  6E39               	movwf	clcd_print@addr^0,c
  1789   0004B2  EC0C  F00D         	call	_clcd_print	;wreg free
  1790                           
  1791                           ;set_time.c: 25:         clcd_print(time, (0xC0 + (0)));
  1792   0004B6  0E2C               	movlw	low _time
  1793   0004B8  6E37               	movwf	clcd_print@data^0,c
  1794   0004BA  6A38               	clrf	(clcd_print@data+1)^0,c
  1795   0004BC  0EC0               	movlw	192
  1796   0004BE  6E39               	movwf	clcd_print@addr^0,c
  1797   0004C0  EC0C  F00D         	call	_clcd_print	;wreg free
  1798   0004C4                     
  1799                           ;set_time.c: 26:         if (t_flag >= 0 && t_flag < 100)
  1800   0004C4  BE0B               	btfsc	(_t_flag+1)^0,7,c
  1801   0004C6  EF67  F002         	goto	u2551
  1802   0004CA  EF69  F002         	goto	u2550
  1803   0004CE                     u2551:
  1804   0004CE  EF82  F002         	goto	l3360
  1805   0004D2                     u2550:
  1806   0004D2  BE0B               	btfsc	(_t_flag+1)^0,7,c
  1807   0004D4  EF77  F002         	goto	u2560
  1808   0004D8  500B               	movf	(_t_flag+1)^0,w,c
  1809   0004DA  E107               	bnz	u2561
  1810   0004DC  0E64               	movlw	100
  1811   0004DE  5C0A               	subwf	_t_flag^0,w,c
  1812   0004E0  B0D8               	btfsc	status,0,c
  1813   0004E2  EF75  F002         	goto	u2561
  1814   0004E6  EF77  F002         	goto	u2560
  1815   0004EA                     u2561:
  1816   0004EA  EF82  F002         	goto	l3360
  1817   0004EE                     u2560:
  1818   0004EE                     
  1819                           ;set_time.c: 27:         {;set_time.c: 28:             clcd_print(time, (0xC0 + (0)));
  1820   0004EE  0E2C               	movlw	low _time
  1821   0004F0  6E37               	movwf	clcd_print@data^0,c
  1822   0004F2  6A38               	clrf	(clcd_print@data+1)^0,c
  1823   0004F4  0EC0               	movlw	192
  1824   0004F6  6E39               	movwf	clcd_print@addr^0,c
  1825   0004F8  EC0C  F00D         	call	_clcd_print	;wreg free
  1826   0004FC                     
  1827                           ;set_time.c: 29:             ++t_flag;
  1828   0004FC  4A0A               	infsnz	_t_flag^0,f,c
  1829   0004FE  2A0B               	incf	(_t_flag+1)^0,f,c
  1830                           
  1831                           ;set_time.c: 30:         }
  1832   000500  EFBA  F002         	goto	l3372
  1833   000504                     l3360:
  1834   000504  BE0B               	btfsc	(_t_flag+1)^0,7,c
  1835   000506  EF8E  F002         	goto	u2571
  1836   00050A  500B               	movf	(_t_flag+1)^0,w,c
  1837   00050C  E109               	bnz	u2570
  1838   00050E  0E64               	movlw	100
  1839   000510  5C0A               	subwf	_t_flag^0,w,c
  1840   000512  A0D8               	btfss	status,0,c
  1841   000514  EF8E  F002         	goto	u2571
  1842   000518  EF90  F002         	goto	u2570
  1843   00051C                     u2571:
  1844   00051C  EFBA  F002         	goto	l3372
  1845   000520                     u2570:
  1846   000520  BE0B               	btfsc	(_t_flag+1)^0,7,c
  1847   000522  EF9E  F002         	goto	u2580
  1848   000526  500B               	movf	(_t_flag+1)^0,w,c
  1849   000528  E107               	bnz	u2581
  1850   00052A  0EC8               	movlw	200
  1851   00052C  5C0A               	subwf	_t_flag^0,w,c
  1852   00052E  B0D8               	btfsc	status,0,c
  1853   000530  EF9C  F002         	goto	u2581
  1854   000534  EF9E  F002         	goto	u2580
  1855   000538                     u2581:
  1856   000538  EFBA  F002         	goto	l3372
  1857   00053C                     u2580:
  1858   00053C                     
  1859                           ;set_time.c: 32:         {;set_time.c: 33:             clcd_print("  ", (0xC0 + (0)));
  1860   00053C  0EAA               	movlw	low (STR_23+20)
  1861   00053E  6E37               	movwf	clcd_print@data^0,c
  1862   000540  0E2E               	movlw	high (STR_23+20)
  1863   000542  6E38               	movwf	(clcd_print@data+1)^0,c
  1864   000544  0EC0               	movlw	192
  1865   000546  6E39               	movwf	clcd_print@addr^0,c
  1866   000548  EC0C  F00D         	call	_clcd_print	;wreg free
  1867   00054C                     
  1868                           ;set_time.c: 34:             ++t_flag;
  1869   00054C  4A0A               	infsnz	_t_flag^0,f,c
  1870   00054E  2A0B               	incf	(_t_flag+1)^0,f,c
  1871   000550                     
  1872                           ;set_time.c: 35:             if (t_flag >= 199)
  1873   000550  BE0B               	btfsc	(_t_flag+1)^0,7,c
  1874   000552  EFB4  F002         	goto	u2591
  1875   000556  500B               	movf	(_t_flag+1)^0,w,c
  1876   000558  E109               	bnz	u2590
  1877   00055A  0EC7               	movlw	199
  1878   00055C  5C0A               	subwf	_t_flag^0,w,c
  1879   00055E  A0D8               	btfss	status,0,c
  1880   000560  EFB4  F002         	goto	u2591
  1881   000564  EFB6  F002         	goto	u2590
  1882   000568                     u2591:
  1883   000568  EFBA  F002         	goto	l3372
  1884   00056C                     u2590:
  1885   00056C                     
  1886                           ;set_time.c: 36:                 t_flag = 0;
  1887   00056C  0E00               	movlw	0
  1888   00056E  6E0B               	movwf	(_t_flag+1)^0,c
  1889   000570  0E00               	movlw	0
  1890   000572  6E0A               	movwf	_t_flag^0,c
  1891   000574                     l3372:
  1892                           
  1893                           ;set_time.c: 39:         if (key == 5)
  1894   000574  0E05               	movlw	5
  1895   000576  1848               	xorwf	settime@key^0,w,c
  1896   000578  A4D8               	btfss	status,2,c
  1897   00057A  EFC1  F002         	goto	u2601
  1898   00057E  EFC3  F002         	goto	u2600
  1899   000582                     u2601:
  1900   000582  EF20  F004         	goto	l3464
  1901   000586                     u2600:
  1902   000586                     
  1903                           ;set_time.c: 40:         {;set_time.c: 42:             if (time[1] < '9')
  1904   000586  0E39               	movlw	57
  1905   000588  602D               	cpfslt	(_time+1)^0,c
  1906   00058A  EFC9  F002         	goto	u2611
  1907   00058E  EFCB  F002         	goto	u2610
  1908   000592                     u2611:
  1909   000592  EFE4  F002         	goto	l3384
  1910   000596                     u2610:
  1911   000596                     
  1912                           ;set_time.c: 43:             {;set_time.c: 44:                 time[1]++;
  1913   000596  2A2D               	incf	(_time+1)^0,f,c
  1914   000598                     
  1915                           ;set_time.c: 45:                 if(time[0] == '2' && time[1] == '4')
  1916   000598  0E32               	movlw	50
  1917   00059A  182C               	xorwf	_time^0,w,c
  1918   00059C  A4D8               	btfss	status,2,c
  1919   00059E  EFD3  F002         	goto	u2621
  1920   0005A2  EFD5  F002         	goto	u2620
  1921   0005A6                     u2621:
  1922   0005A6  EFF5  F002         	goto	l750
  1923   0005AA                     u2620:
  1924   0005AA  0E34               	movlw	52
  1925   0005AC  182D               	xorwf	(_time+1)^0,w,c
  1926   0005AE  A4D8               	btfss	status,2,c
  1927   0005B0  EFDC  F002         	goto	u2631
  1928   0005B4  EFDE  F002         	goto	u2630
  1929   0005B8                     u2631:
  1930   0005B8  EFF5  F002         	goto	l750
  1931   0005BC                     u2630:
  1932   0005BC                     
  1933                           ;set_time.c: 46:                 {;set_time.c: 47:                     time[0] = '0';
  1934   0005BC  0E30               	movlw	48
  1935   0005BE  6E2C               	movwf	_time^0,c
  1936                           
  1937                           ;set_time.c: 48:                     time[1]= '0';
  1938   0005C0  0E30               	movlw	48
  1939   0005C2  6E2D               	movwf	(_time+1)^0,c
  1940   0005C4  EF20  F004         	goto	l3464
  1941   0005C8                     l3384:
  1942                           
  1943                           ;set_time.c: 55:             {;set_time.c: 56:                 time[1] = '0';
  1944   0005C8  0E30               	movlw	48
  1945   0005CA  6E2D               	movwf	(_time+1)^0,c
  1946   0005CC                     
  1947                           ;set_time.c: 57:                 if (time[0] < '2')
  1948   0005CC  0E32               	movlw	50
  1949   0005CE  602C               	cpfslt	_time^0,c
  1950   0005D0  EFEC  F002         	goto	u2641
  1951   0005D4  EFEE  F002         	goto	u2640
  1952   0005D8                     u2641:
  1953   0005D8  EFF1  F002         	goto	l3390
  1954   0005DC                     u2640:
  1955   0005DC                     
  1956                           ;set_time.c: 59:                    ++time[0];
  1957   0005DC  2A2C               	incf	_time^0,f,c
  1958   0005DE  EF20  F004         	goto	l3464
  1959   0005E2                     l3390:
  1960                           
  1961                           ;set_time.c: 61:                 {;set_time.c: 62:                     time[0]='0';
  1962   0005E2  0E30               	movlw	48
  1963   0005E4  6E2C               	movwf	_time^0,c
  1964   0005E6  EF20  F004         	goto	l3464
  1965   0005EA                     l750:
  1966                           
  1967                           ;set_time.c: 67:     }
  1968   0005EA  EF20  F004         	goto	l3464
  1969   0005EE                     l3392:
  1970   0005EE  040C               	decf	_time_flag^0,w,c
  1971   0005F0  100D               	iorwf	(_time_flag+1)^0,w,c
  1972   0005F2  A4D8               	btfss	status,2,c
  1973   0005F4  EFFE  F002         	goto	u2651
  1974   0005F8  EF00  F003         	goto	u2650
  1975   0005FC                     u2651:
  1976   0005FC  EF90  F003         	goto	l3428
  1977   000600                     u2650:
  1978   000600                     
  1979                           ;set_time.c: 69:         clcd_print("HH:MM:SS", (0x80 + (0)));
  1980   000600  0EB6               	movlw	low STR_55
  1981   000602  6E37               	movwf	clcd_print@data^0,c
  1982   000604  0E2F               	movlw	high STR_55
  1983   000606  6E38               	movwf	(clcd_print@data+1)^0,c
  1984   000608  0E80               	movlw	128
  1985   00060A  6E39               	movwf	clcd_print@addr^0,c
  1986   00060C  EC0C  F00D         	call	_clcd_print	;wreg free
  1987                           
  1988                           ;set_time.c: 70:         clcd_print(time, (0xC0 + (0)));
  1989   000610  0E2C               	movlw	low _time
  1990   000612  6E37               	movwf	clcd_print@data^0,c
  1991   000614  6A38               	clrf	(clcd_print@data+1)^0,c
  1992   000616  0EC0               	movlw	192
  1993   000618  6E39               	movwf	clcd_print@addr^0,c
  1994   00061A  EC0C  F00D         	call	_clcd_print	;wreg free
  1995   00061E                     
  1996                           ;set_time.c: 71:         if (t_flag >= 0 && t_flag < 100) {
  1997   00061E  BE0B               	btfsc	(_t_flag+1)^0,7,c
  1998   000620  EF14  F003         	goto	u2661
  1999   000624  EF16  F003         	goto	u2660
  2000   000628                     u2661:
  2001   000628  EF2F  F003         	goto	l3404
  2002   00062C                     u2660:
  2003   00062C  BE0B               	btfsc	(_t_flag+1)^0,7,c
  2004   00062E  EF24  F003         	goto	u2670
  2005   000632  500B               	movf	(_t_flag+1)^0,w,c
  2006   000634  E107               	bnz	u2671
  2007   000636  0E64               	movlw	100
  2008   000638  5C0A               	subwf	_t_flag^0,w,c
  2009   00063A  B0D8               	btfsc	status,0,c
  2010   00063C  EF22  F003         	goto	u2671
  2011   000640  EF24  F003         	goto	u2670
  2012   000644                     u2671:
  2013   000644  EF2F  F003         	goto	l3404
  2014   000648                     u2670:
  2015   000648                     
  2016                           ;set_time.c: 72:             clcd_print(time, (0xC0 + (0)));
  2017   000648  0E2C               	movlw	low _time
  2018   00064A  6E37               	movwf	clcd_print@data^0,c
  2019   00064C  6A38               	clrf	(clcd_print@data+1)^0,c
  2020   00064E  0EC0               	movlw	192
  2021   000650  6E39               	movwf	clcd_print@addr^0,c
  2022   000652  EC0C  F00D         	call	_clcd_print	;wreg free
  2023   000656                     
  2024                           ;set_time.c: 73:             t_flag++;
  2025   000656  4A0A               	infsnz	_t_flag^0,f,c
  2026   000658  2A0B               	incf	(_t_flag+1)^0,f,c
  2027                           
  2028                           ;set_time.c: 74:         } else if (t_flag >= 100 && t_flag < 200) {
  2029   00065A  EF6B  F003         	goto	l3414
  2030   00065E                     l3404:
  2031   00065E  BE0B               	btfsc	(_t_flag+1)^0,7,c
  2032   000660  EF3B  F003         	goto	u2681
  2033   000664  500B               	movf	(_t_flag+1)^0,w,c
  2034   000666  E109               	bnz	u2680
  2035   000668  0E64               	movlw	100
  2036   00066A  5C0A               	subwf	_t_flag^0,w,c
  2037   00066C  A0D8               	btfss	status,0,c
  2038   00066E  EF3B  F003         	goto	u2681
  2039   000672  EF3D  F003         	goto	u2680
  2040   000676                     u2681:
  2041   000676  EF6B  F003         	goto	l3414
  2042   00067A                     u2680:
  2043   00067A  BE0B               	btfsc	(_t_flag+1)^0,7,c
  2044   00067C  EF4B  F003         	goto	u2690
  2045   000680  500B               	movf	(_t_flag+1)^0,w,c
  2046   000682  E107               	bnz	u2691
  2047   000684  0EC8               	movlw	200
  2048   000686  5C0A               	subwf	_t_flag^0,w,c
  2049   000688  B0D8               	btfsc	status,0,c
  2050   00068A  EF49  F003         	goto	u2691
  2051   00068E  EF4B  F003         	goto	u2690
  2052   000692                     u2691:
  2053   000692  EF6B  F003         	goto	l3414
  2054   000696                     u2690:
  2055   000696                     
  2056                           ;set_time.c: 75:             clcd_print("  ", (0xC0 + (3)));
  2057   000696  0EAA               	movlw	low (STR_23+20)
  2058   000698  6E37               	movwf	clcd_print@data^0,c
  2059   00069A  0E2E               	movlw	high (STR_23+20)
  2060   00069C  6E38               	movwf	(clcd_print@data+1)^0,c
  2061   00069E  0EC3               	movlw	195
  2062   0006A0  6E39               	movwf	clcd_print@addr^0,c
  2063   0006A2  EC0C  F00D         	call	_clcd_print	;wreg free
  2064   0006A6                     
  2065                           ;set_time.c: 76:             if (t_flag++ >= 199)
  2066   0006A6  500A               	movf	_t_flag^0,w,c
  2067   0006A8  6E46               	movwf	??_settime^0,c
  2068   0006AA  500B               	movf	(_t_flag+1)^0,w,c
  2069   0006AC  6E47               	movwf	(??_settime+1)^0,c
  2070   0006AE  4A0A               	infsnz	_t_flag^0,f,c
  2071   0006B0  2A0B               	incf	(_t_flag+1)^0,f,c
  2072   0006B2  BE47               	btfsc	(??_settime+1)^0,7,c
  2073   0006B4  EF65  F003         	goto	u2701
  2074   0006B8  5047               	movf	(??_settime+1)^0,w,c
  2075   0006BA  E109               	bnz	u2700
  2076   0006BC  0EC7               	movlw	199
  2077   0006BE  5C46               	subwf	??_settime^0,w,c
  2078   0006C0  A0D8               	btfss	status,0,c
  2079   0006C2  EF65  F003         	goto	u2701
  2080   0006C6  EF67  F003         	goto	u2700
  2081   0006CA                     u2701:
  2082   0006CA  EF6B  F003         	goto	l3414
  2083   0006CE                     u2700:
  2084   0006CE                     
  2085                           ;set_time.c: 77:                 t_flag = 0;
  2086   0006CE  0E00               	movlw	0
  2087   0006D0  6E0B               	movwf	(_t_flag+1)^0,c
  2088   0006D2  0E00               	movlw	0
  2089   0006D4  6E0A               	movwf	_t_flag^0,c
  2090   0006D6                     l3414:
  2091                           
  2092                           ;set_time.c: 79:         if (key == 5) {
  2093   0006D6  0E05               	movlw	5
  2094   0006D8  1848               	xorwf	settime@key^0,w,c
  2095   0006DA  A4D8               	btfss	status,2,c
  2096   0006DC  EF72  F003         	goto	u2711
  2097   0006E0  EF74  F003         	goto	u2710
  2098   0006E4                     u2711:
  2099   0006E4  EF20  F004         	goto	l3464
  2100   0006E8                     u2710:
  2101   0006E8                     
  2102                           ;set_time.c: 80:             if (time[4] < '9') {
  2103   0006E8  0E39               	movlw	57
  2104   0006EA  6030               	cpfslt	(_time+4)^0,c
  2105   0006EC  EF7A  F003         	goto	u2721
  2106   0006F0  EF7C  F003         	goto	u2720
  2107   0006F4                     u2721:
  2108   0006F4  EF7F  F003         	goto	l3420
  2109   0006F8                     u2720:
  2110   0006F8                     
  2111                           ;set_time.c: 81:                 ++time[4];
  2112   0006F8  2A30               	incf	(_time+4)^0,f,c
  2113                           
  2114                           ;set_time.c: 82:             } else {
  2115   0006FA  EF20  F004         	goto	l3464
  2116   0006FE                     l3420:
  2117                           
  2118                           ;set_time.c: 83:                 time[4] = '0';
  2119   0006FE  0E30               	movlw	48
  2120   000700  6E30               	movwf	(_time+4)^0,c
  2121   000702                     
  2122                           ;set_time.c: 84:                 if (time[3] < '5')
  2123   000702  0E35               	movlw	53
  2124   000704  602F               	cpfslt	(_time+3)^0,c
  2125   000706  EF87  F003         	goto	u2731
  2126   00070A  EF89  F003         	goto	u2730
  2127   00070E                     u2731:
  2128   00070E  EF8C  F003         	goto	l3426
  2129   000712                     u2730:
  2130   000712                     
  2131                           ;set_time.c: 85:                     ++time[3];
  2132   000712  2A2F               	incf	(_time+3)^0,f,c
  2133   000714  EF20  F004         	goto	l3464
  2134   000718                     l3426:
  2135                           
  2136                           ;set_time.c: 87:                     time[3] = '0';
  2137   000718  0E30               	movlw	48
  2138   00071A  6E2F               	movwf	(_time+3)^0,c
  2139   00071C  EF20  F004         	goto	l3464
  2140   000720                     l3428:
  2141   000720  0E02               	movlw	2
  2142   000722  180C               	xorwf	_time_flag^0,w,c
  2143   000724  100D               	iorwf	(_time_flag+1)^0,w,c
  2144   000726  A4D8               	btfss	status,2,c
  2145   000728  EF98  F003         	goto	u2741
  2146   00072C  EF9A  F003         	goto	u2740
  2147   000730                     u2741:
  2148   000730  EF20  F004         	goto	l3464
  2149   000734                     u2740:
  2150   000734                     
  2151                           ;set_time.c: 93:     {;set_time.c: 94:         clcd_print("HH:MM:SS", (0x80 + (0)));
  2152   000734  0EB6               	movlw	low STR_55
  2153   000736  6E37               	movwf	clcd_print@data^0,c
  2154   000738  0E2F               	movlw	high STR_55
  2155   00073A  6E38               	movwf	(clcd_print@data+1)^0,c
  2156   00073C  0E80               	movlw	128
  2157   00073E  6E39               	movwf	clcd_print@addr^0,c
  2158   000740  EC0C  F00D         	call	_clcd_print	;wreg free
  2159                           
  2160                           ;set_time.c: 95:         clcd_print(time, (0xC0 + (0)));
  2161   000744  0E2C               	movlw	low _time
  2162   000746  6E37               	movwf	clcd_print@data^0,c
  2163   000748  6A38               	clrf	(clcd_print@data+1)^0,c
  2164   00074A  0EC0               	movlw	192
  2165   00074C  6E39               	movwf	clcd_print@addr^0,c
  2166   00074E  EC0C  F00D         	call	_clcd_print	;wreg free
  2167   000752                     
  2168                           ;set_time.c: 96:         if (t_flag >= 0 && t_flag < 100)
  2169   000752  BE0B               	btfsc	(_t_flag+1)^0,7,c
  2170   000754  EFAE  F003         	goto	u2751
  2171   000758  EFB0  F003         	goto	u2750
  2172   00075C                     u2751:
  2173   00075C  EFC9  F003         	goto	l3440
  2174   000760                     u2750:
  2175   000760  BE0B               	btfsc	(_t_flag+1)^0,7,c
  2176   000762  EFBE  F003         	goto	u2760
  2177   000766  500B               	movf	(_t_flag+1)^0,w,c
  2178   000768  E107               	bnz	u2761
  2179   00076A  0E64               	movlw	100
  2180   00076C  5C0A               	subwf	_t_flag^0,w,c
  2181   00076E  B0D8               	btfsc	status,0,c
  2182   000770  EFBC  F003         	goto	u2761
  2183   000774  EFBE  F003         	goto	u2760
  2184   000778                     u2761:
  2185   000778  EFC9  F003         	goto	l3440
  2186   00077C                     u2760:
  2187   00077C                     
  2188                           ;set_time.c: 97:         {;set_time.c: 98:             clcd_print(time, (0xC0 + (0)));
  2189   00077C  0E2C               	movlw	low _time
  2190   00077E  6E37               	movwf	clcd_print@data^0,c
  2191   000780  6A38               	clrf	(clcd_print@data+1)^0,c
  2192   000782  0EC0               	movlw	192
  2193   000784  6E39               	movwf	clcd_print@addr^0,c
  2194   000786  EC0C  F00D         	call	_clcd_print	;wreg free
  2195   00078A                     
  2196                           ;set_time.c: 99:             t_flag++;
  2197   00078A  4A0A               	infsnz	_t_flag^0,f,c
  2198   00078C  2A0B               	incf	(_t_flag+1)^0,f,c
  2199                           
  2200                           ;set_time.c: 100:         }
  2201   00078E  EFFD  F003         	goto	l3450
  2202   000792                     l3440:
  2203   000792  BE0B               	btfsc	(_t_flag+1)^0,7,c
  2204   000794  EFD5  F003         	goto	u2771
  2205   000798  500B               	movf	(_t_flag+1)^0,w,c
  2206   00079A  E109               	bnz	u2770
  2207   00079C  0E64               	movlw	100
  2208   00079E  5C0A               	subwf	_t_flag^0,w,c
  2209   0007A0  A0D8               	btfss	status,0,c
  2210   0007A2  EFD5  F003         	goto	u2771
  2211   0007A6  EFD7  F003         	goto	u2770
  2212   0007AA                     u2771:
  2213   0007AA  EFFD  F003         	goto	l3450
  2214   0007AE                     u2770:
  2215   0007AE  BE0B               	btfsc	(_t_flag+1)^0,7,c
  2216   0007B0  EFE5  F003         	goto	u2780
  2217   0007B4  500B               	movf	(_t_flag+1)^0,w,c
  2218   0007B6  E107               	bnz	u2781
  2219   0007B8  0EC8               	movlw	200
  2220   0007BA  5C0A               	subwf	_t_flag^0,w,c
  2221   0007BC  B0D8               	btfsc	status,0,c
  2222   0007BE  EFE3  F003         	goto	u2781
  2223   0007C2  EFE5  F003         	goto	u2780
  2224   0007C6                     u2781:
  2225   0007C6  EFFD  F003         	goto	l3450
  2226   0007CA                     u2780:
  2227   0007CA                     
  2228                           ;set_time.c: 102:         {;set_time.c: 103:             clcd_print("  ", (0xC0 + (6)));
  2229   0007CA  0EAA               	movlw	low (STR_23+20)
  2230   0007CC  6E37               	movwf	clcd_print@data^0,c
  2231   0007CE  0E2E               	movlw	high (STR_23+20)
  2232   0007D0  6E38               	movwf	(clcd_print@data+1)^0,c
  2233   0007D2  0EC6               	movlw	198
  2234   0007D4  6E39               	movwf	clcd_print@addr^0,c
  2235   0007D6  EC0C  F00D         	call	_clcd_print	;wreg free
  2236   0007DA                     
  2237                           ;set_time.c: 104:             if (t_flag++ == 199)
  2238   0007DA  4A0A               	infsnz	_t_flag^0,f,c
  2239   0007DC  2A0B               	incf	(_t_flag+1)^0,f,c
  2240   0007DE  0EC8               	movlw	200
  2241   0007E0  180A               	xorwf	_t_flag^0,w,c
  2242   0007E2  100B               	iorwf	(_t_flag+1)^0,w,c
  2243   0007E4  A4D8               	btfss	status,2,c
  2244   0007E6  EFF7  F003         	goto	u2791
  2245   0007EA  EFF9  F003         	goto	u2790
  2246   0007EE                     u2791:
  2247   0007EE  EFFD  F003         	goto	l3450
  2248   0007F2                     u2790:
  2249   0007F2                     
  2250                           ;set_time.c: 105:                 t_flag = 0;
  2251   0007F2  0E00               	movlw	0
  2252   0007F4  6E0B               	movwf	(_t_flag+1)^0,c
  2253   0007F6  0E00               	movlw	0
  2254   0007F8  6E0A               	movwf	_t_flag^0,c
  2255   0007FA                     l3450:
  2256                           
  2257                           ;set_time.c: 107:         if (key == 5)
  2258   0007FA  0E05               	movlw	5
  2259   0007FC  1848               	xorwf	settime@key^0,w,c
  2260   0007FE  A4D8               	btfss	status,2,c
  2261   000800  EF04  F004         	goto	u2801
  2262   000804  EF06  F004         	goto	u2800
  2263   000808                     u2801:
  2264   000808  EF20  F004         	goto	l3464
  2265   00080C                     u2800:
  2266   00080C                     
  2267                           ;set_time.c: 108:         {;set_time.c: 109:             if (time[7] < '9') {
  2268   00080C  0E39               	movlw	57
  2269   00080E  6033               	cpfslt	(_time+7)^0,c
  2270   000810  EF0C  F004         	goto	u2811
  2271   000814  EF0E  F004         	goto	u2810
  2272   000818                     u2811:
  2273   000818  EF11  F004         	goto	l3456
  2274   00081C                     u2810:
  2275   00081C                     
  2276                           ;set_time.c: 110:                 ++time[7];
  2277   00081C  2A33               	incf	(_time+7)^0,f,c
  2278                           
  2279                           ;set_time.c: 111:             } else {
  2280   00081E  EF20  F004         	goto	l3464
  2281   000822                     l3456:
  2282                           
  2283                           ;set_time.c: 112:                 time[7] = '0';
  2284   000822  0E30               	movlw	48
  2285   000824  6E33               	movwf	(_time+7)^0,c
  2286   000826                     
  2287                           ;set_time.c: 113:                 if (time[6] < '5')
  2288   000826  0E35               	movlw	53
  2289   000828  6032               	cpfslt	(_time+6)^0,c
  2290   00082A  EF19  F004         	goto	u2821
  2291   00082E  EF1B  F004         	goto	u2820
  2292   000832                     u2821:
  2293   000832  EF1E  F004         	goto	l3462
  2294   000836                     u2820:
  2295   000836                     
  2296                           ;set_time.c: 114:                     ++time[6];
  2297   000836  2A32               	incf	(_time+6)^0,f,c
  2298   000838  EF20  F004         	goto	l3464
  2299   00083C                     l3462:
  2300                           
  2301                           ;set_time.c: 116:                     time[6] = '0';
  2302   00083C  0E30               	movlw	48
  2303   00083E  6E32               	movwf	(_time+6)^0,c
  2304   000840                     l3464:
  2305                           
  2306                           ;set_time.c: 124:     if(key == 15)
  2307   000840  0E0F               	movlw	15
  2308   000842  1848               	xorwf	settime@key^0,w,c
  2309   000844  A4D8               	btfss	status,2,c
  2310   000846  EF27  F004         	goto	u2831
  2311   00084A  EF29  F004         	goto	u2830
  2312   00084E                     u2831:
  2313   00084E  EF2E  F004         	goto	l3470
  2314   000852                     u2830:
  2315   000852                     
  2316                           ;set_time.c: 125:         {;set_time.c: 126:             save_exit(key);
  2317   000852  5048               	movf	settime@key^0,w,c
  2318   000854  ECC5  F008         	call	_save_exit
  2319   000858  EF39  F004         	goto	l779
  2320   00085C                     l3470:
  2321                           
  2322                           ;set_time.c: 130:      if(key == 16)
  2323   00085C  0E10               	movlw	16
  2324   00085E  1848               	xorwf	settime@key^0,w,c
  2325   000860  A4D8               	btfss	status,2,c
  2326   000862  EF35  F004         	goto	u2841
  2327   000866  EF37  F004         	goto	u2840
  2328   00086A                     u2841:
  2329   00086A  EF39  F004         	goto	l779
  2330   00086E                     u2840:
  2331   00086E                     
  2332                           ;set_time.c: 131:         {;set_time.c: 132:          main_f = 2;
  2333   00086E  0E02               	movlw	2
  2334   000870  6E2B               	movwf	_main_f^0,c
  2335   000872                     l779:
  2336   000872  0012               	return		;funcret
  2337   000874                     __end_of_settime:
  2338                           	callstack 0
  2339                           
  2340 ;; *************** function _save_exit *****************
  2341 ;; Defined at:
  2342 ;;		line 139 in file "set_time.c"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;  key             1    wreg     unsigned char 
  2345 ;; Auto vars:     Size  Location     Type
  2346 ;;  key             1   16[COMRAM] unsigned char 
  2347 ;; Return value:  Size  Location     Type
  2348 ;;                  1    wreg      void 
  2349 ;; Registers used:
  2350 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2351 ;; Tracked objects:
  2352 ;;		On entry : 0/0
  2353 ;;		On exit  : 0/0
  2354 ;;		Unchanged: 0/0
  2355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2356 ;;      Params:         0       0       0       0       0       0       0
  2357 ;;      Locals:         1       0       0       0       0       0       0
  2358 ;;      Temps:          2       0       0       0       0       0       0
  2359 ;;      Totals:         3       0       0       0       0       0       0
  2360 ;;Total ram usage:        3 bytes
  2361 ;; Hardware stack levels used: 1
  2362 ;; Hardware stack levels required when called: 5
  2363 ;; This function calls:
  2364 ;;		___lwdiv
  2365 ;;		___lwmod
  2366 ;;		_read_ds1307
  2367 ;;		_write_ds1307
  2368 ;; This function is called by:
  2369 ;;		_settime
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373                           	psect	text3
  2374   00118A                     __ptext3:
  2375                           	callstack 0
  2376   00118A                     _save_exit:
  2377                           	callstack 24
  2378                           
  2379                           ;incstack = 0
  2380                           ;save_exit@key stored from wreg
  2381   00118A  6E45               	movwf	save_exit@key^0,c
  2382   00118C                     
  2383                           ;set_time.c: 139: void save_exit(char key);set_time.c: 140: {;set_time.c: 141:         h
      +                          rs = (((time[0] - 48) * 10) + (time[1] - 48));
  2384   00118C  502C               	movf	_time^0,w,c
  2385   00118E  0D0A               	mullw	10
  2386   001190  CFF3 F043          	movff	prodl,??_save_exit
  2387   001194  CFF4 F044          	movff	prodh,??_save_exit+1
  2388   001198  502D               	movf	(_time+1)^0,w,c
  2389   00119A  2643               	addwf	??_save_exit^0,f,c
  2390   00119C  0E00               	movlw	0
  2391   00119E  2244               	addwfc	(??_save_exit+1)^0,f,c
  2392   0011A0  0EF0               	movlw	240
  2393   0011A2  2443               	addwf	??_save_exit^0,w,c
  2394   0011A4  6E08               	movwf	_hrs^0,c
  2395   0011A6  0EFD               	movlw	253
  2396   0011A8  2044               	addwfc	(??_save_exit+1)^0,w,c
  2397   0011AA  6E09               	movwf	(_hrs+1)^0,c
  2398                           
  2399                           ;set_time.c: 142:         min = (((time[3] - 48) * 10) + (time[4] - 48));
  2400   0011AC  502F               	movf	(_time+3)^0,w,c
  2401   0011AE  0D0A               	mullw	10
  2402   0011B0  CFF3 F043          	movff	prodl,??_save_exit
  2403   0011B4  CFF4 F044          	movff	prodh,??_save_exit+1
  2404   0011B8  5030               	movf	(_time+4)^0,w,c
  2405   0011BA  2643               	addwf	??_save_exit^0,f,c
  2406   0011BC  0E00               	movlw	0
  2407   0011BE  2244               	addwfc	(??_save_exit+1)^0,f,c
  2408   0011C0  0EF0               	movlw	240
  2409   0011C2  2443               	addwf	??_save_exit^0,w,c
  2410   0011C4  6E06               	movwf	_min^0,c
  2411   0011C6  0EFD               	movlw	253
  2412   0011C8  2044               	addwfc	(??_save_exit+1)^0,w,c
  2413   0011CA  6E07               	movwf	(_min+1)^0,c
  2414                           
  2415                           ;set_time.c: 143:         secs = (((time[6] - 48) * 10) + (time[7] - 48));
  2416   0011CC  5032               	movf	(_time+6)^0,w,c
  2417   0011CE  0D0A               	mullw	10
  2418   0011D0  CFF3 F043          	movff	prodl,??_save_exit
  2419   0011D4  CFF4 F044          	movff	prodh,??_save_exit+1
  2420   0011D8  5033               	movf	(_time+7)^0,w,c
  2421   0011DA  2643               	addwf	??_save_exit^0,f,c
  2422   0011DC  0E00               	movlw	0
  2423   0011DE  2244               	addwfc	(??_save_exit+1)^0,f,c
  2424   0011E0  0EF0               	movlw	240
  2425   0011E2  2443               	addwf	??_save_exit^0,w,c
  2426   0011E4  6E04               	movwf	_secs^0,c
  2427   0011E6  0EFD               	movlw	253
  2428   0011E8  2044               	addwfc	(??_save_exit+1)^0,w,c
  2429   0011EA  6E05               	movwf	(_secs+1)^0,c
  2430   0011EC                     
  2431                           ;set_time.c: 145:          dummy = read_ds1307(0x00);
  2432   0011EC  0E00               	movlw	0
  2433   0011EE  ECBE  F00E         	call	_read_ds1307
  2434   0011F2  6E1E               	movwf	_dummy^0,c
  2435   0011F4                     
  2436                           ;set_time.c: 146:         write_ds1307(0x00, dummy | 0x80);
  2437   0011F4  501E               	movf	_dummy^0,w,c
  2438   0011F6  0980               	iorlw	128
  2439   0011F8  6E41               	movwf	write_ds1307@data^0,c
  2440   0011FA  0E00               	movlw	0
  2441   0011FC  ECE3  F00E         	call	_write_ds1307
  2442   001200                     
  2443                           ;set_time.c: 148:          write_ds1307(0x00, (secs % 10) | ((secs / 10) << 4));
  2444   001200  C004  F035         	movff	_secs,___lwdiv@dividend
  2445   001204  C005  F036         	movff	_secs+1,___lwdiv@dividend+1
  2446   001208  0E00               	movlw	0
  2447   00120A  6E38               	movwf	(___lwdiv@divisor+1)^0,c
  2448   00120C  0E0A               	movlw	10
  2449   00120E  6E37               	movwf	___lwdiv@divisor^0,c
  2450   001210  EC9C  F00C         	call	___lwdiv	;wreg free
  2451   001214  C035  F043         	movff	?___lwdiv,??_save_exit
  2452   001218  C036  F044         	movff	?___lwdiv+1,??_save_exit+1
  2453   00121C  3A43               	swapf	??_save_exit^0,f,c
  2454   00121E  0EF0               	movlw	240
  2455   001220  1643               	andwf	??_save_exit^0,f,c
  2456   001222  C004  F03C         	movff	_secs,___lwmod@dividend
  2457   001226  C005  F03D         	movff	_secs+1,___lwmod@dividend+1
  2458   00122A  0E00               	movlw	0
  2459   00122C  6E3F               	movwf	(___lwmod@divisor+1)^0,c
  2460   00122E  0E0A               	movlw	10
  2461   001230  6E3E               	movwf	___lwmod@divisor^0,c
  2462   001232  EC42  F00D         	call	___lwmod	;wreg free
  2463   001236  503C               	movf	?___lwmod^0,w,c
  2464   001238  1043               	iorwf	??_save_exit^0,w,c
  2465   00123A  6E41               	movwf	write_ds1307@data^0,c
  2466   00123C  0E00               	movlw	0
  2467   00123E  ECE3  F00E         	call	_write_ds1307
  2468   001242                     
  2469                           ;set_time.c: 149:          write_ds1307(0x01, (min % 10) | ((min / 10) << 4));
  2470   001242  C006  F035         	movff	_min,___lwdiv@dividend
  2471   001246  C007  F036         	movff	_min+1,___lwdiv@dividend+1
  2472   00124A  0E00               	movlw	0
  2473   00124C  6E38               	movwf	(___lwdiv@divisor+1)^0,c
  2474   00124E  0E0A               	movlw	10
  2475   001250  6E37               	movwf	___lwdiv@divisor^0,c
  2476   001252  EC9C  F00C         	call	___lwdiv	;wreg free
  2477   001256  C035  F043         	movff	?___lwdiv,??_save_exit
  2478   00125A  C036  F044         	movff	?___lwdiv+1,??_save_exit+1
  2479   00125E  3A43               	swapf	??_save_exit^0,f,c
  2480   001260  0EF0               	movlw	240
  2481   001262  1643               	andwf	??_save_exit^0,f,c
  2482   001264  C006  F03C         	movff	_min,___lwmod@dividend
  2483   001268  C007  F03D         	movff	_min+1,___lwmod@dividend+1
  2484   00126C  0E00               	movlw	0
  2485   00126E  6E3F               	movwf	(___lwmod@divisor+1)^0,c
  2486   001270  0E0A               	movlw	10
  2487   001272  6E3E               	movwf	___lwmod@divisor^0,c
  2488   001274  EC42  F00D         	call	___lwmod	;wreg free
  2489   001278  503C               	movf	?___lwmod^0,w,c
  2490   00127A  1043               	iorwf	??_save_exit^0,w,c
  2491   00127C  6E41               	movwf	write_ds1307@data^0,c
  2492   00127E  0E01               	movlw	1
  2493   001280  ECE3  F00E         	call	_write_ds1307
  2494   001284                     
  2495                           ;set_time.c: 150:          write_ds1307(0x02, (hrs % 10) | ((hrs / 10) << 4));
  2496   001284  C008  F035         	movff	_hrs,___lwdiv@dividend
  2497   001288  C009  F036         	movff	_hrs+1,___lwdiv@dividend+1
  2498   00128C  0E00               	movlw	0
  2499   00128E  6E38               	movwf	(___lwdiv@divisor+1)^0,c
  2500   001290  0E0A               	movlw	10
  2501   001292  6E37               	movwf	___lwdiv@divisor^0,c
  2502   001294  EC9C  F00C         	call	___lwdiv	;wreg free
  2503   001298  C035  F043         	movff	?___lwdiv,??_save_exit
  2504   00129C  C036  F044         	movff	?___lwdiv+1,??_save_exit+1
  2505   0012A0  3A43               	swapf	??_save_exit^0,f,c
  2506   0012A2  0EF0               	movlw	240
  2507   0012A4  1643               	andwf	??_save_exit^0,f,c
  2508   0012A6  C008  F03C         	movff	_hrs,___lwmod@dividend
  2509   0012AA  C009  F03D         	movff	_hrs+1,___lwmod@dividend+1
  2510   0012AE  0E00               	movlw	0
  2511   0012B0  6E3F               	movwf	(___lwmod@divisor+1)^0,c
  2512   0012B2  0E0A               	movlw	10
  2513   0012B4  6E3E               	movwf	___lwmod@divisor^0,c
  2514   0012B6  EC42  F00D         	call	___lwmod	;wreg free
  2515   0012BA  503C               	movf	?___lwmod^0,w,c
  2516   0012BC  1043               	iorwf	??_save_exit^0,w,c
  2517   0012BE  6E41               	movwf	write_ds1307@data^0,c
  2518   0012C0  0E02               	movlw	2
  2519   0012C2  ECE3  F00E         	call	_write_ds1307
  2520   0012C6                     
  2521                           ;set_time.c: 152:          dummy = read_ds1307(0x00);
  2522   0012C6  0E00               	movlw	0
  2523   0012C8  ECBE  F00E         	call	_read_ds1307
  2524   0012CC  6E1E               	movwf	_dummy^0,c
  2525   0012CE                     
  2526                           ;set_time.c: 153:          write_ds1307(0x00, dummy & 0x7F);
  2527   0012CE  501E               	movf	_dummy^0,w,c
  2528   0012D0  0B7F               	andlw	127
  2529   0012D2  6E41               	movwf	write_ds1307@data^0,c
  2530   0012D4  0E00               	movlw	0
  2531   0012D6  ECE3  F00E         	call	_write_ds1307
  2532   0012DA                     
  2533                           ;set_time.c: 155:          if(key == 15)
  2534   0012DA  0E0F               	movlw	15
  2535   0012DC  1845               	xorwf	save_exit@key^0,w,c
  2536   0012DE  A4D8               	btfss	status,2,c
  2537   0012E0  EF74  F009         	goto	u2011
  2538   0012E4  EF76  F009         	goto	u2010
  2539   0012E8                     u2011:
  2540   0012E8  EF78  F009         	goto	l784
  2541   0012EC                     u2010:
  2542   0012EC                     
  2543                           ;set_time.c: 156:          {;set_time.c: 157:              main_f = 2;
  2544   0012EC  0E02               	movlw	2
  2545   0012EE  6E2B               	movwf	_main_f^0,c
  2546   0012F0                     l784:
  2547   0012F0  0012               	return		;funcret
  2548   0012F2                     __end_of_save_exit:
  2549                           	callstack 0
  2550                           
  2551 ;; *************** function _read_switches *****************
  2552 ;; Defined at:
  2553 ;;		line 96 in file "matrix_keypad.c"
  2554 ;; Parameters:    Size  Location     Type
  2555 ;;  detection_ty    1    wreg     unsigned char 
  2556 ;; Auto vars:     Size  Location     Type
  2557 ;;  detection_ty    1    0[COMRAM] unsigned char 
  2558 ;; Return value:  Size  Location     Type
  2559 ;;                  1    wreg      unsigned char 
  2560 ;; Registers used:
  2561 ;;		wreg, status,2, status,0, cstack
  2562 ;; Tracked objects:
  2563 ;;		On entry : 0/0
  2564 ;;		On exit  : 0/0
  2565 ;;		Unchanged: 0/0
  2566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2567 ;;      Params:         0       0       0       0       0       0       0
  2568 ;;      Locals:         1       0       0       0       0       0       0
  2569 ;;      Temps:          0       0       0       0       0       0       0
  2570 ;;      Totals:         1       0       0       0       0       0       0
  2571 ;;Total ram usage:        1 bytes
  2572 ;; Hardware stack levels used: 1
  2573 ;; Hardware stack levels required when called: 2
  2574 ;; This function calls:
  2575 ;;		_scan_key
  2576 ;; This function is called by:
  2577 ;;		_main
  2578 ;; This function uses a non-reentrant model
  2579 ;;
  2580                           
  2581                           	psect	text4
  2582   0018C2                     __ptext4:
  2583                           	callstack 0
  2584   0018C2                     _read_switches:
  2585                           	callstack 28
  2586                           
  2587                           ;incstack = 0
  2588                           ;read_switches@detection_type stored from wreg
  2589   0018C2  6E35               	movwf	read_switches@detection_type^0,c
  2590   0018C4                     
  2591                           ;matrix_keypad.c: 96: unsigned char read_switches(unsigned char detection_type);matrix_k
      +                          eypad.c: 97: {;matrix_keypad.c: 98:  static unsigned char once = 1, key;;matrix_keypad.c
      +                          : 100:  if (detection_type == 1)
  2592   0018C4  0435               	decf	read_switches@detection_type^0,w,c
  2593   0018C6  A4D8               	btfss	status,2,c
  2594   0018C8  EF68  F00C         	goto	u441
  2595   0018CC  EF6A  F00C         	goto	u440
  2596   0018D0                     u441:
  2597   0018D0  EF8E  F00C         	goto	l1926
  2598   0018D4                     u440:
  2599   0018D4                     
  2600                           ;matrix_keypad.c: 101:  {;matrix_keypad.c: 102:   key = scan_key();
  2601   0018D4  EC01  F00A         	call	_scan_key	;wreg free
  2602   0018D8  6E27               	movwf	read_switches@key^0,c
  2603   0018DA                     
  2604                           ;matrix_keypad.c: 103:   if(key != 0xFF && once )
  2605   0018DA  2827               	incf	read_switches@key^0,w,c
  2606   0018DC  B4D8               	btfsc	status,2,c
  2607   0018DE  EF73  F00C         	goto	u451
  2608   0018E2  EF75  F00C         	goto	u450
  2609   0018E6                     u451:
  2610   0018E6  EF82  F00C         	goto	l1922
  2611   0018EA                     u450:
  2612   0018EA  5059               	movf	read_switches@once^0,w,c
  2613   0018EC  B4D8               	btfsc	status,2,c
  2614   0018EE  EF7B  F00C         	goto	u461
  2615   0018F2  EF7D  F00C         	goto	u460
  2616   0018F6                     u461:
  2617   0018F6  EF82  F00C         	goto	l1922
  2618   0018FA                     u460:
  2619   0018FA                     
  2620                           ;matrix_keypad.c: 104:   {;matrix_keypad.c: 105:    once = 0;
  2621   0018FA  0E00               	movlw	0
  2622   0018FC  6E59               	movwf	read_switches@once^0,c
  2623                           
  2624                           ;matrix_keypad.c: 106:    return key;
  2625   0018FE  5027               	movf	read_switches@key^0,w,c
  2626   001900  EF9B  F00C         	goto	l247
  2627   001904                     l1922:
  2628   001904  2827               	incf	read_switches@key^0,w,c
  2629   001906  A4D8               	btfss	status,2,c
  2630   001908  EF88  F00C         	goto	u471
  2631   00190C  EF8A  F00C         	goto	u470
  2632   001910                     u471:
  2633   001910  EF9A  F00C         	goto	l1932
  2634   001914                     u470:
  2635   001914                     
  2636                           ;matrix_keypad.c: 109:   {;matrix_keypad.c: 110:    once = 1;
  2637   001914  0E01               	movlw	1
  2638   001916  6E59               	movwf	read_switches@once^0,c
  2639   001918  EF9A  F00C         	goto	l1932
  2640   00191C                     l1926:
  2641   00191C  5035               	movf	read_switches@detection_type^0,w,c
  2642   00191E  A4D8               	btfss	status,2,c
  2643   001920  EF94  F00C         	goto	u481
  2644   001924  EF96  F00C         	goto	u480
  2645   001928                     u481:
  2646   001928  EF9A  F00C         	goto	l1932
  2647   00192C                     u480:
  2648   00192C                     
  2649                           ;matrix_keypad.c: 114:  {;matrix_keypad.c: 115:   return scan_key();
  2650   00192C  EC01  F00A         	call	_scan_key	;wreg free
  2651   001930  EF9B  F00C         	goto	l247
  2652   001934                     l1932:
  2653                           
  2654                           ;matrix_keypad.c: 118:  return 0xFF;
  2655   001934  0EFF               	movlw	255
  2656   001936                     l247:
  2657   001936  0012               	return		;funcret
  2658   001938                     __end_of_read_switches:
  2659                           	callstack 0
  2660                           
  2661 ;; *************** function _scan_key *****************
  2662 ;; Defined at:
  2663 ;;		line 26 in file "matrix_keypad.c"
  2664 ;; Parameters:    Size  Location     Type
  2665 ;;		None
  2666 ;; Auto vars:     Size  Location     Type
  2667 ;;		None
  2668 ;; Return value:  Size  Location     Type
  2669 ;;                  1    wreg      unsigned char 
  2670 ;; Registers used:
  2671 ;;		wreg
  2672 ;; Tracked objects:
  2673 ;;		On entry : 0/0
  2674 ;;		On exit  : 0/0
  2675 ;;		Unchanged: 0/0
  2676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2677 ;;      Params:         0       0       0       0       0       0       0
  2678 ;;      Locals:         0       0       0       0       0       0       0
  2679 ;;      Temps:          0       0       0       0       0       0       0
  2680 ;;      Totals:         0       0       0       0       0       0       0
  2681 ;;Total ram usage:        0 bytes
  2682 ;; Hardware stack levels used: 1
  2683 ;; Hardware stack levels required when called: 1
  2684 ;; This function calls:
  2685 ;;		Nothing
  2686 ;; This function is called by:
  2687 ;;		_read_switches
  2688 ;; This function uses a non-reentrant model
  2689 ;;
  2690                           
  2691                           	psect	text5
  2692   001402                     __ptext5:
  2693                           	callstack 0
  2694   001402                     _scan_key:
  2695                           	callstack 28
  2696   001402                     
  2697                           ;matrix_keypad.c: 28:  PORTBbits.RB5 = 0;
  2698   001402  9A81               	bcf	129,5,c	;volatile
  2699                           
  2700                           ;matrix_keypad.c: 29:  PORTBbits.RB6 = 1;
  2701   001404  8C81               	bsf	129,6,c	;volatile
  2702                           
  2703                           ;matrix_keypad.c: 30:  PORTBbits.RB7 = 1;
  2704   001406  8E81               	bsf	129,7,c	;volatile
  2705                           
  2706                           ;matrix_keypad.c: 32:  if (PORTBbits.RB1 == 0)
  2707   001408  B281               	btfsc	129,1,c	;volatile
  2708   00140A  EF09  F00A         	goto	u301
  2709   00140E  EF0B  F00A         	goto	u300
  2710   001412                     u301:
  2711   001412  EF0E  F00A         	goto	l217
  2712   001416                     u300:
  2713   001416                     
  2714                           ;matrix_keypad.c: 33:  {;matrix_keypad.c: 34:   return 1;
  2715   001416  0E01               	movlw	1
  2716   001418  EF84  F00A         	goto	l218
  2717   00141C                     l217:
  2718   00141C  B481               	btfsc	129,2,c	;volatile
  2719   00141E  EF13  F00A         	goto	u311
  2720   001422  EF15  F00A         	goto	u310
  2721   001426                     u311:
  2722   001426  EF18  F00A         	goto	l220
  2723   00142A                     u310:
  2724   00142A                     
  2725                           ;matrix_keypad.c: 37:  {;matrix_keypad.c: 38:   return 4;
  2726   00142A  0E04               	movlw	4
  2727   00142C  EF84  F00A         	goto	l218
  2728   001430                     l220:
  2729   001430  B681               	btfsc	129,3,c	;volatile
  2730   001432  EF1D  F00A         	goto	u321
  2731   001436  EF1F  F00A         	goto	u320
  2732   00143A                     u321:
  2733   00143A  EF22  F00A         	goto	l222
  2734   00143E                     u320:
  2735   00143E                     
  2736                           ;matrix_keypad.c: 41:  {;matrix_keypad.c: 42:   return 7;
  2737   00143E  0E07               	movlw	7
  2738   001440  EF84  F00A         	goto	l218
  2739   001444                     l222:
  2740   001444  B881               	btfsc	129,4,c	;volatile
  2741   001446  EF27  F00A         	goto	u331
  2742   00144A  EF29  F00A         	goto	u330
  2743   00144E                     u331:
  2744   00144E  EF2C  F00A         	goto	l219
  2745   001452                     u330:
  2746   001452                     
  2747                           ;matrix_keypad.c: 45:  {;matrix_keypad.c: 46:   return 10;
  2748   001452  0E0A               	movlw	10
  2749   001454  EF84  F00A         	goto	l218
  2750   001458                     l219:
  2751                           
  2752                           ;matrix_keypad.c: 49:  PORTBbits.RB5 = 1;
  2753   001458  8A81               	bsf	129,5,c	;volatile
  2754                           
  2755                           ;matrix_keypad.c: 50:  PORTBbits.RB6 = 0;
  2756   00145A  9C81               	bcf	129,6,c	;volatile
  2757                           
  2758                           ;matrix_keypad.c: 51:  PORTBbits.RB7 = 1;
  2759   00145C  8E81               	bsf	129,7,c	;volatile
  2760                           
  2761                           ;matrix_keypad.c: 53:  if (PORTBbits.RB1 == 0)
  2762   00145E  B281               	btfsc	129,1,c	;volatile
  2763   001460  EF34  F00A         	goto	u341
  2764   001464  EF36  F00A         	goto	u340
  2765   001468                     u341:
  2766   001468  EF39  F00A         	goto	l225
  2767   00146C                     u340:
  2768   00146C                     
  2769                           ;matrix_keypad.c: 54:  {;matrix_keypad.c: 55:   return 2;
  2770   00146C  0E02               	movlw	2
  2771   00146E  EF84  F00A         	goto	l218
  2772   001472                     l225:
  2773   001472  B481               	btfsc	129,2,c	;volatile
  2774   001474  EF3E  F00A         	goto	u351
  2775   001478  EF40  F00A         	goto	u350
  2776   00147C                     u351:
  2777   00147C  EF43  F00A         	goto	l227
  2778   001480                     u350:
  2779   001480                     
  2780                           ;matrix_keypad.c: 58:  {;matrix_keypad.c: 59:   return 5;
  2781   001480  0E05               	movlw	5
  2782   001482  EF84  F00A         	goto	l218
  2783   001486                     l227:
  2784   001486  B681               	btfsc	129,3,c	;volatile
  2785   001488  EF48  F00A         	goto	u361
  2786   00148C  EF4A  F00A         	goto	u360
  2787   001490                     u361:
  2788   001490  EF4D  F00A         	goto	l229
  2789   001494                     u360:
  2790   001494                     
  2791                           ;matrix_keypad.c: 62:  {;matrix_keypad.c: 63:   return 8;
  2792   001494  0E08               	movlw	8
  2793   001496  EF84  F00A         	goto	l218
  2794   00149A                     l229:
  2795   00149A  B881               	btfsc	129,4,c	;volatile
  2796   00149C  EF52  F00A         	goto	u371
  2797   0014A0  EF54  F00A         	goto	u370
  2798   0014A4                     u371:
  2799   0014A4  EF57  F00A         	goto	l226
  2800   0014A8                     u370:
  2801   0014A8                     
  2802                           ;matrix_keypad.c: 66:  {;matrix_keypad.c: 67:   return 11;
  2803   0014A8  0E0B               	movlw	11
  2804   0014AA  EF84  F00A         	goto	l218
  2805   0014AE                     l226:
  2806                           
  2807                           ;matrix_keypad.c: 70:  PORTBbits.RB5 = 1;
  2808   0014AE  8A81               	bsf	129,5,c	;volatile
  2809                           
  2810                           ;matrix_keypad.c: 71:  PORTBbits.RB6 = 1;
  2811   0014B0  8C81               	bsf	129,6,c	;volatile
  2812                           
  2813                           ;matrix_keypad.c: 72:  PORTBbits.RB7 = 0;
  2814   0014B2  9E81               	bcf	129,7,c	;volatile
  2815                           
  2816                           ;matrix_keypad.c: 74:  PORTBbits.RB7 = 0;
  2817   0014B4  9E81               	bcf	129,7,c	;volatile
  2818                           
  2819                           ;matrix_keypad.c: 76:  if (PORTBbits.RB1 == 0)
  2820   0014B6  B281               	btfsc	129,1,c	;volatile
  2821   0014B8  EF60  F00A         	goto	u381
  2822   0014BC  EF62  F00A         	goto	u380
  2823   0014C0                     u381:
  2824   0014C0  EF65  F00A         	goto	l232
  2825   0014C4                     u380:
  2826   0014C4                     
  2827                           ;matrix_keypad.c: 77:  {;matrix_keypad.c: 78:   return 3;
  2828   0014C4  0E03               	movlw	3
  2829   0014C6  EF84  F00A         	goto	l218
  2830   0014CA                     l232:
  2831   0014CA  B481               	btfsc	129,2,c	;volatile
  2832   0014CC  EF6A  F00A         	goto	u391
  2833   0014D0  EF6C  F00A         	goto	u390
  2834   0014D4                     u391:
  2835   0014D4  EF6F  F00A         	goto	l234
  2836   0014D8                     u390:
  2837   0014D8                     
  2838                           ;matrix_keypad.c: 81:  {;matrix_keypad.c: 82:   return 6;
  2839   0014D8  0E06               	movlw	6
  2840   0014DA  EF84  F00A         	goto	l218
  2841   0014DE                     l234:
  2842   0014DE  B681               	btfsc	129,3,c	;volatile
  2843   0014E0  EF74  F00A         	goto	u401
  2844   0014E4  EF76  F00A         	goto	u400
  2845   0014E8                     u401:
  2846   0014E8  EF79  F00A         	goto	l236
  2847   0014EC                     u400:
  2848   0014EC                     
  2849                           ;matrix_keypad.c: 85:  {;matrix_keypad.c: 86:   return 9;
  2850   0014EC  0E09               	movlw	9
  2851   0014EE  EF84  F00A         	goto	l218
  2852   0014F2                     l236:
  2853   0014F2  B881               	btfsc	129,4,c	;volatile
  2854   0014F4  EF7E  F00A         	goto	u411
  2855   0014F8  EF80  F00A         	goto	u410
  2856   0014FC                     u411:
  2857   0014FC  EF83  F00A         	goto	l235
  2858   001500                     u410:
  2859   001500                     
  2860                           ;matrix_keypad.c: 89:  {;matrix_keypad.c: 90:   return 12;
  2861   001500  0E0C               	movlw	12
  2862   001502  EF84  F00A         	goto	l218
  2863   001506                     l235:
  2864   001506                     
  2865                           ;matrix_keypad.c: 93:  return 0xFF;
  2866   001506  0EFF               	movlw	255
  2867   001508                     l218:
  2868   001508  0012               	return		;funcret
  2869   00150A                     __end_of_scan_key:
  2870                           	callstack 0
  2871                           
  2872 ;; *************** function _password *****************
  2873 ;; Defined at:
  2874 ;;		line 16 in file "password.c"
  2875 ;; Parameters:    Size  Location     Type
  2876 ;;  key             1    wreg     unsigned char 
  2877 ;; Auto vars:     Size  Location     Type
  2878 ;;  key             1   22[COMRAM] unsigned char 
  2879 ;;  i               4   16[COMRAM] unsigned long 
  2880 ;;  i               2   28[COMRAM] int 
  2881 ;;  i               1   27[COMRAM] unsigned char 
  2882 ;;  i               2   25[COMRAM] int 
  2883 ;;  k               1   20[COMRAM] unsigned char 
  2884 ;;  pass_f          2   23[COMRAM] unsigned int 
  2885 ;;  k               1   21[COMRAM] unsigned char 
  2886 ;; Return value:  Size  Location     Type
  2887 ;;                  1    wreg      void 
  2888 ;; Registers used:
  2889 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2895 ;;      Params:         0       0       0       0       0       0       0
  2896 ;;      Locals:        14       0       0       0       0       0       0
  2897 ;;      Temps:          2       0       0       0       0       0       0
  2898 ;;      Totals:        16       0       0       0       0       0       0
  2899 ;;Total ram usage:       16 bytes
  2900 ;; Hardware stack levels used: 1
  2901 ;; Hardware stack levels required when called: 5
  2902 ;; This function calls:
  2903 ;;		___lwdiv
  2904 ;;		___lwmod
  2905 ;;		_clcd_print
  2906 ;;		_clcd_putch
  2907 ;;		_clcd_write
  2908 ;;		_init_timer0
  2909 ;;		_read_external_eeprom
  2910 ;;		_write_external_eeprom
  2911 ;; This function is called by:
  2912 ;;		_main
  2913 ;; This function uses a non-reentrant model
  2914 ;;
  2915                           
  2916                           	psect	text6
  2917   000012                     __ptext6:
  2918                           	callstack 0
  2919   000012                     _password:
  2920                           	callstack 25
  2921                           
  2922                           ;incstack = 0
  2923                           ;password@key stored from wreg
  2924   000012  6E4B               	movwf	password@key^0,c
  2925   000014                     
  2926                           ;password.c: 16: void password(char key);password.c: 17: {;password.c: 18:     static un
      +                          signed long int count = 0;;password.c: 19:     static unsigned int delay=0;;password.c: 
      +                          20:     if(cp_f == 0)
  2927   000014  5025               	movf	_cp_f^0,w,c
  2928   000016  A4D8               	btfss	status,2,c
  2929   000018  EF10  F000         	goto	u2041
  2930   00001C  EF12  F000         	goto	u2040
  2931   000020                     u2041:
  2932   000020  EF28  F000         	goto	l3014
  2933   000024                     u2040:
  2934   000024                     
  2935                           ;password.c: 21:     {;password.c: 22:         write_external_eeprom(101,0);
  2936   000024  0E00               	movlw	0
  2937   000026  6E36               	movwf	write_external_eeprom@data^0,c
  2938   000028  0E65               	movlw	101
  2939   00002A  EC3C  F00E         	call	_write_external_eeprom
  2940                           
  2941                           ;password.c: 23:         write_external_eeprom(102,1);
  2942   00002E  0E01               	movlw	1
  2943   000030  6E36               	movwf	write_external_eeprom@data^0,c
  2944   000032  0E66               	movlw	102
  2945   000034  EC3C  F00E         	call	_write_external_eeprom
  2946                           
  2947                           ;password.c: 24:         write_external_eeprom(103,0);
  2948   000038  0E00               	movlw	0
  2949   00003A  6E36               	movwf	write_external_eeprom@data^0,c
  2950   00003C  0E67               	movlw	103
  2951   00003E  EC3C  F00E         	call	_write_external_eeprom
  2952                           
  2953                           ;password.c: 25:         write_external_eeprom(104,1);
  2954   000042  0E01               	movlw	1
  2955   000044  6E36               	movwf	write_external_eeprom@data^0,c
  2956   000046  0E68               	movlw	104
  2957   000048  EC3C  F00E         	call	_write_external_eeprom
  2958                           
  2959                           ;password.c: 26:     }
  2960   00004C  EF3F  F000         	goto	l3028
  2961   000050                     l3014:
  2962                           
  2963                           ;password.c: 28:     {;password.c: 29:         char k = 0;
  2964   000050  0E00               	movlw	0
  2965   000052  6E49               	movwf	password@k^0,c
  2966                           
  2967                           ;password.c: 30:         for(char i =101;i<105;i++)
  2968   000054  0E65               	movlw	101
  2969   000056  6E50               	movwf	password@i^0,c
  2970   000058                     l3020:
  2971                           
  2972                           ;password.c: 31:             {;password.c: 32:                 write_external_eeprom(i,n
      +                          ew_password[k]);
  2973   000058  5049               	movf	password@k^0,w,c
  2974   00005A  0F7F               	addlw	low _new_password
  2975   00005C  6ED9               	movwf	fsr2l,c
  2976   00005E  6ADA               	clrf	fsr2h,c
  2977   000060  50DF               	movf	indf2,w,c
  2978   000062  6E36               	movwf	write_external_eeprom@data^0,c
  2979   000064  5050               	movf	password@i^0,w,c
  2980   000066  EC3C  F00E         	call	_write_external_eeprom
  2981   00006A                     
  2982                           ;password.c: 33:                 k++;
  2983   00006A  2A49               	incf	password@k^0,f,c
  2984   00006C                     
  2985                           ;password.c: 34:             }
  2986   00006C  2A50               	incf	password@i^0,f,c
  2987   00006E  0E68               	movlw	104
  2988   000070  6450               	cpfsgt	password@i^0,c
  2989   000072  EF3D  F000         	goto	u2051
  2990   000076  EF3F  F000         	goto	u2050
  2991   00007A                     u2051:
  2992   00007A  EF2C  F000         	goto	l3020
  2993   00007E                     u2050:
  2994   00007E                     l3028:
  2995                           
  2996                           ;password.c: 36:     char k = 0;
  2997   00007E  0E00               	movlw	0
  2998   000080  6E4A               	movwf	password@k_339^0,c
  2999                           
  3000                           ;password.c: 37:     for(int i=101;i<105;i++)
  3001   000082  0E00               	movlw	0
  3002   000084  6E4F               	movwf	(password@i_340+1)^0,c
  3003   000086  0E65               	movlw	101
  3004   000088  6E4E               	movwf	password@i_340^0,c
  3005   00008A                     l3034:
  3006                           
  3007                           ;password.c: 38:     {;password.c: 39:       oe_pass[k] = read_external_eeprom(i);
  3008   00008A  504A               	movf	password@k_339^0,w,c
  3009   00008C  0F77               	addlw	low _oe_pass
  3010   00008E  6ED9               	movwf	fsr2l,c
  3011   000090  6ADA               	clrf	fsr2h,c
  3012   000092  504E               	movf	password@i_340^0,w,c
  3013   000094  EC94  F00E         	call	_read_external_eeprom
  3014   000098  6EDF               	movwf	indf2,c
  3015   00009A                     
  3016                           ;password.c: 40:             k++;
  3017   00009A  2A4A               	incf	password@k_339^0,f,c
  3018   00009C                     
  3019                           ;password.c: 41:     }
  3020   00009C  4A4E               	infsnz	password@i_340^0,f,c
  3021   00009E  2A4F               	incf	(password@i_340+1)^0,f,c
  3022   0000A0  BE4F               	btfsc	(password@i_340+1)^0,7,c
  3023   0000A2  EF5C  F000         	goto	u2061
  3024   0000A6  504F               	movf	(password@i_340+1)^0,w,c
  3025   0000A8  E109               	bnz	u2060
  3026   0000AA  0E69               	movlw	105
  3027   0000AC  5C4E               	subwf	password@i_340^0,w,c
  3028   0000AE  A0D8               	btfss	status,0,c
  3029   0000B0  EF5C  F000         	goto	u2061
  3030   0000B4  EF5E  F000         	goto	u2060
  3031   0000B8                     u2061:
  3032   0000B8  EF45  F000         	goto	l3034
  3033   0000BC                     u2060:
  3034   0000BC                     
  3035                           ;password.c: 42:     unsigned pass_f = 0;
  3036   0000BC  0E00               	movlw	0
  3037   0000BE  6E4D               	movwf	(password@pass_f+1)^0,c
  3038   0000C0  0E00               	movlw	0
  3039   0000C2  6E4C               	movwf	password@pass_f^0,c
  3040   0000C4                     
  3041                           ;password.c: 43:     if(j<4)
  3042   0000C4  0E04               	movlw	4
  3043   0000C6  6026               	cpfslt	_j^0,c
  3044   0000C8  EF68  F000         	goto	u2071
  3045   0000CC  EF6A  F000         	goto	u2070
  3046   0000D0                     u2071:
  3047   0000D0  EF2B  F002         	goto	l319
  3048   0000D4                     u2070:
  3049   0000D4                     
  3050                           ;password.c: 44:     {;password.c: 45:     clcd_print("ENTER PASSWORD",(0x80 + (0)));
  3051   0000D4  0EE9               	movlw	low (STR_46+3)
  3052   0000D6  6E37               	movwf	clcd_print@data^0,c
  3053   0000D8  0E2E               	movlw	high (STR_46+3)
  3054   0000DA  6E38               	movwf	(clcd_print@data+1)^0,c
  3055   0000DC  0E80               	movlw	128
  3056   0000DE  6E39               	movwf	clcd_print@addr^0,c
  3057   0000E0  EC0C  F00D         	call	_clcd_print	;wreg free
  3058   0000E4                     
  3059                           ;password.c: 46:     if(delay++ <25)
  3060   0000E4  5014               	movf	password@delay^0,w,c
  3061   0000E6  6E43               	movwf	??_password^0,c
  3062   0000E8  5015               	movf	(password@delay+1)^0,w,c
  3063   0000EA  6E44               	movwf	(??_password+1)^0,c
  3064   0000EC  4A14               	infsnz	password@delay^0,f,c
  3065   0000EE  2A15               	incf	(password@delay+1)^0,f,c
  3066   0000F0  5044               	movf	(??_password+1)^0,w,c
  3067   0000F2  E107               	bnz	u2081
  3068   0000F4  0E19               	movlw	25
  3069   0000F6  5C43               	subwf	??_password^0,w,c
  3070   0000F8  B0D8               	btfsc	status,0,c
  3071   0000FA  EF81  F000         	goto	u2081
  3072   0000FE  EF83  F000         	goto	u2080
  3073   000102                     u2081:
  3074   000102  EF8E  F000         	goto	l3052
  3075   000106                     u2080:
  3076   000106                     
  3077                           ;password.c: 47:     {;password.c: 48:         clcd_print("_",(0xC0 + (j)));
  3078   000106  0EFD               	movlw	low STR_13
  3079   000108  6E37               	movwf	clcd_print@data^0,c
  3080   00010A  0E2F               	movlw	high STR_13
  3081   00010C  6E38               	movwf	(clcd_print@data+1)^0,c
  3082   00010E  5026               	movf	_j^0,w,c
  3083   000110  0FC0               	addlw	192
  3084   000112  6E39               	movwf	clcd_print@addr^0,c
  3085   000114  EC0C  F00D         	call	_clcd_print	;wreg free
  3086                           
  3087                           ;password.c: 49:     }
  3088   000118  EFB9  F000         	goto	l3060
  3089   00011C                     l3052:
  3090   00011C  5014               	movf	password@delay^0,w,c
  3091   00011E  6E43               	movwf	??_password^0,c
  3092   000120  5015               	movf	(password@delay+1)^0,w,c
  3093   000122  6E44               	movwf	(??_password+1)^0,c
  3094   000124  4A14               	infsnz	password@delay^0,f,c
  3095   000126  2A15               	incf	(password@delay+1)^0,f,c
  3096   000128  5044               	movf	(??_password+1)^0,w,c
  3097   00012A  E109               	bnz	u2090
  3098   00012C  0E1A               	movlw	26
  3099   00012E  5C43               	subwf	??_password^0,w,c
  3100   000130  A0D8               	btfss	status,0,c
  3101   000132  EF9D  F000         	goto	u2091
  3102   000136  EF9F  F000         	goto	u2090
  3103   00013A                     u2091:
  3104   00013A  EFB5  F000         	goto	l3058
  3105   00013E                     u2090:
  3106   00013E  5015               	movf	(password@delay+1)^0,w,c
  3107   000140  E107               	bnz	u2101
  3108   000142  0E32               	movlw	50
  3109   000144  5C14               	subwf	password@delay^0,w,c
  3110   000146  B0D8               	btfsc	status,0,c
  3111   000148  EFA8  F000         	goto	u2101
  3112   00014C  EFAA  F000         	goto	u2100
  3113   000150                     u2101:
  3114   000150  EFB5  F000         	goto	l3058
  3115   000154                     u2100:
  3116   000154                     
  3117                           ;password.c: 51:     {;password.c: 52:         clcd_print(" ",(0xC0 + (j)));
  3118   000154  0EAB               	movlw	low (STR_23+21)
  3119   000156  6E37               	movwf	clcd_print@data^0,c
  3120   000158  0E2E               	movlw	high (STR_23+21)
  3121   00015A  6E38               	movwf	(clcd_print@data+1)^0,c
  3122   00015C  5026               	movf	_j^0,w,c
  3123   00015E  0FC0               	addlw	192
  3124   000160  6E39               	movwf	clcd_print@addr^0,c
  3125   000162  EC0C  F00D         	call	_clcd_print	;wreg free
  3126                           
  3127                           ;password.c: 53:     }
  3128   000166  EFB9  F000         	goto	l3060
  3129   00016A                     l3058:
  3130                           
  3131                           ;password.c: 55:         delay = 0;
  3132   00016A  0E00               	movlw	0
  3133   00016C  6E15               	movwf	(password@delay+1)^0,c
  3134   00016E  0E00               	movlw	0
  3135   000170  6E14               	movwf	password@delay^0,c
  3136   000172                     l3060:
  3137                           
  3138                           ;password.c: 56:     if(count++ == 250)
  3139   000172  0E01               	movlw	1
  3140   000174  0100               	movlb	0	; () banked
  3141   000176  2773               	addwf	password@count& (0+255),f,b
  3142   000178  0E00               	movlw	0
  3143   00017A  2374               	addwfc	(password@count+1)& (0+255),f,b
  3144   00017C  2375               	addwfc	(password@count+2)& (0+255),f,b
  3145   00017E  2376               	addwfc	(password@count+3)& (0+255),f,b
  3146   000180  0EFB               	movlw	251
  3147   000182  1973               	xorwf	password@count& (0+255),w,b
  3148   000184  1174               	iorwf	(password@count+1)& (0+255),w,b
  3149   000186  1175               	iorwf	(password@count+2)& (0+255),w,b
  3150   000188  1176               	iorwf	(password@count+3)& (0+255),w,b
  3151   00018A  A4D8               	btfss	status,2,c
  3152   00018C  EFCA  F000         	goto	u2111
  3153   000190  EFCC  F000         	goto	u2110
  3154   000194                     u2111:
  3155   000194  EFDD  F000         	goto	l3068
  3156   000198                     u2110:
  3157   000198                     
  3158                           ; BSR set to: 0
  3159                           ;password.c: 57:     {;password.c: 58:         count = 0;
  3160   000198  0E00               	movlw	0
  3161   00019A  6F73               	movwf	password@count& (0+255),b
  3162   00019C  0E00               	movlw	0
  3163   00019E  6F74               	movwf	(password@count+1)& (0+255),b
  3164   0001A0  0E00               	movlw	0
  3165   0001A2  6F75               	movwf	(password@count+2)& (0+255),b
  3166   0001A4  0E00               	movlw	0
  3167   0001A6  6F76               	movwf	(password@count+3)& (0+255),b
  3168                           
  3169                           ;password.c: 59:         j = 0;
  3170   0001A8  0E00               	movlw	0
  3171   0001AA  6E26               	movwf	_j^0,c
  3172   0001AC                     
  3173                           ; BSR set to: 0
  3174                           ;password.c: 60:         clcd_write(0x01, 0);
  3175   0001AC  0E00               	movlw	0
  3176   0001AE  6E35               	movwf	clcd_write@control_bit^0,c
  3177   0001B0  0E01               	movlw	1
  3178   0001B2  EC5C  F00E         	call	_clcd_write
  3179   0001B6                     
  3180                           ;password.c: 61:         main_f = 0;
  3181   0001B6  0E00               	movlw	0
  3182   0001B8  6E2B               	movwf	_main_f^0,c
  3183   0001BA                     l3068:
  3184                           
  3185                           ;password.c: 63:     if(key == 5 )
  3186   0001BA  0E05               	movlw	5
  3187   0001BC  184B               	xorwf	password@key^0,w,c
  3188   0001BE  A4D8               	btfss	status,2,c
  3189   0001C0  EFE4  F000         	goto	u2121
  3190   0001C4  EFE6  F000         	goto	u2120
  3191   0001C8                     u2121:
  3192   0001C8  EFFE  F000         	goto	l3078
  3193   0001CC                     u2120:
  3194   0001CC                     
  3195                           ;password.c: 64:     {;password.c: 65:         count = 0;
  3196   0001CC  0E00               	movlw	0
  3197   0001CE  0100               	movlb	0	; () banked
  3198   0001D0  6F73               	movwf	password@count& (0+255),b
  3199   0001D2  0E00               	movlw	0
  3200   0001D4  6F74               	movwf	(password@count+1)& (0+255),b
  3201   0001D6  0E00               	movlw	0
  3202   0001D8  6F75               	movwf	(password@count+2)& (0+255),b
  3203   0001DA  0E00               	movlw	0
  3204   0001DC  6F76               	movwf	(password@count+3)& (0+255),b
  3205   0001DE                     
  3206                           ; BSR set to: 0
  3207                           ;password.c: 66:         ent_pass[j] = 0;
  3208   0001DE  5026               	movf	_j^0,w,c
  3209   0001E0  0F7B               	addlw	low _ent_pass
  3210   0001E2  6ED9               	movwf	fsr2l,c
  3211   0001E4  6ADA               	clrf	fsr2h,c
  3212   0001E6  6ADF               	clrf	indf2,c
  3213   0001E8                     
  3214                           ; BSR set to: 0
  3215                           ;password.c: 67:         clcd_print("*",(0xC0 + (j)));
  3216   0001E8  0EFB               	movlw	low STR_15
  3217   0001EA  6E37               	movwf	clcd_print@data^0,c
  3218   0001EC  0E2F               	movlw	high STR_15
  3219   0001EE  6E38               	movwf	(clcd_print@data+1)^0,c
  3220   0001F0  5026               	movf	_j^0,w,c
  3221   0001F2  0FC0               	addlw	192
  3222   0001F4  6E39               	movwf	clcd_print@addr^0,c
  3223   0001F6  EC0C  F00D         	call	_clcd_print	;wreg free
  3224   0001FA                     
  3225                           ;password.c: 68:         j++;
  3226   0001FA  2A26               	incf	_j^0,f,c
  3227   0001FC                     l3078:
  3228                           
  3229                           ;password.c: 70:     if(key == 6 )
  3230   0001FC  0E06               	movlw	6
  3231   0001FE  184B               	xorwf	password@key^0,w,c
  3232   000200  A4D8               	btfss	status,2,c
  3233   000202  EF05  F001         	goto	u2131
  3234   000206  EF07  F001         	goto	u2130
  3235   00020A                     u2131:
  3236   00020A  EF20  F001         	goto	l3088
  3237   00020E                     u2130:
  3238   00020E                     
  3239                           ;password.c: 71:     {;password.c: 72:         count = 0;
  3240   00020E  0E00               	movlw	0
  3241   000210  0100               	movlb	0	; () banked
  3242   000212  6F73               	movwf	password@count& (0+255),b
  3243   000214  0E00               	movlw	0
  3244   000216  6F74               	movwf	(password@count+1)& (0+255),b
  3245   000218  0E00               	movlw	0
  3246   00021A  6F75               	movwf	(password@count+2)& (0+255),b
  3247   00021C  0E00               	movlw	0
  3248   00021E  6F76               	movwf	(password@count+3)& (0+255),b
  3249   000220                     
  3250                           ; BSR set to: 0
  3251                           ;password.c: 73:         ent_pass[j] = 1;
  3252   000220  5026               	movf	_j^0,w,c
  3253   000222  0F7B               	addlw	low _ent_pass
  3254   000224  6ED9               	movwf	fsr2l,c
  3255   000226  6ADA               	clrf	fsr2h,c
  3256   000228  0E01               	movlw	1
  3257   00022A  6EDF               	movwf	indf2,c
  3258   00022C                     
  3259                           ; BSR set to: 0
  3260                           ;password.c: 74:         clcd_print("*",(0xC0 + (j)));
  3261   00022C  0EFB               	movlw	low STR_15
  3262   00022E  6E37               	movwf	clcd_print@data^0,c
  3263   000230  0E2F               	movlw	high STR_15
  3264   000232  6E38               	movwf	(clcd_print@data+1)^0,c
  3265   000234  5026               	movf	_j^0,w,c
  3266   000236  0FC0               	addlw	192
  3267   000238  6E39               	movwf	clcd_print@addr^0,c
  3268   00023A  EC0C  F00D         	call	_clcd_print	;wreg free
  3269   00023E                     
  3270                           ;password.c: 75:         j++;
  3271   00023E  2A26               	incf	_j^0,f,c
  3272   000240                     l3088:
  3273                           
  3274                           ;password.c: 78:     for(int i =0;i<4;i++)
  3275   000240  0E00               	movlw	0
  3276   000242  6E52               	movwf	(password@i_347+1)^0,c
  3277   000244  0E00               	movlw	0
  3278   000246  6E51               	movwf	password@i_347^0,c
  3279   000248                     l3094:
  3280                           
  3281                           ;password.c: 79:     {;password.c: 80:         if(ent_pass[i] != oe_pass[i])
  3282   000248  5051               	movf	password@i_347^0,w,c
  3283   00024A  0F77               	addlw	low _oe_pass
  3284   00024C  6ED9               	movwf	fsr2l,c
  3285   00024E  6ADA               	clrf	fsr2h,c
  3286   000250  5051               	movf	password@i_347^0,w,c
  3287   000252  0F7B               	addlw	low _ent_pass
  3288   000254  6EE1               	movwf	fsr1l,c
  3289   000256  6AE2               	clrf	fsr1h,c
  3290   000258  50DE               	movf	postinc2,w,c
  3291   00025A  18E6               	xorwf	postinc1,w,c
  3292   00025C  B4D8               	btfsc	status,2,c
  3293   00025E  EF33  F001         	goto	u2141
  3294   000262  EF35  F001         	goto	u2140
  3295   000266                     u2141:
  3296   000266  EF3B  F001         	goto	l3098
  3297   00026A                     u2140:
  3298   00026A                     
  3299                           ;password.c: 81:         {;password.c: 82:             pass_f = 1;
  3300   00026A  0E00               	movlw	0
  3301   00026C  6E4D               	movwf	(password@pass_f+1)^0,c
  3302   00026E  0E01               	movlw	1
  3303   000270  6E4C               	movwf	password@pass_f^0,c
  3304                           
  3305                           ;password.c: 83:             break;
  3306   000272  EF4B  F001         	goto	l3102
  3307   000276                     l3098:
  3308                           
  3309                           ;password.c: 85:     }
  3310   000276  4A51               	infsnz	password@i_347^0,f,c
  3311   000278  2A52               	incf	(password@i_347+1)^0,f,c
  3312   00027A  BE52               	btfsc	(password@i_347+1)^0,7,c
  3313   00027C  EF49  F001         	goto	u2151
  3314   000280  5052               	movf	(password@i_347+1)^0,w,c
  3315   000282  E109               	bnz	u2150
  3316   000284  0E04               	movlw	4
  3317   000286  5C51               	subwf	password@i_347^0,w,c
  3318   000288  A0D8               	btfss	status,0,c
  3319   00028A  EF49  F001         	goto	u2151
  3320   00028E  EF4B  F001         	goto	u2150
  3321   000292                     u2151:
  3322   000292  EF24  F001         	goto	l3094
  3323   000296                     u2150:
  3324   000296                     l3102:
  3325                           
  3326                           ;password.c: 86:     if(pass_f && j == 4)
  3327   000296  504C               	movf	password@pass_f^0,w,c
  3328   000298  104D               	iorwf	(password@pass_f+1)^0,w,c
  3329   00029A  B4D8               	btfsc	status,2,c
  3330   00029C  EF52  F001         	goto	u2161
  3331   0002A0  EF54  F001         	goto	u2160
  3332   0002A4                     u2161:
  3333   0002A4  EF10  F002         	goto	l3152
  3334   0002A8                     u2160:
  3335   0002A8  0E04               	movlw	4
  3336   0002AA  1826               	xorwf	_j^0,w,c
  3337   0002AC  A4D8               	btfss	status,2,c
  3338   0002AE  EF5B  F001         	goto	u2171
  3339   0002B2  EF5D  F001         	goto	u2170
  3340   0002B6                     u2171:
  3341   0002B6  EF10  F002         	goto	l3152
  3342   0002BA                     u2170:
  3343   0002BA                     
  3344                           ;password.c: 87:     {;password.c: 88:         if(atmpt > 0)
  3345   0002BA  5058               	movf	_atmpt^0,w,c
  3346   0002BC  B4D8               	btfsc	status,2,c
  3347   0002BE  EF63  F001         	goto	u2181
  3348   0002C2  EF65  F001         	goto	u2180
  3349   0002C6                     u2181:
  3350   0002C6  EFA0  F001         	goto	l308
  3351   0002CA                     u2180:
  3352   0002CA                     
  3353                           ;password.c: 89:         {;password.c: 91:             clcd_print("WRONG PASSWORD",(0x80
      +                           + (0)));
  3354   0002CA  0E7F               	movlw	low STR_17
  3355   0002CC  6E37               	movwf	clcd_print@data^0,c
  3356   0002CE  0E2F               	movlw	high STR_17
  3357   0002D0  6E38               	movwf	(clcd_print@data+1)^0,c
  3358   0002D2  0E80               	movlw	128
  3359   0002D4  6E39               	movwf	clcd_print@addr^0,c
  3360   0002D6  EC0C  F00D         	call	_clcd_print	;wreg free
  3361   0002DA                     
  3362                           ;password.c: 92:             clcd_putch(atmpt+48,(0xC0 + (0)));
  3363   0002DA  0EC0               	movlw	192
  3364   0002DC  6E41               	movwf	clcd_putch@addr^0,c
  3365   0002DE  5058               	movf	_atmpt^0,w,c
  3366   0002E0  0F30               	addlw	48
  3367   0002E2  ECFF  F00E         	call	_clcd_putch
  3368   0002E6                     
  3369                           ;password.c: 93:             clcd_print("Attempt Left",(0xC0 + (1)));
  3370   0002E6  0EA9               	movlw	low STR_18
  3371   0002E8  6E37               	movwf	clcd_print@data^0,c
  3372   0002EA  0E2F               	movlw	high STR_18
  3373   0002EC  6E38               	movwf	(clcd_print@data+1)^0,c
  3374   0002EE  0EC1               	movlw	193
  3375   0002F0  6E39               	movwf	clcd_print@addr^0,c
  3376   0002F2  EC0C  F00D         	call	_clcd_print	;wreg free
  3377   0002F6                     
  3378                           ;password.c: 94:             for(unsigned long int i = 500000;i--;);
  3379   0002F6  0E20               	movlw	32
  3380   0002F8  6E45               	movwf	password@i_350^0,c
  3381   0002FA  0EA1               	movlw	161
  3382   0002FC  6E46               	movwf	(password@i_350+1)^0,c
  3383   0002FE  0E07               	movlw	7
  3384   000300  6E47               	movwf	(password@i_350+2)^0,c
  3385   000302  0E00               	movlw	0
  3386   000304  6E48               	movwf	(password@i_350+3)^0,c
  3387   000306                     l3116:
  3388   000306  0645               	decf	password@i_350^0,f,c
  3389   000308  0E00               	movlw	0
  3390   00030A  5A46               	subwfb	(password@i_350+1)^0,f,c
  3391   00030C  5A47               	subwfb	(password@i_350+2)^0,f,c
  3392   00030E  5A48               	subwfb	(password@i_350+3)^0,f,c
  3393   000310  2845               	incf	password@i_350^0,w,c
  3394   000312  E10A               	bnz	u2191
  3395   000314  2846               	incf	(password@i_350+1)^0,w,c
  3396   000316  E108               	bnz	u2191
  3397   000318  2847               	incf	(password@i_350+2)^0,w,c
  3398   00031A  E106               	bnz	u2191
  3399   00031C  2848               	incf	(password@i_350+3)^0,w,c
  3400   00031E  A4D8               	btfss	status,2,c
  3401   000320  EF94  F001         	goto	u2191
  3402   000324  EF96  F001         	goto	u2190
  3403   000328                     u2191:
  3404   000328  EF83  F001         	goto	l3116
  3405   00032C                     u2190:
  3406   00032C                     
  3407                           ;password.c: 95:             clcd_write(0x01, 0);
  3408   00032C  0E00               	movlw	0
  3409   00032E  6E35               	movwf	clcd_write@control_bit^0,c
  3410   000330  0E01               	movlw	1
  3411   000332  EC5C  F00E         	call	_clcd_write
  3412   000336                     
  3413                           ;password.c: 97:             atmpt--;
  3414   000336  0658               	decf	_atmpt^0,f,c
  3415   000338                     
  3416                           ;password.c: 98:             j = 0;
  3417   000338  0E00               	movlw	0
  3418   00033A  6E26               	movwf	_j^0,c
  3419                           
  3420                           ;password.c: 99:         }
  3421   00033C  EF2B  F002         	goto	l319
  3422   000340                     l308:
  3423                           
  3424                           ;password.c: 101:         {;password.c: 102:             GIE = PEIE = 1;
  3425   000340  8CF2               	bsf	4082,6,c	;volatile
  3426   000342  8EF2               	bsf	4082,7,c	;volatile
  3427   000344                     
  3428                           ;password.c: 103:             init_timer0();
  3429   000344  EC0B  F00F         	call	_init_timer0	;wreg free
  3430   000348                     
  3431                           ;password.c: 104:             sec = 5;
  3432   000348  0E00               	movlw	0
  3433   00034A  6E17               	movwf	(_sec+1)^0,c
  3434   00034C  0E05               	movlw	5
  3435   00034E  6E16               	movwf	_sec^0,c
  3436   000350                     l3128:
  3437                           
  3438                           ;password.c: 106:             {;password.c: 107:                 clcd_print("YOU ARE BLO
      +                          CKED",(0x80 + (0)));
  3439   000350  0E6F               	movlw	low STR_19
  3440   000352  6E37               	movwf	clcd_print@data^0,c
  3441   000354  0E2F               	movlw	high STR_19
  3442   000356  6E38               	movwf	(clcd_print@data+1)^0,c
  3443   000358  0E80               	movlw	128
  3444   00035A  6E39               	movwf	clcd_print@addr^0,c
  3445   00035C  EC0C  F00D         	call	_clcd_print	;wreg free
  3446   000360                     
  3447                           ;password.c: 108:                 clcd_print("FOR ",(0xC0 + (0)));
  3448   000360  0ECC               	movlw	low STR_20
  3449   000362  6E37               	movwf	clcd_print@data^0,c
  3450   000364  0E2F               	movlw	high STR_20
  3451   000366  6E38               	movwf	(clcd_print@data+1)^0,c
  3452   000368  0EC0               	movlw	192
  3453   00036A  6E39               	movwf	clcd_print@addr^0,c
  3454   00036C  EC0C  F00D         	call	_clcd_print	;wreg free
  3455   000370                     
  3456                           ;password.c: 109:                 clcd_putch((sec%10)+48,(0xC0 + (7)));
  3457   000370  0EC7               	movlw	199
  3458   000372  6E41               	movwf	clcd_putch@addr^0,c
  3459   000374  C016  F03C         	movff	_sec,___lwmod@dividend
  3460   000378  C017  F03D         	movff	_sec+1,___lwmod@dividend+1
  3461   00037C  0E00               	movlw	0
  3462   00037E  6E3F               	movwf	(___lwmod@divisor+1)^0,c
  3463   000380  0E0A               	movlw	10
  3464   000382  6E3E               	movwf	___lwmod@divisor^0,c
  3465   000384  EC42  F00D         	call	___lwmod	;wreg free
  3466   000388  503C               	movf	?___lwmod^0,w,c
  3467   00038A  0F30               	addlw	48
  3468   00038C  ECFF  F00E         	call	_clcd_putch
  3469   000390                     
  3470                           ;password.c: 110:                 clcd_putch((sec/10)%10+48,(0xC0 + (6)));
  3471   000390  0EC6               	movlw	198
  3472   000392  6E41               	movwf	clcd_putch@addr^0,c
  3473   000394  0E00               	movlw	0
  3474   000396  6E38               	movwf	(___lwdiv@divisor+1)^0,c
  3475   000398  0E0A               	movlw	10
  3476   00039A  6E37               	movwf	___lwdiv@divisor^0,c
  3477   00039C  C016  F035         	movff	_sec,___lwdiv@dividend
  3478   0003A0  C017  F036         	movff	_sec+1,___lwdiv@dividend+1
  3479   0003A4  EC9C  F00C         	call	___lwdiv	;wreg free
  3480   0003A8  C035  F03C         	movff	?___lwdiv,___lwmod@dividend
  3481   0003AC  C036  F03D         	movff	?___lwdiv+1,___lwmod@dividend+1
  3482   0003B0  0E00               	movlw	0
  3483   0003B2  6E3F               	movwf	(___lwmod@divisor+1)^0,c
  3484   0003B4  0E0A               	movlw	10
  3485   0003B6  6E3E               	movwf	___lwmod@divisor^0,c
  3486   0003B8  EC42  F00D         	call	___lwmod	;wreg free
  3487   0003BC  503C               	movf	?___lwmod^0,w,c
  3488   0003BE  0F30               	addlw	48
  3489   0003C0  ECFF  F00E         	call	_clcd_putch
  3490   0003C4                     
  3491                           ;password.c: 111:                 clcd_putch((sec/100)+48,(0xC0 + (5)));
  3492   0003C4  0EC5               	movlw	197
  3493   0003C6  6E41               	movwf	clcd_putch@addr^0,c
  3494   0003C8  C016  F035         	movff	_sec,___lwdiv@dividend
  3495   0003CC  C017  F036         	movff	_sec+1,___lwdiv@dividend+1
  3496   0003D0  0E00               	movlw	0
  3497   0003D2  6E38               	movwf	(___lwdiv@divisor+1)^0,c
  3498   0003D4  0E64               	movlw	100
  3499   0003D6  6E37               	movwf	___lwdiv@divisor^0,c
  3500   0003D8  EC9C  F00C         	call	___lwdiv	;wreg free
  3501   0003DC  5035               	movf	?___lwdiv^0,w,c
  3502   0003DE  0F30               	addlw	48
  3503   0003E0  ECFF  F00E         	call	_clcd_putch
  3504   0003E4                     
  3505                           ;password.c: 112:                 clcd_print("SECONDS",(0xC0 + (9)));
  3506   0003E4  0EBF               	movlw	low STR_21
  3507   0003E6  6E37               	movwf	clcd_print@data^0,c
  3508   0003E8  0E2F               	movlw	high STR_21
  3509   0003EA  6E38               	movwf	(clcd_print@data+1)^0,c
  3510   0003EC  0EC9               	movlw	201
  3511   0003EE  6E39               	movwf	clcd_print@addr^0,c
  3512   0003F0  EC0C  F00D         	call	_clcd_print	;wreg free
  3513   0003F4                     
  3514                           ;password.c: 113:                 if(sec == 0)
  3515   0003F4  5016               	movf	_sec^0,w,c
  3516   0003F6  1017               	iorwf	(_sec+1)^0,w,c
  3517   0003F8  A4D8               	btfss	status,2,c
  3518   0003FA  EF01  F002         	goto	u2201
  3519   0003FE  EF03  F002         	goto	u2200
  3520   000402                     u2201:
  3521   000402  EFA8  F001         	goto	l3128
  3522   000406                     u2200:
  3523   000406                     
  3524                           ;password.c: 114:                 {;password.c: 115:                     GIE = 0;
  3525   000406  9EF2               	bcf	4082,7,c	;volatile
  3526                           
  3527                           ;password.c: 116:                     PEIE = 0;
  3528   000408  9CF2               	bcf	4082,6,c	;volatile
  3529   00040A                     
  3530                           ;password.c: 117:                     clcd_write(0x01, 0);
  3531   00040A  0E00               	movlw	0
  3532   00040C  6E35               	movwf	clcd_write@control_bit^0,c
  3533   00040E  0E01               	movlw	1
  3534   000410  EC5C  F00E         	call	_clcd_write
  3535   000414                     
  3536                           ;password.c: 118:                     atmpt = 3;
  3537   000414  0E03               	movlw	3
  3538   000416  6E58               	movwf	_atmpt^0,c
  3539   000418                     
  3540                           ;password.c: 119:                     j=0;
  3541   000418  0E00               	movlw	0
  3542   00041A  6E26               	movwf	_j^0,c
  3543   00041C                     
  3544                           ;password.c: 121:                     break;
  3545   00041C  EF2B  F002         	goto	l319
  3546   000420                     l3152:
  3547   000420  0E04               	movlw	4
  3548   000422  1826               	xorwf	_j^0,w,c
  3549   000424  A4D8               	btfss	status,2,c
  3550   000426  EF17  F002         	goto	u2211
  3551   00042A  EF19  F002         	goto	u2210
  3552   00042E                     u2211:
  3553   00042E  EF2B  F002         	goto	l319
  3554   000432                     u2210:
  3555   000432  504C               	movf	password@pass_f^0,w,c
  3556   000434  104D               	iorwf	(password@pass_f+1)^0,w,c
  3557   000436  A4D8               	btfss	status,2,c
  3558   000438  EF20  F002         	goto	u2221
  3559   00043C  EF22  F002         	goto	u2220
  3560   000440                     u2221:
  3561   000440  EF2B  F002         	goto	l319
  3562   000444                     u2220:
  3563   000444                     
  3564                           ;password.c: 127:     {;password.c: 128:         clcd_write(0x01, 0);
  3565   000444  0E00               	movlw	0
  3566   000446  6E35               	movwf	clcd_write@control_bit^0,c
  3567   000448  0E01               	movlw	1
  3568   00044A  EC5C  F00E         	call	_clcd_write
  3569   00044E                     
  3570                           ;password.c: 129:         j = 0;
  3571   00044E  0E00               	movlw	0
  3572   000450  6E26               	movwf	_j^0,c
  3573   000452                     
  3574                           ;password.c: 130:         main_f = 2;
  3575   000452  0E02               	movlw	2
  3576   000454  6E2B               	movwf	_main_f^0,c
  3577   000456                     l319:
  3578   000456  0012               	return		;funcret
  3579   000458                     __end_of_password:
  3580                           	callstack 0
  3581                           
  3582 ;; *************** function _init_timer0 *****************
  3583 ;; Defined at:
  3584 ;;		line 13 in file "timer0.c"
  3585 ;; Parameters:    Size  Location     Type
  3586 ;;		None
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;		None
  3589 ;; Return value:  Size  Location     Type
  3590 ;;                  1    wreg      void 
  3591 ;; Registers used:
  3592 ;;		wreg, status,2
  3593 ;; Tracked objects:
  3594 ;;		On entry : 0/0
  3595 ;;		On exit  : 0/0
  3596 ;;		Unchanged: 0/0
  3597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3598 ;;      Params:         0       0       0       0       0       0       0
  3599 ;;      Locals:         0       0       0       0       0       0       0
  3600 ;;      Temps:          0       0       0       0       0       0       0
  3601 ;;      Totals:         0       0       0       0       0       0       0
  3602 ;;Total ram usage:        0 bytes
  3603 ;; Hardware stack levels used: 1
  3604 ;; Hardware stack levels required when called: 1
  3605 ;; This function calls:
  3606 ;;		Nothing
  3607 ;; This function is called by:
  3608 ;;		_password
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612                           	psect	text7
  3613   001E16                     __ptext7:
  3614                           	callstack 0
  3615   001E16                     _init_timer0:
  3616                           	callstack 28
  3617   001E16                     
  3618                           ;timer0.c: 21:  T08BIT = 1;
  3619   001E16  8CD5               	bsf	4053,6,c	;volatile
  3620                           
  3621                           ;timer0.c: 24:  T0CS = 0;
  3622   001E18  9AD5               	bcf	4053,5,c	;volatile
  3623                           
  3624                           ;timer0.c: 27:  TMR0ON = 1;
  3625   001E1A  8ED5               	bsf	4053,7,c	;volatile
  3626                           
  3627                           ;timer0.c: 30:  PSA = 1;
  3628   001E1C  86D5               	bsf	4053,3,c	;volatile
  3629   001E1E                     
  3630                           ;timer0.c: 32:  TMR0 = 6;
  3631   001E1E  0E00               	movlw	0
  3632   001E20  6ED7               	movwf	215,c	;volatile
  3633   001E22  0E06               	movlw	6
  3634   001E24  6ED6               	movwf	214,c	;volatile
  3635   001E26                     
  3636                           ;timer0.c: 35:  TMR0IF = 0;
  3637   001E26  94F2               	bcf	4082,2,c	;volatile
  3638   001E28                     
  3639                           ;timer0.c: 38:  TMR0IE = 1;
  3640   001E28  8AF2               	bsf	4082,5,c	;volatile
  3641   001E2A  0012               	return		;funcret
  3642   001E2C                     __end_of_init_timer0:
  3643                           	callstack 0
  3644                           
  3645 ;; *************** function _menu *****************
  3646 ;; Defined at:
  3647 ;;		line 10 in file "menu.c"
  3648 ;; Parameters:    Size  Location     Type
  3649 ;;  key             1    wreg     unsigned char 
  3650 ;; Auto vars:     Size  Location     Type
  3651 ;;  key             1   14[COMRAM] unsigned char 
  3652 ;; Return value:  Size  Location     Type
  3653 ;;                  1    wreg      void 
  3654 ;; Registers used:
  3655 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3656 ;; Tracked objects:
  3657 ;;		On entry : 0/0
  3658 ;;		On exit  : 0/0
  3659 ;;		Unchanged: 0/0
  3660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3661 ;;      Params:         0       0       0       0       0       0       0
  3662 ;;      Locals:         1       0       0       0       0       0       0
  3663 ;;      Temps:          0       0       0       0       0       0       0
  3664 ;;      Totals:         1       0       0       0       0       0       0
  3665 ;;Total ram usage:        1 bytes
  3666 ;; Hardware stack levels used: 1
  3667 ;; Hardware stack levels required when called: 3
  3668 ;; This function calls:
  3669 ;;		_clcd_print
  3670 ;;		_clcd_putch
  3671 ;;		_clcd_write
  3672 ;; This function is called by:
  3673 ;;		_main
  3674 ;; This function uses a non-reentrant model
  3675 ;;
  3676                           
  3677                           	psect	text8
  3678   001014                     __ptext8:
  3679                           	callstack 0
  3680   001014                     _menu:
  3681                           	callstack 27
  3682                           
  3683                           ;incstack = 0
  3684                           ;menu@key stored from wreg
  3685   001014  6E43               	movwf	menu@key^0,c
  3686   001016                     
  3687                           ;menu.c: 10: void menu(char key);menu.c: 11: {;menu.c: 12:     if(flag==0)
  3688   001016  5012               	movf	_flag^0,w,c
  3689   001018  1013               	iorwf	(_flag+1)^0,w,c
  3690   00101A  A4D8               	btfss	status,2,c
  3691   00101C  EF12  F008         	goto	u2231
  3692   001020  EF14  F008         	goto	u2230
  3693   001024                     u2231:
  3694   001024  EF23  F008         	goto	l3168
  3695   001028                     u2230:
  3696   001028                     
  3697                           ;menu.c: 13:     {;menu.c: 14:         clcd_putch('*',(0x80 + (0)));
  3698   001028  0E80               	movlw	128
  3699   00102A  6E41               	movwf	clcd_putch@addr^0,c
  3700   00102C  0E2A               	movlw	42
  3701   00102E  ECFF  F00E         	call	_clcd_putch
  3702   001032                     
  3703                           ;menu.c: 15:         clcd_print("  ",(0xC0 + (0)));
  3704   001032  0EAA               	movlw	low (STR_23+20)
  3705   001034  6E37               	movwf	clcd_print@data^0,c
  3706   001036  0E2E               	movlw	high (STR_23+20)
  3707   001038  6E38               	movwf	(clcd_print@data+1)^0,c
  3708   00103A  0EC0               	movlw	192
  3709   00103C  6E39               	movwf	clcd_print@addr^0,c
  3710   00103E  EC0C  F00D         	call	_clcd_print	;wreg free
  3711                           
  3712                           ;menu.c: 16:     }
  3713   001042  EF30  F008         	goto	l3172
  3714   001046                     l3168:
  3715                           
  3716                           ;menu.c: 18:     {;menu.c: 19:         clcd_print("  ",(0x80 + (0)));
  3717   001046  0EAA               	movlw	low (STR_23+20)
  3718   001048  6E37               	movwf	clcd_print@data^0,c
  3719   00104A  0E2E               	movlw	high (STR_23+20)
  3720   00104C  6E38               	movwf	(clcd_print@data+1)^0,c
  3721   00104E  0E80               	movlw	128
  3722   001050  6E39               	movwf	clcd_print@addr^0,c
  3723   001052  EC0C  F00D         	call	_clcd_print	;wreg free
  3724   001056                     
  3725                           ;menu.c: 20:         clcd_putch('*',(0xC0 + (0)));
  3726   001056  0EC0               	movlw	192
  3727   001058  6E41               	movwf	clcd_putch@addr^0,c
  3728   00105A  0E2A               	movlw	42
  3729   00105C  ECFF  F00E         	call	_clcd_putch
  3730   001060                     l3172:
  3731                           
  3732                           ;menu.c: 22:     if(key == 5)
  3733   001060  0E05               	movlw	5
  3734   001062  1843               	xorwf	menu@key^0,w,c
  3735   001064  A4D8               	btfss	status,2,c
  3736   001066  EF37  F008         	goto	u2241
  3737   00106A  EF39  F008         	goto	u2240
  3738   00106E                     u2241:
  3739   00106E  EF54  F008         	goto	l3182
  3740   001072                     u2240:
  3741   001072                     
  3742                           ;menu.c: 23:     {;menu.c: 24:         if(flag==1)
  3743   001072  0412               	decf	_flag^0,w,c
  3744   001074  1013               	iorwf	(_flag+1)^0,w,c
  3745   001076  A4D8               	btfss	status,2,c
  3746   001078  EF40  F008         	goto	u2251
  3747   00107C  EF42  F008         	goto	u2250
  3748   001080                     u2251:
  3749   001080  EF48  F008         	goto	l3178
  3750   001084                     u2250:
  3751   001084                     
  3752                           ;menu.c: 25:             flag=0;
  3753   001084  0E00               	movlw	0
  3754   001086  6E13               	movwf	(_flag+1)^0,c
  3755   001088  0E00               	movlw	0
  3756   00108A  6E12               	movwf	_flag^0,c
  3757   00108C  EF54  F008         	goto	l3182
  3758   001090                     l3178:
  3759   001090  5010               	movf	_i@menu$F461^0,w,c
  3760   001092  1011               	iorwf	(_i@menu$F461+1)^0,w,c
  3761   001094  B4D8               	btfsc	status,2,c
  3762   001096  EF4F  F008         	goto	u2261
  3763   00109A  EF51  F008         	goto	u2260
  3764   00109E                     u2261:
  3765   00109E  EF54  F008         	goto	l3182
  3766   0010A2                     u2260:
  3767   0010A2                     
  3768                           ;menu.c: 27:             i--;
  3769   0010A2  0610               	decf	_i@menu$F461^0,f,c
  3770   0010A4  A0D8               	btfss	status,0,c
  3771   0010A6  0611               	decf	(_i@menu$F461+1)^0,f,c
  3772   0010A8                     l3182:
  3773                           
  3774                           ;menu.c: 29:     if(key == 6)
  3775   0010A8  0E06               	movlw	6
  3776   0010AA  1843               	xorwf	menu@key^0,w,c
  3777   0010AC  A4D8               	btfss	status,2,c
  3778   0010AE  EF5B  F008         	goto	u2271
  3779   0010B2  EF5D  F008         	goto	u2270
  3780   0010B6                     u2271:
  3781   0010B6  EF79  F008         	goto	l3192
  3782   0010BA                     u2270:
  3783   0010BA                     
  3784                           ;menu.c: 30:     {;menu.c: 31:         if(flag==0)
  3785   0010BA  5012               	movf	_flag^0,w,c
  3786   0010BC  1013               	iorwf	(_flag+1)^0,w,c
  3787   0010BE  A4D8               	btfss	status,2,c
  3788   0010C0  EF64  F008         	goto	u2281
  3789   0010C4  EF66  F008         	goto	u2280
  3790   0010C8                     u2281:
  3791   0010C8  EF6C  F008         	goto	l3188
  3792   0010CC                     u2280:
  3793   0010CC                     
  3794                           ;menu.c: 32:             flag=1;
  3795   0010CC  0E00               	movlw	0
  3796   0010CE  6E13               	movwf	(_flag+1)^0,c
  3797   0010D0  0E01               	movlw	1
  3798   0010D2  6E12               	movwf	_flag^0,c
  3799   0010D4  EF79  F008         	goto	l3192
  3800   0010D8                     l3188:
  3801   0010D8  5011               	movf	(_i@menu$F461+1)^0,w,c
  3802   0010DA  E107               	bnz	u2291
  3803   0010DC  0E03               	movlw	3
  3804   0010DE  5C10               	subwf	_i@menu$F461^0,w,c
  3805   0010E0  B0D8               	btfsc	status,0,c
  3806   0010E2  EF75  F008         	goto	u2291
  3807   0010E6  EF77  F008         	goto	u2290
  3808   0010EA                     u2291:
  3809   0010EA  EF79  F008         	goto	l3192
  3810   0010EE                     u2290:
  3811   0010EE                     
  3812                           ;menu.c: 34:             i++;
  3813   0010EE  4A10               	infsnz	_i@menu$F461^0,f,c
  3814   0010F0  2A11               	incf	(_i@menu$F461+1)^0,f,c
  3815   0010F2                     l3192:
  3816                           
  3817                           ;menu.c: 36:     clcd_print(logs[i],(0x80 + (1)));
  3818   0010F2  5010               	movf	_i@menu$F461^0,w,c
  3819   0010F4  0D02               	mullw	2
  3820   0010F6  50F3               	movf	243,w,c
  3821   0010F8  0F93               	addlw	low _logs
  3822   0010FA  6ED9               	movwf	fsr2l,c
  3823   0010FC  6ADA               	clrf	fsr2h,c
  3824   0010FE  CFDE F037          	movff	postinc2,clcd_print@data
  3825   001102  CFDD F038          	movff	postdec2,clcd_print@data+1
  3826   001106  0E81               	movlw	129
  3827   001108  6E39               	movwf	clcd_print@addr^0,c
  3828   00110A  EC0C  F00D         	call	_clcd_print	;wreg free
  3829   00110E                     
  3830                           ;menu.c: 37:     clcd_print(logs[i+1],(0xC0 + (1)));
  3831   00110E  5010               	movf	_i@menu$F461^0,w,c
  3832   001110  0D02               	mullw	2
  3833   001112  50F3               	movf	243,w,c
  3834   001114  0F95               	addlw	low (_logs+2)
  3835   001116  6ED9               	movwf	fsr2l,c
  3836   001118  6ADA               	clrf	fsr2h,c
  3837   00111A  CFDE F037          	movff	postinc2,clcd_print@data
  3838   00111E  CFDD F038          	movff	postdec2,clcd_print@data+1
  3839   001122  0EC1               	movlw	193
  3840   001124  6E39               	movwf	clcd_print@addr^0,c
  3841   001126  EC0C  F00D         	call	_clcd_print	;wreg free
  3842   00112A                     
  3843                           ;menu.c: 39:     if(key==15)
  3844   00112A  0E0F               	movlw	15
  3845   00112C  1843               	xorwf	menu@key^0,w,c
  3846   00112E  A4D8               	btfss	status,2,c
  3847   001130  EF9C  F008         	goto	u2301
  3848   001134  EF9E  F008         	goto	u2300
  3849   001138                     u2301:
  3850   001138  EFB4  F008         	goto	l488
  3851   00113C                     u2300:
  3852   00113C                     
  3853                           ;menu.c: 40:     {;menu.c: 41:         clcd_write(0x01, 0);
  3854   00113C  0E00               	movlw	0
  3855   00113E  6E35               	movwf	clcd_write@control_bit^0,c
  3856   001140  0E01               	movlw	1
  3857   001142  EC5C  F00E         	call	_clcd_write
  3858   001146                     
  3859                           ;menu.c: 42:         main_f=3;
  3860   001146  0E03               	movlw	3
  3861   001148  6E2B               	movwf	_main_f^0,c
  3862   00114A                     
  3863                           ;menu.c: 43:         if(flag==0)
  3864   00114A  5012               	movf	_flag^0,w,c
  3865   00114C  1013               	iorwf	(_flag+1)^0,w,c
  3866   00114E  A4D8               	btfss	status,2,c
  3867   001150  EFAC  F008         	goto	u2311
  3868   001154  EFAE  F008         	goto	u2310
  3869   001158                     u2311:
  3870   001158  EFB2  F008         	goto	l3206
  3871   00115C                     u2310:
  3872   00115C                     
  3873                           ;menu.c: 44:         {;menu.c: 45:             menu_f=i;
  3874   00115C  C010  F02A         	movff	_i@menu$F461,_menu_f
  3875                           
  3876                           ;menu.c: 46:         }
  3877   001160  EFB4  F008         	goto	l488
  3878   001164                     l3206:
  3879                           
  3880                           ;menu.c: 48:             menu_f=i+1;
  3881   001164  2810               	incf	_i@menu$F461^0,w,c
  3882   001166  6E2A               	movwf	_menu_f^0,c
  3883   001168                     l488:
  3884                           
  3885                           ;menu.c: 51:     if(key==16)
  3886   001168  0E10               	movlw	16
  3887   00116A  1843               	xorwf	menu@key^0,w,c
  3888   00116C  A4D8               	btfss	status,2,c
  3889   00116E  EFBB  F008         	goto	u2321
  3890   001172  EFBD  F008         	goto	u2320
  3891   001176                     u2321:
  3892   001176  EFC4  F008         	goto	l492
  3893   00117A                     u2320:
  3894   00117A                     
  3895                           ;menu.c: 52:     {;menu.c: 53:         clcd_write(0x01, 0);
  3896   00117A  0E00               	movlw	0
  3897   00117C  6E35               	movwf	clcd_write@control_bit^0,c
  3898   00117E  0E01               	movlw	1
  3899   001180  EC5C  F00E         	call	_clcd_write
  3900   001184                     
  3901                           ;menu.c: 54:         main_f=0;
  3902   001184  0E00               	movlw	0
  3903   001186  6E2B               	movwf	_main_f^0,c
  3904   001188                     l492:
  3905   001188  0012               	return		;funcret
  3906   00118A                     __end_of_menu:
  3907                           	callstack 0
  3908                           
  3909 ;; *************** function _inti_config *****************
  3910 ;; Defined at:
  3911 ;;		line 12 in file "main.c"
  3912 ;; Parameters:    Size  Location     Type
  3913 ;;		None
  3914 ;; Auto vars:     Size  Location     Type
  3915 ;;		None
  3916 ;; Return value:  Size  Location     Type
  3917 ;;                  1    wreg      void 
  3918 ;; Registers used:
  3919 ;;		wreg, status,2, status,0, cstack
  3920 ;; Tracked objects:
  3921 ;;		On entry : 0/0
  3922 ;;		On exit  : 0/0
  3923 ;;		Unchanged: 0/0
  3924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3925 ;;      Params:         0       0       0       0       0       0       0
  3926 ;;      Locals:         0       0       0       0       0       0       0
  3927 ;;      Temps:          0       0       0       0       0       0       0
  3928 ;;      Totals:         0       0       0       0       0       0       0
  3929 ;;Total ram usage:        0 bytes
  3930 ;; Hardware stack levels used: 1
  3931 ;; Hardware stack levels required when called: 6
  3932 ;; This function calls:
  3933 ;;		_init_adc
  3934 ;;		_init_clcd
  3935 ;;		_init_ds1307
  3936 ;;		_init_i2c
  3937 ;;		_init_matrix_keypad
  3938 ;; This function is called by:
  3939 ;;		_main
  3940 ;; This function uses a non-reentrant model
  3941 ;;
  3942                           
  3943                           	psect	text9
  3944   001E2C                     __ptext9:
  3945                           	callstack 0
  3946   001E2C                     _inti_config:
  3947                           	callstack 24
  3948   001E2C                     
  3949                           ;main.c: 13:     init_adc();
  3950   001E2C  ECD3  F00E         	call	_init_adc	;wreg free
  3951   001E30                     
  3952                           ;main.c: 14:     init_clcd();
  3953   001E30  EC89  F00B         	call	_init_clcd	;wreg free
  3954   001E34                     
  3955                           ;main.c: 15:     init_matrix_keypad();
  3956   001E34  EC37  F00F         	call	_init_matrix_keypad	;wreg free
  3957                           
  3958                           ;main.c: 16:     init_i2c();
  3959   001E38  EC21  F00F         	call	_init_i2c	;wreg free
  3960   001E3C                     
  3961                           ;main.c: 17:     init_ds1307();
  3962   001E3C  ECD4  F00D         	call	_init_ds1307	;wreg free
  3963   001E40  0012               	return		;funcret
  3964   001E42                     __end_of_inti_config:
  3965                           	callstack 0
  3966                           
  3967 ;; *************** function _init_matrix_keypad *****************
  3968 ;; Defined at:
  3969 ;;		line 12 in file "matrix_keypad.c"
  3970 ;; Parameters:    Size  Location     Type
  3971 ;;		None
  3972 ;; Auto vars:     Size  Location     Type
  3973 ;;		None
  3974 ;; Return value:  Size  Location     Type
  3975 ;;                  1    wreg      void 
  3976 ;; Registers used:
  3977 ;;		wreg, status,2, status,0
  3978 ;; Tracked objects:
  3979 ;;		On entry : 0/0
  3980 ;;		On exit  : 0/0
  3981 ;;		Unchanged: 0/0
  3982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3983 ;;      Params:         0       0       0       0       0       0       0
  3984 ;;      Locals:         0       0       0       0       0       0       0
  3985 ;;      Temps:          0       0       0       0       0       0       0
  3986 ;;      Totals:         0       0       0       0       0       0       0
  3987 ;;Total ram usage:        0 bytes
  3988 ;; Hardware stack levels used: 1
  3989 ;; Hardware stack levels required when called: 1
  3990 ;; This function calls:
  3991 ;;		Nothing
  3992 ;; This function is called by:
  3993 ;;		_inti_config
  3994 ;; This function uses a non-reentrant model
  3995 ;;
  3996                           
  3997                           	psect	text10
  3998   001E6E                     __ptext10:
  3999                           	callstack 0
  4000   001E6E                     _init_matrix_keypad:
  4001                           	callstack 28
  4002   001E6E                     
  4003                           ;matrix_keypad.c: 15:  ADCON1 = 0x0F;
  4004   001E6E  0E0F               	movlw	15
  4005   001E70  6EC1               	movwf	193,c	;volatile
  4006                           
  4007                           ;matrix_keypad.c: 18:  TRISB = 0x1E;
  4008   001E72  0E1E               	movlw	30
  4009   001E74  6E93               	movwf	147,c	;volatile
  4010   001E76                     
  4011                           ;matrix_keypad.c: 21:  RBPU = 0;
  4012   001E76  9EF1               	bcf	4081,7,c	;volatile
  4013   001E78                     
  4014                           ;matrix_keypad.c: 23:  PORTB = PORTB | 0xE0;
  4015   001E78  5081               	movf	129,w,c	;volatile
  4016   001E7A  09E0               	iorlw	224
  4017   001E7C  6E81               	movwf	129,c	;volatile
  4018   001E7E  0012               	return		;funcret
  4019   001E80                     __end_of_init_matrix_keypad:
  4020                           	callstack 0
  4021                           
  4022 ;; *************** function _init_i2c *****************
  4023 ;; Defined at:
  4024 ;;		line 12 in file "i2c.c"
  4025 ;; Parameters:    Size  Location     Type
  4026 ;;		None
  4027 ;; Auto vars:     Size  Location     Type
  4028 ;;		None
  4029 ;; Return value:  Size  Location     Type
  4030 ;;                  1    wreg      void 
  4031 ;; Registers used:
  4032 ;;		wreg, status,2
  4033 ;; Tracked objects:
  4034 ;;		On entry : 0/0
  4035 ;;		On exit  : 0/0
  4036 ;;		Unchanged: 0/0
  4037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4038 ;;      Params:         0       0       0       0       0       0       0
  4039 ;;      Locals:         0       0       0       0       0       0       0
  4040 ;;      Temps:          0       0       0       0       0       0       0
  4041 ;;      Totals:         0       0       0       0       0       0       0
  4042 ;;Total ram usage:        0 bytes
  4043 ;; Hardware stack levels used: 1
  4044 ;; Hardware stack levels required when called: 1
  4045 ;; This function calls:
  4046 ;;		Nothing
  4047 ;; This function is called by:
  4048 ;;		_inti_config
  4049 ;; This function uses a non-reentrant model
  4050 ;;
  4051                           
  4052                           	psect	text11
  4053   001E42                     __ptext11:
  4054                           	callstack 0
  4055   001E42                     _init_i2c:
  4056                           	callstack 28
  4057   001E42                     
  4058                           ;i2c.c: 15:  TRISC3 = 1;
  4059   001E42  8694               	bsf	3988,3,c	;volatile
  4060                           
  4061                           ;i2c.c: 16:  TRISC4 = 1;
  4062   001E44  8894               	bsf	3988,4,c	;volatile
  4063   001E46                     
  4064                           ;i2c.c: 18:  SSPCON1 = 0x28;
  4065   001E46  0E28               	movlw	40
  4066   001E48  6EC6               	movwf	198,c	;volatile
  4067                           
  4068                           ;i2c.c: 20:  SSPADD = 0x31;
  4069   001E4A  0E31               	movlw	49
  4070   001E4C  6EC8               	movwf	200,c	;volatile
  4071   001E4E                     
  4072                           ;i2c.c: 22:  CKE = 0;
  4073   001E4E  9CC7               	bcf	4039,6,c	;volatile
  4074   001E50                     
  4075                           ;i2c.c: 24:  SMP = 1;
  4076   001E50  8EC7               	bsf	4039,7,c	;volatile
  4077   001E52                     
  4078                           ;i2c.c: 26:  SSPIF = 0;
  4079   001E52  969E               	bcf	3998,3,c	;volatile
  4080   001E54                     
  4081                           ;i2c.c: 28:  BCLIF = 0;
  4082   001E54  96A1               	bcf	4001,3,c	;volatile
  4083   001E56  0012               	return		;funcret
  4084   001E58                     __end_of_init_i2c:
  4085                           	callstack 0
  4086                           
  4087 ;; *************** function _init_ds1307 *****************
  4088 ;; Defined at:
  4089 ;;		line 20 in file "ds1307.c"
  4090 ;; Parameters:    Size  Location     Type
  4091 ;;		None
  4092 ;; Auto vars:     Size  Location     Type
  4093 ;;  dummy           1   14[COMRAM] unsigned char 
  4094 ;; Return value:  Size  Location     Type
  4095 ;;                  1    wreg      void 
  4096 ;; Registers used:
  4097 ;;		wreg, status,2, status,0, cstack
  4098 ;; Tracked objects:
  4099 ;;		On entry : 0/0
  4100 ;;		On exit  : 0/0
  4101 ;;		Unchanged: 0/0
  4102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4103 ;;      Params:         0       0       0       0       0       0       0
  4104 ;;      Locals:         1       0       0       0       0       0       0
  4105 ;;      Temps:          0       0       0       0       0       0       0
  4106 ;;      Totals:         1       0       0       0       0       0       0
  4107 ;;Total ram usage:        1 bytes
  4108 ;; Hardware stack levels used: 1
  4109 ;; Hardware stack levels required when called: 5
  4110 ;; This function calls:
  4111 ;;		_read_ds1307
  4112 ;;		_write_ds1307
  4113 ;; This function is called by:
  4114 ;;		_inti_config
  4115 ;; This function uses a non-reentrant model
  4116 ;;
  4117                           
  4118                           	psect	text12
  4119   001BA8                     __ptext12:
  4120                           	callstack 0
  4121   001BA8                     _init_ds1307:
  4122                           	callstack 24
  4123   001BA8                     
  4124                           ;ds1307.c: 22:  unsigned char dummy;;ds1307.c: 25:  dummy = read_ds1307(0x00);
  4125   001BA8  0E00               	movlw	0
  4126   001BAA  ECBE  F00E         	call	_read_ds1307
  4127   001BAE  6E43               	movwf	init_ds1307@dummy^0,c
  4128   001BB0                     
  4129                           ;ds1307.c: 26:  write_ds1307(0x00, dummy | 0x80);
  4130   001BB0  5043               	movf	init_ds1307@dummy^0,w,c
  4131   001BB2  0980               	iorlw	128
  4132   001BB4  6E41               	movwf	write_ds1307@data^0,c
  4133   001BB6  0E00               	movlw	0
  4134   001BB8  ECE3  F00E         	call	_write_ds1307
  4135   001BBC                     
  4136                           ;ds1307.c: 29:  dummy = read_ds1307(0x02);
  4137   001BBC  0E02               	movlw	2
  4138   001BBE  ECBE  F00E         	call	_read_ds1307
  4139   001BC2  6E43               	movwf	init_ds1307@dummy^0,c
  4140                           
  4141                           ;ds1307.c: 30:  write_ds1307(0x02, dummy | 0x40);
  4142   001BC4  5043               	movf	init_ds1307@dummy^0,w,c
  4143   001BC6  0940               	iorlw	64
  4144   001BC8  6E41               	movwf	write_ds1307@data^0,c
  4145   001BCA  0E02               	movlw	2
  4146   001BCC  ECE3  F00E         	call	_write_ds1307
  4147   001BD0                     
  4148                           ;ds1307.c: 45:  write_ds1307(0x07, 0x93);
  4149   001BD0  0E93               	movlw	147
  4150   001BD2  6E41               	movwf	write_ds1307@data^0,c
  4151   001BD4  0E07               	movlw	7
  4152   001BD6  ECE3  F00E         	call	_write_ds1307
  4153   001BDA                     
  4154                           ;ds1307.c: 48:  dummy = read_ds1307(0x00);
  4155   001BDA  0E00               	movlw	0
  4156   001BDC  ECBE  F00E         	call	_read_ds1307
  4157   001BE0  6E43               	movwf	init_ds1307@dummy^0,c
  4158                           
  4159                           ;ds1307.c: 49:  write_ds1307(0x00, dummy & 0x7F);
  4160   001BE2  5043               	movf	init_ds1307@dummy^0,w,c
  4161   001BE4  0B7F               	andlw	127
  4162   001BE6  6E41               	movwf	write_ds1307@data^0,c
  4163   001BE8  0E00               	movlw	0
  4164   001BEA  ECE3  F00E         	call	_write_ds1307
  4165   001BEE  0012               	return		;funcret
  4166   001BF0                     __end_of_init_ds1307:
  4167                           	callstack 0
  4168                           
  4169 ;; *************** function _write_ds1307 *****************
  4170 ;; Defined at:
  4171 ;;		line 53 in file "ds1307.c"
  4172 ;; Parameters:    Size  Location     Type
  4173 ;;  address         1    wreg     unsigned char 
  4174 ;;  data            1   12[COMRAM] unsigned char 
  4175 ;; Auto vars:     Size  Location     Type
  4176 ;;  address         1   13[COMRAM] unsigned char 
  4177 ;; Return value:  Size  Location     Type
  4178 ;;                  1    wreg      void 
  4179 ;; Registers used:
  4180 ;;		wreg, status,2, cstack
  4181 ;; Tracked objects:
  4182 ;;		On entry : 0/0
  4183 ;;		On exit  : 0/0
  4184 ;;		Unchanged: 0/0
  4185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4186 ;;      Params:         1       0       0       0       0       0       0
  4187 ;;      Locals:         1       0       0       0       0       0       0
  4188 ;;      Temps:          0       0       0       0       0       0       0
  4189 ;;      Totals:         2       0       0       0       0       0       0
  4190 ;;Total ram usage:        2 bytes
  4191 ;; Hardware stack levels used: 1
  4192 ;; Hardware stack levels required when called: 3
  4193 ;; This function calls:
  4194 ;;		_i2c_start
  4195 ;;		_i2c_stop
  4196 ;;		_i2c_write
  4197 ;; This function is called by:
  4198 ;;		_init_ds1307
  4199 ;;		_save_exit
  4200 ;; This function uses a non-reentrant model
  4201 ;;
  4202                           
  4203                           	psect	text13
  4204   001DC6                     __ptext13:
  4205                           	callstack 0
  4206   001DC6                     _write_ds1307:
  4207                           	callstack 25
  4208                           
  4209                           ;incstack = 0
  4210                           ;write_ds1307@address stored from wreg
  4211   001DC6  6E42               	movwf	write_ds1307@address^0,c
  4212   001DC8                     
  4213                           ;ds1307.c: 53: void write_ds1307(unsigned char address, unsigned char data);ds1307.c: 54
      +                          : {;ds1307.c: 55:  i2c_start();
  4214   001DC8  EC61  F00F         	call	_i2c_start	;wreg free
  4215   001DCC                     
  4216                           ;ds1307.c: 56:  i2c_write(0xD0);
  4217   001DCC  0ED0               	movlw	208
  4218   001DCE  EC4F  F00F         	call	_i2c_write
  4219   001DD2                     
  4220                           ;ds1307.c: 57:  i2c_write(address);
  4221   001DD2  5042               	movf	write_ds1307@address^0,w,c
  4222   001DD4  EC4F  F00F         	call	_i2c_write
  4223   001DD8                     
  4224                           ;ds1307.c: 58:  i2c_write(data);
  4225   001DD8  5041               	movf	write_ds1307@data^0,w,c
  4226   001DDA  EC4F  F00F         	call	_i2c_write
  4227   001DDE                     
  4228                           ;ds1307.c: 59:  i2c_stop();
  4229   001DDE  EC5D  F00F         	call	_i2c_stop	;wreg free
  4230   001DE2  0012               	return		;funcret
  4231   001DE4                     __end_of_write_ds1307:
  4232                           	callstack 0
  4233                           
  4234 ;; *************** function _init_clcd *****************
  4235 ;; Defined at:
  4236 ;;		line 35 in file "clcd.c"
  4237 ;; Parameters:    Size  Location     Type
  4238 ;;		None
  4239 ;; Auto vars:     Size  Location     Type
  4240 ;;		None
  4241 ;; Return value:  Size  Location     Type
  4242 ;;                  1    wreg      void 
  4243 ;; Registers used:
  4244 ;;		wreg, status,2, status,0, cstack
  4245 ;; Tracked objects:
  4246 ;;		On entry : 0/0
  4247 ;;		On exit  : 0/0
  4248 ;;		Unchanged: 0/0
  4249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4250 ;;      Params:         0       0       0       0       0       0       0
  4251 ;;      Locals:         0       0       0       0       0       0       0
  4252 ;;      Temps:          1       0       0       0       0       0       0
  4253 ;;      Totals:         1       0       0       0       0       0       0
  4254 ;;Total ram usage:        1 bytes
  4255 ;; Hardware stack levels used: 1
  4256 ;; Hardware stack levels required when called: 2
  4257 ;; This function calls:
  4258 ;;		_clcd_write
  4259 ;; This function is called by:
  4260 ;;		_inti_config
  4261 ;; This function uses a non-reentrant model
  4262 ;;
  4263                           
  4264                           	psect	text14
  4265   001712                     __ptext14:
  4266                           	callstack 0
  4267   001712                     _init_clcd:
  4268                           	callstack 27
  4269   001712                     
  4270                           ;clcd.c: 38:  TRISD = 0x00;
  4271   001712  0E00               	movlw	0
  4272   001714  6E95               	movwf	149,c	;volatile
  4273   001716                     
  4274                           ;clcd.c: 40:  TRISC = TRISC & 0xF8;
  4275   001716  5094               	movf	148,w,c	;volatile
  4276   001718  0BF8               	andlw	248
  4277   00171A  6E94               	movwf	148,c	;volatile
  4278   00171C                     
  4279                           ;clcd.c: 42:  RC0 = 0;
  4280   00171C  9082               	bcf	3970,0,c	;volatile
  4281   00171E                     
  4282                           ;clcd.c: 46:     _delay((unsigned long)((30)*(20000000/4000.0)));
  4283   00171E  0EC3               	movlw	195
  4284   001720  6E37               	movwf	??_init_clcd^0,c
  4285   001722  0ECD               	movlw	205
  4286   001724                     u3237:
  4287   001724  2EE8               	decfsz	wreg,f,c
  4288   001726  D7FE               	bra	u3237
  4289   001728  2E37               	decfsz	??_init_clcd^0,f,c
  4290   00172A  D7FC               	bra	u3237
  4291   00172C  0000               	nop	
  4292   00172E                     
  4293                           ;clcd.c: 49:     clcd_write(0x33, 0 );
  4294   00172E  0E00               	movlw	0
  4295   001730  6E35               	movwf	clcd_write@control_bit^0,c
  4296   001732  0E33               	movlw	51
  4297   001734  EC5C  F00E         	call	_clcd_write
  4298   001738                     
  4299                           ;clcd.c: 50:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  4300   001738  0E1B               	movlw	27
  4301   00173A  6E37               	movwf	??_init_clcd^0,c
  4302   00173C  0E9E               	movlw	158
  4303   00173E                     u3247:
  4304   00173E  2EE8               	decfsz	wreg,f,c
  4305   001740  D7FE               	bra	u3247
  4306   001742  2E37               	decfsz	??_init_clcd^0,f,c
  4307   001744  D7FC               	bra	u3247
  4308   001746  D000               	nop2	
  4309   001748                     
  4310                           ;clcd.c: 51:     clcd_write(0x33, 0 );
  4311   001748  0E00               	movlw	0
  4312   00174A  6E35               	movwf	clcd_write@control_bit^0,c
  4313   00174C  0E33               	movlw	51
  4314   00174E  EC5C  F00E         	call	_clcd_write
  4315   001752                     
  4316                           ;clcd.c: 52:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4317   001752  0EA6               	movlw	166
  4318   001754                     u3257:
  4319   001754  2EE8               	decfsz	wreg,f,c
  4320   001756  D7FE               	bra	u3257
  4321   001758  D000               	nop2	
  4322   00175A                     
  4323                           ;clcd.c: 53:     clcd_write(0x33, 0 );
  4324   00175A  0E00               	movlw	0
  4325   00175C  6E35               	movwf	clcd_write@control_bit^0,c
  4326   00175E  0E33               	movlw	51
  4327   001760  EC5C  F00E         	call	_clcd_write
  4328   001764                     
  4329                           ;clcd.c: 54:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  4330   001764  D000               	nop2		;2 cycle nop
  4331   001766  D000               	nop2		;2 cycle nop
  4332   001768  0000               	nop	
  4333   00176A                     
  4334                           ;clcd.c: 56:     clcd_write(0x02, 0);
  4335   00176A  0E00               	movlw	0
  4336   00176C  6E35               	movwf	clcd_write@control_bit^0,c
  4337   00176E  0E02               	movlw	2
  4338   001770  EC5C  F00E         	call	_clcd_write
  4339   001774                     
  4340                           ;clcd.c: 57:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4341   001774  0EA6               	movlw	166
  4342   001776                     u3267:
  4343   001776  2EE8               	decfsz	wreg,f,c
  4344   001778  D7FE               	bra	u3267
  4345   00177A  D000               	nop2	
  4346   00177C                     
  4347                           ;clcd.c: 58:     clcd_write(0x38, 0);
  4348   00177C  0E00               	movlw	0
  4349   00177E  6E35               	movwf	clcd_write@control_bit^0,c
  4350   001780  0E38               	movlw	56
  4351   001782  EC5C  F00E         	call	_clcd_write
  4352   001786                     
  4353                           ;clcd.c: 59:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4354   001786  0EA6               	movlw	166
  4355   001788                     u3277:
  4356   001788  2EE8               	decfsz	wreg,f,c
  4357   00178A  D7FE               	bra	u3277
  4358   00178C  D000               	nop2	
  4359   00178E                     
  4360                           ;clcd.c: 60:     clcd_write(0x01, 0);
  4361   00178E  0E00               	movlw	0
  4362   001790  6E35               	movwf	clcd_write@control_bit^0,c
  4363   001792  0E01               	movlw	1
  4364   001794  EC5C  F00E         	call	_clcd_write
  4365   001798                     
  4366                           ;clcd.c: 61:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  4367   001798  0E04               	movlw	4
  4368   00179A  6E37               	movwf	??_init_clcd^0,c
  4369   00179C  0E3E               	movlw	62
  4370   00179E                     u3287:
  4371   00179E  2EE8               	decfsz	wreg,f,c
  4372   0017A0  D7FE               	bra	u3287
  4373   0017A2  2E37               	decfsz	??_init_clcd^0,f,c
  4374   0017A4  D7FC               	bra	u3287
  4375   0017A6                     
  4376                           ;clcd.c: 62:     clcd_write(0x0C, 0);
  4377   0017A6  0E00               	movlw	0
  4378   0017A8  6E35               	movwf	clcd_write@control_bit^0,c
  4379   0017AA  0E0C               	movlw	12
  4380   0017AC  EC5C  F00E         	call	_clcd_write
  4381   0017B0                     
  4382                           ;clcd.c: 63:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4383   0017B0  0EA6               	movlw	166
  4384   0017B2                     u3297:
  4385   0017B2  2EE8               	decfsz	wreg,f,c
  4386   0017B4  D7FE               	bra	u3297
  4387   0017B6  D000               	nop2	
  4388   0017B8  0012               	return		;funcret
  4389   0017BA                     __end_of_init_clcd:
  4390                           	callstack 0
  4391                           
  4392 ;; *************** function _init_adc *****************
  4393 ;; Defined at:
  4394 ;;		line 12 in file "adc.c"
  4395 ;; Parameters:    Size  Location     Type
  4396 ;;		None
  4397 ;; Auto vars:     Size  Location     Type
  4398 ;;		None
  4399 ;; Return value:  Size  Location     Type
  4400 ;;                  1    wreg      void 
  4401 ;; Registers used:
  4402 ;;		wreg, status,2
  4403 ;; Tracked objects:
  4404 ;;		On entry : 0/0
  4405 ;;		On exit  : 0/0
  4406 ;;		Unchanged: 0/0
  4407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4408 ;;      Params:         0       0       0       0       0       0       0
  4409 ;;      Locals:         0       0       0       0       0       0       0
  4410 ;;      Temps:          0       0       0       0       0       0       0
  4411 ;;      Totals:         0       0       0       0       0       0       0
  4412 ;;Total ram usage:        0 bytes
  4413 ;; Hardware stack levels used: 1
  4414 ;; Hardware stack levels required when called: 1
  4415 ;; This function calls:
  4416 ;;		Nothing
  4417 ;; This function is called by:
  4418 ;;		_inti_config
  4419 ;; This function uses a non-reentrant model
  4420 ;;
  4421                           
  4422                           	psect	text15
  4423   001DA6                     __ptext15:
  4424                           	callstack 0
  4425   001DA6                     _init_adc:
  4426                           	callstack 28
  4427   001DA6                     
  4428                           ;adc.c: 15:  ADFM = 1;
  4429   001DA6  8EC0               	bsf	4032,7,c	;volatile
  4430                           
  4431                           ;adc.c: 21:  ACQT2 = 0;
  4432   001DA8  9AC0               	bcf	4032,5,c	;volatile
  4433                           
  4434                           ;adc.c: 22:  ACQT1 = 1;
  4435   001DAA  88C0               	bsf	4032,4,c	;volatile
  4436                           
  4437                           ;adc.c: 23:  ACQT0 = 0;
  4438   001DAC  96C0               	bcf	4032,3,c	;volatile
  4439                           
  4440                           ;adc.c: 29:  ADCS0 = 0;
  4441   001DAE  90C0               	bcf	4032,0,c	;volatile
  4442                           
  4443                           ;adc.c: 30:  ADCS1 = 1;
  4444   001DB0  82C0               	bsf	4032,1,c	;volatile
  4445                           
  4446                           ;adc.c: 31:  ADCS2 = 0;
  4447   001DB2  94C0               	bcf	4032,2,c	;volatile
  4448                           
  4449                           ;adc.c: 34:  GODONE = 0;
  4450   001DB4  92C2               	bcf	4034,1,c	;volatile
  4451                           
  4452                           ;adc.c: 39:  VCFG1 = 0;
  4453   001DB6  9AC1               	bcf	4033,5,c	;volatile
  4454                           
  4455                           ;adc.c: 41:  VCFG0 = 0;
  4456   001DB8  98C1               	bcf	4033,4,c	;volatile
  4457   001DBA                     
  4458                           ;adc.c: 44:  ADRESH = 0;
  4459   001DBA  0E00               	movlw	0
  4460   001DBC  6EC4               	movwf	196,c	;volatile
  4461                           
  4462                           ;adc.c: 45:  ADRESL = 0;
  4463   001DBE  0E00               	movlw	0
  4464   001DC0  6EC3               	movwf	195,c	;volatile
  4465   001DC2                     
  4466                           ;adc.c: 48:  ADON = 1;
  4467   001DC2  80C2               	bsf	4034,0,c	;volatile
  4468   001DC4  0012               	return		;funcret
  4469   001DC6                     __end_of_init_adc:
  4470                           	callstack 0
  4471                           
  4472 ;; *************** function _download_log *****************
  4473 ;; Defined at:
  4474 ;;		line 9 in file "download_log.c"
  4475 ;; Parameters:    Size  Location     Type
  4476 ;;		None
  4477 ;; Auto vars:     Size  Location     Type
  4478 ;;  j               1   21[COMRAM] unsigned char 
  4479 ;;  i               4   16[COMRAM] unsigned long 
  4480 ;;  i               1   20[COMRAM] unsigned char 
  4481 ;;  prev_i          1    0        unsigned char 
  4482 ;; Return value:  Size  Location     Type
  4483 ;;                  1    wreg      void 
  4484 ;; Registers used:
  4485 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4486 ;; Tracked objects:
  4487 ;;		On entry : 0/0
  4488 ;;		On exit  : 0/0
  4489 ;;		Unchanged: 0/0
  4490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4491 ;;      Params:         0       0       0       0       0       0       0
  4492 ;;      Locals:         6       0       0       0       0       0       0
  4493 ;;      Temps:          0       0       0       0       0       0       0
  4494 ;;      Totals:         6       0       0       0       0       0       0
  4495 ;;Total ram usage:        6 bytes
  4496 ;; Hardware stack levels used: 1
  4497 ;; Hardware stack levels required when called: 5
  4498 ;; This function calls:
  4499 ;;		_clcd_print
  4500 ;;		_init_uart
  4501 ;;		_putch
  4502 ;;		_puts
  4503 ;;		_read_external_eeprom
  4504 ;;		_store_event
  4505 ;; This function is called by:
  4506 ;;		_main
  4507 ;; This function uses a non-reentrant model
  4508 ;;
  4509                           
  4510                           	psect	text16
  4511   0012F2                     __ptext16:
  4512                           	callstack 0
  4513   0012F2                     _download_log:
  4514                           	callstack 25
  4515   0012F2                     
  4516                           ;download_log.c: 11:     char i = 0;
  4517   0012F2  0E00               	movlw	0
  4518   0012F4  6E49               	movwf	download_log@i^0,c
  4519   0012F6                     
  4520                           ;download_log.c: 12:     init_uart();
  4521   0012F6  ECA9  F00E         	call	_init_uart	;wreg free
  4522                           
  4523                           ;download_log.c: 13:     while(i<lap)
  4524   0012FA  EFC8  F009         	goto	l3316
  4525   0012FE                     l3284:
  4526                           
  4527                           ;download_log.c: 14:     {;download_log.c: 15:         for(char j = 0;j<10;j++)
  4528   0012FE  0E00               	movlw	0
  4529   001300  6E4A               	movwf	download_log@j^0,c
  4530   001302                     l3290:
  4531                           
  4532                           ;download_log.c: 16:         {;download_log.c: 17:             putch(read_external_eepro
      +                          m((i*10)+j));
  4533   001302  5049               	movf	download_log@i^0,w,c
  4534   001304  0D0A               	mullw	10
  4535   001306  50F3               	movf	243,w,c
  4536   001308  244A               	addwf	download_log@j^0,w,c
  4537   00130A  EC94  F00E         	call	_read_external_eeprom
  4538   00130E  EC2C  F00F         	call	_putch
  4539   001312                     
  4540                           ;download_log.c: 18:             if(j == 1)
  4541   001312  044A               	decf	download_log@j^0,w,c
  4542   001314  A4D8               	btfss	status,2,c
  4543   001316  EF8F  F009         	goto	u2441
  4544   00131A  EF91  F009         	goto	u2440
  4545   00131E                     u2441:
  4546   00131E  EF94  F009         	goto	l3296
  4547   001322                     u2440:
  4548   001322                     
  4549                           ;download_log.c: 19:                 putch(':');
  4550   001322  0E3A               	movlw	58
  4551   001324  EC2C  F00F         	call	_putch
  4552   001328                     l3296:
  4553                           
  4554                           ;download_log.c: 20:             if(j== 3)
  4555   001328  0E03               	movlw	3
  4556   00132A  184A               	xorwf	download_log@j^0,w,c
  4557   00132C  A4D8               	btfss	status,2,c
  4558   00132E  EF9B  F009         	goto	u2451
  4559   001332  EF9D  F009         	goto	u2450
  4560   001336                     u2451:
  4561   001336  EFA0  F009         	goto	l3300
  4562   00133A                     u2450:
  4563   00133A                     
  4564                           ;download_log.c: 21:                 putch(':');
  4565   00133A  0E3A               	movlw	58
  4566   00133C  EC2C  F00F         	call	_putch
  4567   001340                     l3300:
  4568                           
  4569                           ;download_log.c: 22:             if(j == 5)
  4570   001340  0E05               	movlw	5
  4571   001342  184A               	xorwf	download_log@j^0,w,c
  4572   001344  A4D8               	btfss	status,2,c
  4573   001346  EFA7  F009         	goto	u2461
  4574   00134A  EFA9  F009         	goto	u2460
  4575   00134E                     u2461:
  4576   00134E  EFAC  F009         	goto	l3304
  4577   001352                     u2460:
  4578   001352                     
  4579                           ;download_log.c: 23:                 putch(' ');
  4580   001352  0E20               	movlw	32
  4581   001354  EC2C  F00F         	call	_putch
  4582   001358                     l3304:
  4583                           
  4584                           ;download_log.c: 24:             if(j==7)
  4585   001358  0E07               	movlw	7
  4586   00135A  184A               	xorwf	download_log@j^0,w,c
  4587   00135C  A4D8               	btfss	status,2,c
  4588   00135E  EFB3  F009         	goto	u2471
  4589   001362  EFB5  F009         	goto	u2470
  4590   001366                     u2471:
  4591   001366  EFB8  F009         	goto	l3308
  4592   00136A                     u2470:
  4593   00136A                     
  4594                           ;download_log.c: 25:                 putch(' ');
  4595   00136A  0E20               	movlw	32
  4596   00136C  EC2C  F00F         	call	_putch
  4597   001370                     l3308:
  4598                           
  4599                           ;download_log.c: 29:         }
  4600   001370  2A4A               	incf	download_log@j^0,f,c
  4601   001372  0E09               	movlw	9
  4602   001374  644A               	cpfsgt	download_log@j^0,c
  4603   001376  EFBF  F009         	goto	u2481
  4604   00137A  EFC1  F009         	goto	u2480
  4605   00137E                     u2481:
  4606   00137E  EF81  F009         	goto	l3290
  4607   001382                     u2480:
  4608   001382                     
  4609                           ;download_log.c: 30:         puts("\n\r");
  4610   001382  0ED6               	movlw	low STR_36
  4611   001384  6E36               	movwf	puts@s^0,c
  4612   001386  0E2F               	movlw	high STR_36
  4613   001388  6E37               	movwf	(puts@s+1)^0,c
  4614   00138A  EC79  F00E         	call	_puts	;wreg free
  4615   00138E                     
  4616                           ;download_log.c: 31:         i++;
  4617   00138E  2A49               	incf	download_log@i^0,f,c
  4618   001390                     l3316:
  4619                           
  4620                           ;download_log.c: 13:     while(i<lap)
  4621   001390  5024               	movf	_lap^0,w,c
  4622   001392  5C49               	subwf	download_log@i^0,w,c
  4623   001394  A0D8               	btfss	status,0,c
  4624   001396  EFCF  F009         	goto	u2491
  4625   00139A  EFD1  F009         	goto	u2490
  4626   00139E                     u2491:
  4627   00139E  EF7F  F009         	goto	l3284
  4628   0013A2                     u2490:
  4629   0013A2                     
  4630                           ;download_log.c: 33:     clcd_print(" LOGS DOWNLOADED  ",(0x80 + (0)));
  4631   0013A2  0EC0               	movlw	low STR_37
  4632   0013A4  6E37               	movwf	clcd_print@data^0,c
  4633   0013A6  0E2E               	movlw	high STR_37
  4634   0013A8  6E38               	movwf	(clcd_print@data+1)^0,c
  4635   0013AA  0E80               	movlw	128
  4636   0013AC  6E39               	movwf	clcd_print@addr^0,c
  4637   0013AE  EC0C  F00D         	call	_clcd_print	;wreg free
  4638                           
  4639                           ;download_log.c: 34:     clcd_print(" SUCCESSFULLY    ",(0xC0 + (0)));
  4640   0013B2  0EF8               	movlw	low STR_38
  4641   0013B4  6E37               	movwf	clcd_print@data^0,c
  4642   0013B6  0E2E               	movlw	high STR_38
  4643   0013B8  6E38               	movwf	(clcd_print@data+1)^0,c
  4644   0013BA  0EC0               	movlw	192
  4645   0013BC  6E39               	movwf	clcd_print@addr^0,c
  4646   0013BE  EC0C  F00D         	call	_clcd_print	;wreg free
  4647   0013C2                     
  4648                           ;download_log.c: 35:     for(unsigned long int i= 1500000;i--;);
  4649   0013C2  0E60               	movlw	96
  4650   0013C4  6E45               	movwf	download_log@i_541^0,c
  4651   0013C6  0EE3               	movlw	227
  4652   0013C8  6E46               	movwf	(download_log@i_541+1)^0,c
  4653   0013CA  0E16               	movlw	22
  4654   0013CC  6E47               	movwf	(download_log@i_541+2)^0,c
  4655   0013CE  0E00               	movlw	0
  4656   0013D0  6E48               	movwf	(download_log@i_541+3)^0,c
  4657   0013D2                     l3322:
  4658   0013D2  0645               	decf	download_log@i_541^0,f,c
  4659   0013D4  0E00               	movlw	0
  4660   0013D6  5A46               	subwfb	(download_log@i_541+1)^0,f,c
  4661   0013D8  5A47               	subwfb	(download_log@i_541+2)^0,f,c
  4662   0013DA  5A48               	subwfb	(download_log@i_541+3)^0,f,c
  4663   0013DC  2845               	incf	download_log@i_541^0,w,c
  4664   0013DE  E10A               	bnz	u2501
  4665   0013E0  2846               	incf	(download_log@i_541+1)^0,w,c
  4666   0013E2  E108               	bnz	u2501
  4667   0013E4  2847               	incf	(download_log@i_541+2)^0,w,c
  4668   0013E6  E106               	bnz	u2501
  4669   0013E8  2848               	incf	(download_log@i_541+3)^0,w,c
  4670   0013EA  A4D8               	btfss	status,2,c
  4671   0013EC  EFFA  F009         	goto	u2501
  4672   0013F0  EFFC  F009         	goto	u2500
  4673   0013F4                     u2501:
  4674   0013F4  EFE9  F009         	goto	l3322
  4675   0013F8                     u2500:
  4676   0013F8                     
  4677                           ;download_log.c: 38:     store_event();
  4678   0013F8  EC85  F00A         	call	_store_event	;wreg free
  4679   0013FC                     
  4680                           ;download_log.c: 39:     main_f = 2;
  4681   0013FC  0E02               	movlw	2
  4682   0013FE  6E2B               	movwf	_main_f^0,c
  4683   001400  0012               	return		;funcret
  4684   001402                     __end_of_download_log:
  4685                           	callstack 0
  4686                           
  4687 ;; *************** function _read_external_eeprom *****************
  4688 ;; Defined at:
  4689 ;;		line 63 in file "eeprom.c"
  4690 ;; Parameters:    Size  Location     Type
  4691 ;;  address         1    wreg     unsigned char 
  4692 ;; Auto vars:     Size  Location     Type
  4693 ;;  address         1    1[COMRAM] unsigned char 
  4694 ;;  data            1    2[COMRAM] unsigned char 
  4695 ;; Return value:  Size  Location     Type
  4696 ;;                  1    wreg      unsigned char 
  4697 ;; Registers used:
  4698 ;;		wreg, status,2, cstack
  4699 ;; Tracked objects:
  4700 ;;		On entry : 0/0
  4701 ;;		On exit  : 0/0
  4702 ;;		Unchanged: 0/0
  4703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4704 ;;      Params:         0       0       0       0       0       0       0
  4705 ;;      Locals:         2       0       0       0       0       0       0
  4706 ;;      Temps:          0       0       0       0       0       0       0
  4707 ;;      Totals:         2       0       0       0       0       0       0
  4708 ;;Total ram usage:        2 bytes
  4709 ;; Hardware stack levels used: 1
  4710 ;; Hardware stack levels required when called: 4
  4711 ;; This function calls:
  4712 ;;		_i2c_read
  4713 ;;		_i2c_rep_start
  4714 ;;		_i2c_start
  4715 ;;		_i2c_stop
  4716 ;;		_i2c_write
  4717 ;; This function is called by:
  4718 ;;		_password
  4719 ;;		_view_log
  4720 ;;		_download_log
  4721 ;; This function uses a non-reentrant model
  4722 ;;
  4723                           
  4724                           	psect	text17
  4725   001D28                     __ptext17:
  4726                           	callstack 0
  4727   001D28                     _read_external_eeprom:
  4728                           	callstack 25
  4729                           
  4730                           ;incstack = 0
  4731                           ;read_external_eeprom@address stored from wreg
  4732   001D28  6E36               	movwf	read_external_eeprom@address^0,c
  4733   001D2A                     
  4734                           ;eeprom.c: 63: unsigned char read_external_eeprom(unsigned char address);eeprom.c: 64: {
      +                          ;eeprom.c: 65:  unsigned char data;;eeprom.c: 67:  i2c_start();
  4735   001D2A  EC61  F00F         	call	_i2c_start	;wreg free
  4736   001D2E                     
  4737                           ;eeprom.c: 68:  i2c_write(0xA0);
  4738   001D2E  0EA0               	movlw	160
  4739   001D30  EC4F  F00F         	call	_i2c_write
  4740   001D34                     
  4741                           ;eeprom.c: 69:  i2c_write(address);
  4742   001D34  5036               	movf	read_external_eeprom@address^0,w,c
  4743   001D36  EC4F  F00F         	call	_i2c_write
  4744   001D3A                     
  4745                           ;eeprom.c: 70:  i2c_rep_start();
  4746   001D3A  EC55  F00F         	call	_i2c_rep_start	;wreg free
  4747   001D3E                     
  4748                           ;eeprom.c: 71:  i2c_write(0xA1);
  4749   001D3E  0EA1               	movlw	161
  4750   001D40  EC4F  F00F         	call	_i2c_write
  4751                           
  4752                           ;eeprom.c: 72:  data = i2c_read();
  4753   001D44  EC49  F00F         	call	_i2c_read	;wreg free
  4754   001D48  6E37               	movwf	read_external_eeprom@data^0,c
  4755   001D4A                     
  4756                           ;eeprom.c: 73:  i2c_stop();
  4757   001D4A  EC5D  F00F         	call	_i2c_stop	;wreg free
  4758                           
  4759                           ;eeprom.c: 75:  return data;
  4760   001D4E  5037               	movf	read_external_eeprom@data^0,w,c
  4761   001D50  0012               	return		;funcret
  4762   001D52                     __end_of_read_external_eeprom:
  4763                           	callstack 0
  4764                           
  4765 ;; *************** function _puts *****************
  4766 ;; Defined at:
  4767 ;;		line 68 in file "uart.c"
  4768 ;; Parameters:    Size  Location     Type
  4769 ;;  s               2    1[COMRAM] PTR const unsigned char 
  4770 ;;		 -> STR_36(3), 
  4771 ;; Auto vars:     Size  Location     Type
  4772 ;;		None
  4773 ;; Return value:  Size  Location     Type
  4774 ;;                  2    1[COMRAM] int 
  4775 ;; Registers used:
  4776 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4777 ;; Tracked objects:
  4778 ;;		On entry : 0/0
  4779 ;;		On exit  : 0/0
  4780 ;;		Unchanged: 0/0
  4781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4782 ;;      Params:         2       0       0       0       0       0       0
  4783 ;;      Locals:         0       0       0       0       0       0       0
  4784 ;;      Temps:          0       0       0       0       0       0       0
  4785 ;;      Totals:         2       0       0       0       0       0       0
  4786 ;;Total ram usage:        2 bytes
  4787 ;; Hardware stack levels used: 1
  4788 ;; Hardware stack levels required when called: 2
  4789 ;; This function calls:
  4790 ;;		_putch
  4791 ;; This function is called by:
  4792 ;;		_download_log
  4793 ;; This function uses a non-reentrant model
  4794 ;;
  4795                           
  4796                           	psect	text18
  4797   001CF2                     __ptext18:
  4798                           	callstack 0
  4799   001CF2                     _puts:
  4800                           	callstack 27
  4801   001CF2                     
  4802                           ;uart.c: 68: int puts(const char *s);uart.c: 69: {;uart.c: 70:  while(*s)
  4803   001CF2  EF85  F00E         	goto	l2956
  4804   001CF6                     l2952:
  4805                           
  4806                           ;uart.c: 71:  {;uart.c: 72:   putch(*s++);
  4807   001CF6  C036  FFF6         	movff	puts@s,tblptrl
  4808   001CFA  C037  FFF7         	movff	puts@s+1,tblptrh
  4809   001CFE                     	if	0	;tblptru may be non-zero
  4810   001CFE                     	endif
  4811   001CFE                     	if	0	;tblptru may be non-zero
  4812   001CFE                     	endif
  4813   001CFE  0008               	tblrd		*
  4814   001D00  50F5               	movf	tablat,w,c
  4815   001D02  EC2C  F00F         	call	_putch
  4816   001D06  4A36               	infsnz	puts@s^0,f,c
  4817   001D08  2A37               	incf	(puts@s+1)^0,f,c
  4818   001D0A                     l2956:
  4819                           
  4820                           ;uart.c: 70:  while(*s)
  4821   001D0A  C036  FFF6         	movff	puts@s,tblptrl
  4822   001D0E  C037  FFF7         	movff	puts@s+1,tblptrh
  4823   001D12                     	if	0	;tblptru may be non-zero
  4824   001D12                     	endif
  4825   001D12                     	if	0	;tblptru may be non-zero
  4826   001D12                     	endif
  4827   001D12  0008               	tblrd		*
  4828   001D14  50F5               	movf	tablat,w,c
  4829   001D16  0900               	iorlw	0
  4830   001D18  A4D8               	btfss	status,2,c
  4831   001D1A  EF91  F00E         	goto	u2001
  4832   001D1E  EF93  F00E         	goto	u2000
  4833   001D22                     u2001:
  4834   001D22  EF7B  F00E         	goto	l2952
  4835   001D26                     u2000:
  4836   001D26  0012               	return		;funcret
  4837   001D28                     __end_of_puts:
  4838                           	callstack 0
  4839                           
  4840 ;; *************** function _putch *****************
  4841 ;; Defined at:
  4842 ;;		line 57 in file "uart.c"
  4843 ;; Parameters:    Size  Location     Type
  4844 ;;  byte            1    wreg     unsigned char 
  4845 ;; Auto vars:     Size  Location     Type
  4846 ;;  byte            1    0[COMRAM] unsigned char 
  4847 ;; Return value:  Size  Location     Type
  4848 ;;                  1    wreg      void 
  4849 ;; Registers used:
  4850 ;;		wreg
  4851 ;; Tracked objects:
  4852 ;;		On entry : 0/0
  4853 ;;		On exit  : 0/0
  4854 ;;		Unchanged: 0/0
  4855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4856 ;;      Params:         0       0       0       0       0       0       0
  4857 ;;      Locals:         1       0       0       0       0       0       0
  4858 ;;      Temps:          0       0       0       0       0       0       0
  4859 ;;      Totals:         1       0       0       0       0       0       0
  4860 ;;Total ram usage:        1 bytes
  4861 ;; Hardware stack levels used: 1
  4862 ;; Hardware stack levels required when called: 1
  4863 ;; This function calls:
  4864 ;;		Nothing
  4865 ;; This function is called by:
  4866 ;;		_puts
  4867 ;;		_download_log
  4868 ;;		_getche
  4869 ;; This function uses a non-reentrant model
  4870 ;;
  4871                           
  4872                           	psect	text19
  4873   001E58                     __ptext19:
  4874                           	callstack 0
  4875   001E58                     _putch:
  4876                           	callstack 27
  4877                           
  4878                           ;incstack = 0
  4879                           ;putch@byte stored from wreg
  4880   001E58  6E35               	movwf	putch@byte^0,c
  4881   001E5A                     l598:
  4882                           
  4883                           ;uart.c: 61:  while(!TXIF)
  4884   001E5A  A89E               	btfss	3998,4,c	;volatile
  4885   001E5C  EF32  F00F         	goto	u1891
  4886   001E60  EF34  F00F         	goto	u1890
  4887   001E64                     u1891:
  4888   001E64  EF2D  F00F         	goto	l598
  4889   001E68                     u1890:
  4890   001E68                     
  4891                           ;uart.c: 65:  TXREG = byte;
  4892   001E68  C035  FFAD         	movff	putch@byte,4013	;volatile
  4893   001E6C  0012               	return		;funcret
  4894   001E6E                     __end_of_putch:
  4895                           	callstack 0
  4896                           
  4897 ;; *************** function _init_uart *****************
  4898 ;; Defined at:
  4899 ;;		line 4 in file "uart.c"
  4900 ;; Parameters:    Size  Location     Type
  4901 ;;		None
  4902 ;; Auto vars:     Size  Location     Type
  4903 ;;		None
  4904 ;; Return value:  Size  Location     Type
  4905 ;;                  1    wreg      void 
  4906 ;; Registers used:
  4907 ;;		wreg, status,2
  4908 ;; Tracked objects:
  4909 ;;		On entry : 0/0
  4910 ;;		On exit  : 0/0
  4911 ;;		Unchanged: 0/0
  4912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4913 ;;      Params:         0       0       0       0       0       0       0
  4914 ;;      Locals:         0       0       0       0       0       0       0
  4915 ;;      Temps:          0       0       0       0       0       0       0
  4916 ;;      Totals:         0       0       0       0       0       0       0
  4917 ;;Total ram usage:        0 bytes
  4918 ;; Hardware stack levels used: 1
  4919 ;; Hardware stack levels required when called: 1
  4920 ;; This function calls:
  4921 ;;		Nothing
  4922 ;; This function is called by:
  4923 ;;		_download_log
  4924 ;; This function uses a non-reentrant model
  4925 ;;
  4926                           
  4927                           	psect	text20
  4928   001D52                     __ptext20:
  4929                           	callstack 0
  4930   001D52                     _init_uart:
  4931                           	callstack 28
  4932   001D52                     
  4933                           ;uart.c: 7:  TRISC7 = 1;
  4934   001D52  8E94               	bsf	3988,7,c	;volatile
  4935                           
  4936                           ;uart.c: 8:  TRISC6 = 0;
  4937   001D54  9C94               	bcf	3988,6,c	;volatile
  4938                           
  4939                           ;uart.c: 12:  TX9 = 0;
  4940   001D56  9CAC               	bcf	4012,6,c	;volatile
  4941                           
  4942                           ;uart.c: 14:  TXEN = 1;
  4943   001D58  8AAC               	bsf	4012,5,c	;volatile
  4944                           
  4945                           ;uart.c: 17:  SYNC = 0;
  4946   001D5A  98AC               	bcf	4012,4,c	;volatile
  4947                           
  4948                           ;uart.c: 19:  SENDB = 0;
  4949   001D5C  96AC               	bcf	4012,3,c	;volatile
  4950                           
  4951                           ;uart.c: 22:  BRGH = 1;
  4952   001D5E  84AC               	bsf	4012,2,c	;volatile
  4953                           
  4954                           ;uart.c: 26:  SPEN = 1;
  4955   001D60  8EAB               	bsf	4011,7,c	;volatile
  4956                           
  4957                           ;uart.c: 28:  RX9 = 0;
  4958   001D62  9CAB               	bcf	4011,6,c	;volatile
  4959                           
  4960                           ;uart.c: 30:  CREN = 1;
  4961   001D64  88AB               	bsf	4011,4,c	;volatile
  4962                           
  4963                           ;uart.c: 34:  ABDOVF = 0;
  4964   001D66  9EB8               	bcf	4024,7,c	;volatile
  4965                           
  4966                           ;uart.c: 36:  BRG16 = 0;
  4967   001D68  96B8               	bcf	4024,3,c	;volatile
  4968                           
  4969                           ;uart.c: 38:  WUE = 0;
  4970   001D6A  92B8               	bcf	4024,1,c	;volatile
  4971                           
  4972                           ;uart.c: 40:  ABDEN = 0;
  4973   001D6C  90B8               	bcf	4024,0,c	;volatile
  4974   001D6E                     
  4975                           ;uart.c: 44:  SPBRG = 129;
  4976   001D6E  0E81               	movlw	129
  4977   001D70  6EAF               	movwf	175,c	;volatile
  4978   001D72                     
  4979                           ;uart.c: 48:  TXIE = 1;
  4980   001D72  889D               	bsf	3997,4,c	;volatile
  4981   001D74                     
  4982                           ;uart.c: 50:  TXIF = 0;
  4983   001D74  989E               	bcf	3998,4,c	;volatile
  4984   001D76                     
  4985                           ;uart.c: 52:  RCIE = 1;
  4986   001D76  8A9D               	bsf	3997,5,c	;volatile
  4987   001D78                     
  4988                           ;uart.c: 54:  RCIF = 0;
  4989   001D78  9A9E               	bcf	3998,5,c	;volatile
  4990   001D7A  0012               	return		;funcret
  4991   001D7C                     __end_of_init_uart:
  4992                           	callstack 0
  4993                           
  4994 ;; *************** function _dashboard *****************
  4995 ;; Defined at:
  4996 ;;		line 16 in file "dashboard.c"
  4997 ;; Parameters:    Size  Location     Type
  4998 ;;  key             1    wreg     unsigned char 
  4999 ;; Auto vars:     Size  Location     Type
  5000 ;;  key             1   17[COMRAM] unsigned char 
  5001 ;; Return value:  Size  Location     Type
  5002 ;;                  1    wreg      void 
  5003 ;; Registers used:
  5004 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5005 ;; Tracked objects:
  5006 ;;		On entry : 0/0
  5007 ;;		On exit  : 0/0
  5008 ;;		Unchanged: 0/0
  5009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5010 ;;      Params:         0       0       0       0       0       0       0
  5011 ;;      Locals:         1       0       0       0       0       0       0
  5012 ;;      Temps:          0       0       0       0       0       0       0
  5013 ;;      Totals:         1       0       0       0       0       0       0
  5014 ;;Total ram usage:        1 bytes
  5015 ;; Hardware stack levels used: 1
  5016 ;; Hardware stack levels required when called: 6
  5017 ;; This function calls:
  5018 ;;		_clcd_print
  5019 ;;		_clcd_write
  5020 ;;		_display_event
  5021 ;;		_display_speed
  5022 ;;		_display_time
  5023 ;;		_store_event
  5024 ;; This function is called by:
  5025 ;;		_main
  5026 ;; This function uses a non-reentrant model
  5027 ;;
  5028                           
  5029                           	psect	text21
  5030   0017BA                     __ptext21:
  5031                           	callstack 0
  5032   0017BA                     _dashboard:
  5033                           	callstack 24
  5034                           
  5035                           ;incstack = 0
  5036                           ;dashboard@key stored from wreg
  5037   0017BA  6E46               	movwf	dashboard@key^0,c
  5038   0017BC                     
  5039                           ;dashboard.c: 16: void dashboard(char key);dashboard.c: 17: {;dashboard.c: 18:     clcd_
      +                          print("TIME",(0x80 + (2)));
  5040   0017BC  0ED1               	movlw	low STR_9
  5041   0017BE  6E37               	movwf	clcd_print@data^0,c
  5042   0017C0  0E2F               	movlw	high STR_9
  5043   0017C2  6E38               	movwf	(clcd_print@data+1)^0,c
  5044   0017C4  0E82               	movlw	130
  5045   0017C6  6E39               	movwf	clcd_print@addr^0,c
  5046   0017C8  EC0C  F00D         	call	_clcd_print	;wreg free
  5047                           
  5048                           ;dashboard.c: 19:     clcd_print("EV",(0x80 + (10)));
  5049   0017CC  0EF4               	movlw	low STR_10
  5050   0017CE  6E37               	movwf	clcd_print@data^0,c
  5051   0017D0  0E2F               	movlw	high STR_10
  5052   0017D2  6E38               	movwf	(clcd_print@data+1)^0,c
  5053   0017D4  0E8A               	movlw	138
  5054   0017D6  6E39               	movwf	clcd_print@addr^0,c
  5055   0017D8  EC0C  F00D         	call	_clcd_print	;wreg free
  5056                           
  5057                           ;dashboard.c: 20:     clcd_print("SP",(0x80 + (14)));
  5058   0017DC  0EEE               	movlw	low STR_11
  5059   0017DE  6E37               	movwf	clcd_print@data^0,c
  5060   0017E0  0E2F               	movlw	high STR_11
  5061   0017E2  6E38               	movwf	(clcd_print@data+1)^0,c
  5062   0017E4  0E8E               	movlw	142
  5063   0017E6  6E39               	movwf	clcd_print@addr^0,c
  5064   0017E8  EC0C  F00D         	call	_clcd_print	;wreg free
  5065   0017EC                     
  5066                           ;dashboard.c: 21:     display_time();
  5067   0017EC  EC21  F00C         	call	_display_time	;wreg free
  5068   0017F0                     
  5069                           ;dashboard.c: 22:     clcd_print(time,(0xC0 + (0)));
  5070   0017F0  0E2C               	movlw	low _time
  5071   0017F2  6E37               	movwf	clcd_print@data^0,c
  5072   0017F4  6A38               	clrf	(clcd_print@data+1)^0,c
  5073   0017F6  0EC0               	movlw	192
  5074   0017F8  6E39               	movwf	clcd_print@addr^0,c
  5075   0017FA  EC0C  F00D         	call	_clcd_print	;wreg free
  5076   0017FE                     
  5077                           ;dashboard.c: 23:     display_event(key);
  5078   0017FE  5046               	movf	dashboard@key^0,w,c
  5079   001800  EC08  F00B         	call	_display_event
  5080   001804                     
  5081                           ;dashboard.c: 24:     display_speed();
  5082   001804  ECD6  F00C         	call	_display_speed	;wreg free
  5083   001808                     
  5084                           ;dashboard.c: 25:     if(on==0)
  5085   001808  5029               	movf	_on^0,w,c
  5086   00180A  A4D8               	btfss	status,2,c
  5087   00180C  EF0A  F00C         	goto	u2021
  5088   001810  EF0C  F00C         	goto	u2020
  5089   001814                     u2021:
  5090   001814  EF10  F00C         	goto	l3004
  5091   001818                     u2020:
  5092   001818                     
  5093                           ;dashboard.c: 26:     {;dashboard.c: 27:         store_event();
  5094   001818  EC85  F00A         	call	_store_event	;wreg free
  5095   00181C                     
  5096                           ;dashboard.c: 28:         on=1;
  5097   00181C  0E01               	movlw	1
  5098   00181E  6E29               	movwf	_on^0,c
  5099   001820                     l3004:
  5100                           
  5101                           ;dashboard.c: 30:     if(key==5)
  5102   001820  0E05               	movlw	5
  5103   001822  1846               	xorwf	dashboard@key^0,w,c
  5104   001824  A4D8               	btfss	status,2,c
  5105   001826  EF17  F00C         	goto	u2031
  5106   00182A  EF19  F00C         	goto	u2030
  5107   00182E                     u2031:
  5108   00182E  EF20  F00C         	goto	l101
  5109   001832                     u2030:
  5110   001832                     
  5111                           ;dashboard.c: 31:     {;dashboard.c: 33:         main_f=1;
  5112   001832  0E01               	movlw	1
  5113   001834  6E2B               	movwf	_main_f^0,c
  5114   001836                     
  5115                           ;dashboard.c: 34:         clcd_write(0x01, 0);
  5116   001836  0E00               	movlw	0
  5117   001838  6E35               	movwf	clcd_write@control_bit^0,c
  5118   00183A  0E01               	movlw	1
  5119   00183C  EC5C  F00E         	call	_clcd_write
  5120   001840                     l101:
  5121   001840  0012               	return		;funcret
  5122   001842                     __end_of_dashboard:
  5123                           	callstack 0
  5124                           
  5125 ;; *************** function _display_time *****************
  5126 ;; Defined at:
  5127 ;;		line 83 in file "dashboard.c"
  5128 ;; Parameters:    Size  Location     Type
  5129 ;;		None
  5130 ;; Auto vars:     Size  Location     Type
  5131 ;;		None
  5132 ;; Return value:  Size  Location     Type
  5133 ;;                  1    wreg      void 
  5134 ;; Registers used:
  5135 ;;		wreg, status,2, status,0, cstack
  5136 ;; Tracked objects:
  5137 ;;		On entry : 0/0
  5138 ;;		On exit  : 0/0
  5139 ;;		Unchanged: 0/0
  5140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5141 ;;      Params:         0       0       0       0       0       0       0
  5142 ;;      Locals:         0       0       0       0       0       0       0
  5143 ;;      Temps:          0       0       0       0       0       0       0
  5144 ;;      Totals:         0       0       0       0       0       0       0
  5145 ;;Total ram usage:        0 bytes
  5146 ;; Hardware stack levels used: 1
  5147 ;; Hardware stack levels required when called: 5
  5148 ;; This function calls:
  5149 ;;		_read_ds1307
  5150 ;; This function is called by:
  5151 ;;		_dashboard
  5152 ;; This function uses a non-reentrant model
  5153 ;;
  5154                           
  5155                           	psect	text22
  5156   001842                     __ptext22:
  5157                           	callstack 0
  5158   001842                     _display_time:
  5159                           	callstack 24
  5160   001842                     
  5161                           ;dashboard.c: 85:    clock_reg[0] = read_ds1307(0x02);
  5162   001842  0E02               	movlw	2
  5163   001844  ECBE  F00E         	call	_read_ds1307
  5164   001848  6E01               	movwf	_clock_reg^0,c
  5165                           
  5166                           ;dashboard.c: 86:  clock_reg[1] = read_ds1307(0x01);
  5167   00184A  0E01               	movlw	1
  5168   00184C  ECBE  F00E         	call	_read_ds1307
  5169   001850  6E02               	movwf	(_clock_reg+1)^0,c
  5170                           
  5171                           ;dashboard.c: 87:  clock_reg[2] = read_ds1307(0x00);
  5172   001852  0E00               	movlw	0
  5173   001854  ECBE  F00E         	call	_read_ds1307
  5174   001858  6E03               	movwf	(_clock_reg+2)^0,c
  5175   00185A                     
  5176                           ;dashboard.c: 89:  if (clock_reg[0] & 0x40)
  5177   00185A  AC01               	btfss	_clock_reg^0,6,c
  5178   00185C  EF32  F00C         	goto	u1901
  5179   001860  EF34  F00C         	goto	u1900
  5180   001864                     u1901:
  5181   001864  EF3F  F00C         	goto	l2866
  5182   001868                     u1900:
  5183   001868                     
  5184                           ;dashboard.c: 90:  {;dashboard.c: 91:   time[0] = '0' + ((clock_reg[0] >> 4) & 0x01);
  5185   001868  3801               	swapf	_clock_reg^0,w,c
  5186   00186A  0B0F               	andlw	15
  5187   00186C  0B01               	andlw	1
  5188   00186E  0F30               	addlw	48
  5189   001870  6E2C               	movwf	_time^0,c
  5190                           
  5191                           ;dashboard.c: 92:   time[1] = '0' + (clock_reg[0] & 0x0F);
  5192   001872  5001               	movf	_clock_reg^0,w,c
  5193   001874  0B0F               	andlw	15
  5194   001876  0F30               	addlw	48
  5195   001878  6E2D               	movwf	(_time+1)^0,c
  5196                           
  5197                           ;dashboard.c: 93:  }
  5198   00187A  EF48  F00C         	goto	l2868
  5199   00187E                     l2866:
  5200                           
  5201                           ;dashboard.c: 95:  {;dashboard.c: 96:   time[0] = '0' + ((clock_reg[0] >> 4) & 0x03);
  5202   00187E  3801               	swapf	_clock_reg^0,w,c
  5203   001880  0B0F               	andlw	15
  5204   001882  0B03               	andlw	3
  5205   001884  0F30               	addlw	48
  5206   001886  6E2C               	movwf	_time^0,c
  5207                           
  5208                           ;dashboard.c: 97:   time[1] = '0' + (clock_reg[0] & 0x0F);
  5209   001888  5001               	movf	_clock_reg^0,w,c
  5210   00188A  0B0F               	andlw	15
  5211   00188C  0F30               	addlw	48
  5212   00188E  6E2D               	movwf	(_time+1)^0,c
  5213   001890                     l2868:
  5214                           
  5215                           ;dashboard.c: 99:  time[2] = ':';
  5216   001890  0E3A               	movlw	58
  5217   001892  6E2E               	movwf	(_time+2)^0,c
  5218   001894                     
  5219                           ;dashboard.c: 100:  time[3] = '0' + ((clock_reg[1] >> 4) & 0x0F);
  5220   001894  3802               	swapf	(_clock_reg+1)^0,w,c
  5221   001896  0B0F               	andlw	15
  5222   001898  0B0F               	andlw	15
  5223   00189A  0F30               	addlw	48
  5224   00189C  6E2F               	movwf	(_time+3)^0,c
  5225   00189E                     
  5226                           ;dashboard.c: 101:  time[4] = '0' + (clock_reg[1] & 0x0F);
  5227   00189E  5002               	movf	(_clock_reg+1)^0,w,c
  5228   0018A0  0B0F               	andlw	15
  5229   0018A2  0F30               	addlw	48
  5230   0018A4  6E30               	movwf	(_time+4)^0,c
  5231   0018A6                     
  5232                           ;dashboard.c: 102:  time[5] = ':';
  5233   0018A6  0E3A               	movlw	58
  5234   0018A8  6E31               	movwf	(_time+5)^0,c
  5235                           
  5236                           ;dashboard.c: 103:  time[6] = '0' + ((clock_reg[2] >> 4) & 0x0F);
  5237   0018AA  3803               	swapf	(_clock_reg+2)^0,w,c
  5238   0018AC  0B0F               	andlw	15
  5239   0018AE  0B0F               	andlw	15
  5240   0018B0  0F30               	addlw	48
  5241   0018B2  6E32               	movwf	(_time+6)^0,c
  5242                           
  5243                           ;dashboard.c: 104:  time[7] = '0' + (clock_reg[2] & 0x0F);
  5244   0018B4  5003               	movf	(_clock_reg+2)^0,w,c
  5245   0018B6  0B0F               	andlw	15
  5246   0018B8  0F30               	addlw	48
  5247   0018BA  6E33               	movwf	(_time+7)^0,c
  5248   0018BC                     
  5249                           ;dashboard.c: 105:  time[8] = '\0';
  5250   0018BC  0E00               	movlw	0
  5251   0018BE  6E34               	movwf	(_time+8)^0,c
  5252   0018C0  0012               	return		;funcret
  5253   0018C2                     __end_of_display_time:
  5254                           	callstack 0
  5255                           
  5256 ;; *************** function _read_ds1307 *****************
  5257 ;; Defined at:
  5258 ;;		line 62 in file "ds1307.c"
  5259 ;; Parameters:    Size  Location     Type
  5260 ;;  address         1    wreg     unsigned char 
  5261 ;; Auto vars:     Size  Location     Type
  5262 ;;  address         1    1[COMRAM] unsigned char 
  5263 ;;  data            1    2[COMRAM] unsigned char 
  5264 ;; Return value:  Size  Location     Type
  5265 ;;                  1    wreg      unsigned char 
  5266 ;; Registers used:
  5267 ;;		wreg, status,2, cstack
  5268 ;; Tracked objects:
  5269 ;;		On entry : 0/0
  5270 ;;		On exit  : 0/0
  5271 ;;		Unchanged: 0/0
  5272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5273 ;;      Params:         0       0       0       0       0       0       0
  5274 ;;      Locals:         2       0       0       0       0       0       0
  5275 ;;      Temps:          0       0       0       0       0       0       0
  5276 ;;      Totals:         2       0       0       0       0       0       0
  5277 ;;Total ram usage:        2 bytes
  5278 ;; Hardware stack levels used: 1
  5279 ;; Hardware stack levels required when called: 4
  5280 ;; This function calls:
  5281 ;;		_i2c_read
  5282 ;;		_i2c_rep_start
  5283 ;;		_i2c_start
  5284 ;;		_i2c_stop
  5285 ;;		_i2c_write
  5286 ;; This function is called by:
  5287 ;;		_display_time
  5288 ;;		_init_ds1307
  5289 ;;		_save_exit
  5290 ;; This function uses a non-reentrant model
  5291 ;;
  5292                           
  5293                           	psect	text23
  5294   001D7C                     __ptext23:
  5295                           	callstack 0
  5296   001D7C                     _read_ds1307:
  5297                           	callstack 24
  5298                           
  5299                           ;incstack = 0
  5300                           ;read_ds1307@address stored from wreg
  5301   001D7C  6E36               	movwf	read_ds1307@address^0,c
  5302   001D7E                     
  5303                           ;ds1307.c: 62: unsigned char read_ds1307(unsigned char address);ds1307.c: 63: {;ds1307.c
      +                          : 64:  unsigned char data;;ds1307.c: 66:  i2c_start();
  5304   001D7E  EC61  F00F         	call	_i2c_start	;wreg free
  5305   001D82                     
  5306                           ;ds1307.c: 67:  i2c_write(0xD0);
  5307   001D82  0ED0               	movlw	208
  5308   001D84  EC4F  F00F         	call	_i2c_write
  5309   001D88                     
  5310                           ;ds1307.c: 68:  i2c_write(address);
  5311   001D88  5036               	movf	read_ds1307@address^0,w,c
  5312   001D8A  EC4F  F00F         	call	_i2c_write
  5313   001D8E                     
  5314                           ;ds1307.c: 69:  i2c_rep_start();
  5315   001D8E  EC55  F00F         	call	_i2c_rep_start	;wreg free
  5316   001D92                     
  5317                           ;ds1307.c: 70:  i2c_write(0xD1);
  5318   001D92  0ED1               	movlw	209
  5319   001D94  EC4F  F00F         	call	_i2c_write
  5320                           
  5321                           ;ds1307.c: 71:  data = i2c_read();
  5322   001D98  EC49  F00F         	call	_i2c_read	;wreg free
  5323   001D9C  6E37               	movwf	read_ds1307@data^0,c
  5324   001D9E                     
  5325                           ;ds1307.c: 72:  i2c_stop();
  5326   001D9E  EC5D  F00F         	call	_i2c_stop	;wreg free
  5327                           
  5328                           ;ds1307.c: 74:  return data;
  5329   001DA2  5037               	movf	read_ds1307@data^0,w,c
  5330   001DA4  0012               	return		;funcret
  5331   001DA6                     __end_of_read_ds1307:
  5332                           	callstack 0
  5333                           
  5334 ;; *************** function _i2c_rep_start *****************
  5335 ;; Defined at:
  5336 ;;		line 57 in file "i2c.c"
  5337 ;; Parameters:    Size  Location     Type
  5338 ;;		None
  5339 ;; Auto vars:     Size  Location     Type
  5340 ;;		None
  5341 ;; Return value:  Size  Location     Type
  5342 ;;                  1    wreg      void 
  5343 ;; Registers used:
  5344 ;;		cstack
  5345 ;; Tracked objects:
  5346 ;;		On entry : 0/0
  5347 ;;		On exit  : 0/0
  5348 ;;		Unchanged: 0/0
  5349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5350 ;;      Params:         0       0       0       0       0       0       0
  5351 ;;      Locals:         0       0       0       0       0       0       0
  5352 ;;      Temps:          0       0       0       0       0       0       0
  5353 ;;      Totals:         0       0       0       0       0       0       0
  5354 ;;Total ram usage:        0 bytes
  5355 ;; Hardware stack levels used: 1
  5356 ;; Hardware stack levels required when called: 2
  5357 ;; This function calls:
  5358 ;;		_i2c_idle
  5359 ;; This function is called by:
  5360 ;;		_read_ds1307
  5361 ;;		_read_external_eeprom
  5362 ;; This function uses a non-reentrant model
  5363 ;;
  5364                           
  5365                           	psect	text24
  5366   001EAA                     __ptext24:
  5367                           	callstack 0
  5368   001EAA                     _i2c_rep_start:
  5369                           	callstack 26
  5370   001EAA                     
  5371                           ;i2c.c: 59:  RSEN = 1;
  5372   001EAA  82C5               	bsf	4037,1,c	;volatile
  5373   001EAC                     
  5374                           ;i2c.c: 60:  i2c_idle();
  5375   001EAC  EC40  F00F         	call	_i2c_idle	;wreg free
  5376   001EB0  0012               	return		;funcret
  5377   001EB2                     __end_of_i2c_rep_start:
  5378                           	callstack 0
  5379                           
  5380 ;; *************** function _i2c_read *****************
  5381 ;; Defined at:
  5382 ;;		line 81 in file "i2c.c"
  5383 ;; Parameters:    Size  Location     Type
  5384 ;;		None
  5385 ;; Auto vars:     Size  Location     Type
  5386 ;;		None
  5387 ;; Return value:  Size  Location     Type
  5388 ;;                  1    wreg      unsigned char 
  5389 ;; Registers used:
  5390 ;;		wreg, status,2, cstack
  5391 ;; Tracked objects:
  5392 ;;		On entry : 0/0
  5393 ;;		On exit  : 0/0
  5394 ;;		Unchanged: 0/0
  5395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5396 ;;      Params:         0       0       0       0       0       0       0
  5397 ;;      Locals:         0       0       0       0       0       0       0
  5398 ;;      Temps:          0       0       0       0       0       0       0
  5399 ;;      Totals:         0       0       0       0       0       0       0
  5400 ;;Total ram usage:        0 bytes
  5401 ;; Hardware stack levels used: 1
  5402 ;; Hardware stack levels required when called: 3
  5403 ;; This function calls:
  5404 ;;		_i2c_no_ack
  5405 ;;		_i2c_rx_mode
  5406 ;; This function is called by:
  5407 ;;		_read_ds1307
  5408 ;;		_read_external_eeprom
  5409 ;; This function uses a non-reentrant model
  5410 ;;
  5411                           
  5412                           	psect	text25
  5413   001E92                     __ptext25:
  5414                           	callstack 0
  5415   001E92                     _i2c_read:
  5416                           	callstack 25
  5417   001E92                     
  5418                           ;i2c.c: 83:  i2c_rx_mode();
  5419   001E92  EC59  F00F         	call	_i2c_rx_mode	;wreg free
  5420                           
  5421                           ;i2c.c: 84:  i2c_no_ack();
  5422   001E96  EC65  F00F         	call	_i2c_no_ack	;wreg free
  5423   001E9A                     
  5424                           ;i2c.c: 86:  return SSPBUF;
  5425   001E9A  50C9               	movf	201,w,c	;volatile
  5426   001E9C  0012               	return		;funcret
  5427   001E9E                     __end_of_i2c_read:
  5428                           	callstack 0
  5429                           
  5430 ;; *************** function _i2c_rx_mode *****************
  5431 ;; Defined at:
  5432 ;;		line 69 in file "i2c.c"
  5433 ;; Parameters:    Size  Location     Type
  5434 ;;		None
  5435 ;; Auto vars:     Size  Location     Type
  5436 ;;		None
  5437 ;; Return value:  Size  Location     Type
  5438 ;;                  1    wreg      void 
  5439 ;; Registers used:
  5440 ;;		cstack
  5441 ;; Tracked objects:
  5442 ;;		On entry : 0/0
  5443 ;;		On exit  : 0/0
  5444 ;;		Unchanged: 0/0
  5445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5446 ;;      Params:         0       0       0       0       0       0       0
  5447 ;;      Locals:         0       0       0       0       0       0       0
  5448 ;;      Temps:          0       0       0       0       0       0       0
  5449 ;;      Totals:         0       0       0       0       0       0       0
  5450 ;;Total ram usage:        0 bytes
  5451 ;; Hardware stack levels used: 1
  5452 ;; Hardware stack levels required when called: 2
  5453 ;; This function calls:
  5454 ;;		_i2c_idle
  5455 ;; This function is called by:
  5456 ;;		_i2c_read
  5457 ;; This function uses a non-reentrant model
  5458 ;;
  5459                           
  5460                           	psect	text26
  5461   001EB2                     __ptext26:
  5462                           	callstack 0
  5463   001EB2                     _i2c_rx_mode:
  5464                           	callstack 25
  5465   001EB2                     
  5466                           ;i2c.c: 71:  RCEN = 1;
  5467   001EB2  86C5               	bsf	4037,3,c	;volatile
  5468   001EB4                     
  5469                           ;i2c.c: 72:  i2c_idle();
  5470   001EB4  EC40  F00F         	call	_i2c_idle	;wreg free
  5471   001EB8  0012               	return		;funcret
  5472   001EBA                     __end_of_i2c_rx_mode:
  5473                           	callstack 0
  5474                           
  5475 ;; *************** function _i2c_no_ack *****************
  5476 ;; Defined at:
  5477 ;;		line 75 in file "i2c.c"
  5478 ;; Parameters:    Size  Location     Type
  5479 ;;		None
  5480 ;; Auto vars:     Size  Location     Type
  5481 ;;		None
  5482 ;; Return value:  Size  Location     Type
  5483 ;;                  1    wreg      void 
  5484 ;; Registers used:
  5485 ;;		None
  5486 ;; Tracked objects:
  5487 ;;		On entry : 0/0
  5488 ;;		On exit  : 0/0
  5489 ;;		Unchanged: 0/0
  5490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5491 ;;      Params:         0       0       0       0       0       0       0
  5492 ;;      Locals:         0       0       0       0       0       0       0
  5493 ;;      Temps:          0       0       0       0       0       0       0
  5494 ;;      Totals:         0       0       0       0       0       0       0
  5495 ;;Total ram usage:        0 bytes
  5496 ;; Hardware stack levels used: 1
  5497 ;; Hardware stack levels required when called: 1
  5498 ;; This function calls:
  5499 ;;		Nothing
  5500 ;; This function is called by:
  5501 ;;		_i2c_read
  5502 ;; This function uses a non-reentrant model
  5503 ;;
  5504                           
  5505                           	psect	text27
  5506   001ECA                     __ptext27:
  5507                           	callstack 0
  5508   001ECA                     _i2c_no_ack:
  5509                           	callstack 26
  5510   001ECA                     
  5511                           ;i2c.c: 77:  ACKDT = 1;
  5512   001ECA  8AC5               	bsf	4037,5,c	;volatile
  5513                           
  5514                           ;i2c.c: 78:  ACKEN = 1;
  5515   001ECC  88C5               	bsf	4037,4,c	;volatile
  5516   001ECE  0012               	return		;funcret
  5517   001ED0                     __end_of_i2c_no_ack:
  5518                           	callstack 0
  5519                           
  5520 ;; *************** function _display_speed *****************
  5521 ;; Defined at:
  5522 ;;		line 38 in file "dashboard.c"
  5523 ;; Parameters:    Size  Location     Type
  5524 ;;		None
  5525 ;; Auto vars:     Size  Location     Type
  5526 ;;  adc_reg_val     2   14[COMRAM] unsigned int 
  5527 ;; Return value:  Size  Location     Type
  5528 ;;                  1    wreg      void 
  5529 ;; Registers used:
  5530 ;;		wreg, status,2, status,0, cstack
  5531 ;; Tracked objects:
  5532 ;;		On entry : 0/0
  5533 ;;		On exit  : 0/0
  5534 ;;		Unchanged: 0/0
  5535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5536 ;;      Params:         0       0       0       0       0       0       0
  5537 ;;      Locals:         2       0       0       0       0       0       0
  5538 ;;      Temps:          0       0       0       0       0       0       0
  5539 ;;      Totals:         2       0       0       0       0       0       0
  5540 ;;Total ram usage:        2 bytes
  5541 ;; Hardware stack levels used: 1
  5542 ;; Hardware stack levels required when called: 3
  5543 ;; This function calls:
  5544 ;;		___lwdiv
  5545 ;;		___lwmod
  5546 ;;		_clcd_putch
  5547 ;;		_read_adc
  5548 ;; This function is called by:
  5549 ;;		_dashboard
  5550 ;; This function uses a non-reentrant model
  5551 ;;
  5552                           
  5553                           	psect	text28
  5554   0019AC                     __ptext28:
  5555                           	callstack 0
  5556   0019AC                     _display_speed:
  5557                           	callstack 26
  5558   0019AC                     
  5559                           ;dashboard.c: 40:     unsigned int adc_reg_val;;dashboard.c: 41:     adc_reg_val=read_ad
      +                          c(0x04);
  5560   0019AC  0E04               	movlw	4
  5561   0019AE  ECF8  F00D         	call	_read_adc
  5562   0019B2  C035  F043         	movff	?_read_adc,display_speed@adc_reg_val
  5563   0019B6  C036  F044         	movff	?_read_adc+1,display_speed@adc_reg_val+1
  5564                           
  5565                           ;dashboard.c: 42:     speed = adc_reg_val/10;
  5566   0019BA  C043  F035         	movff	display_speed@adc_reg_val,___lwdiv@dividend
  5567   0019BE  C044  F036         	movff	display_speed@adc_reg_val+1,___lwdiv@dividend+1
  5568   0019C2  0E00               	movlw	0
  5569   0019C4  6E38               	movwf	(___lwdiv@divisor+1)^0,c
  5570   0019C6  0E0A               	movlw	10
  5571   0019C8  6E37               	movwf	___lwdiv@divisor^0,c
  5572   0019CA  EC9C  F00C         	call	___lwdiv	;wreg free
  5573   0019CE  C035  F01C         	movff	?___lwdiv,_speed
  5574   0019D2  C036  F01D         	movff	?___lwdiv+1,_speed+1
  5575                           
  5576                           ;dashboard.c: 43:     clcd_putch((speed%10)+48,(0xC0 + (15)));
  5577   0019D6  0ECF               	movlw	207
  5578   0019D8  6E41               	movwf	clcd_putch@addr^0,c
  5579   0019DA  C01C  F03C         	movff	_speed,___lwmod@dividend
  5580   0019DE  C01D  F03D         	movff	_speed+1,___lwmod@dividend+1
  5581   0019E2  0E00               	movlw	0
  5582   0019E4  6E3F               	movwf	(___lwmod@divisor+1)^0,c
  5583   0019E6  0E0A               	movlw	10
  5584   0019E8  6E3E               	movwf	___lwmod@divisor^0,c
  5585   0019EA  EC42  F00D         	call	___lwmod	;wreg free
  5586   0019EE  503C               	movf	?___lwmod^0,w,c
  5587   0019F0  0F30               	addlw	48
  5588   0019F2  ECFF  F00E         	call	_clcd_putch
  5589                           
  5590                           ;dashboard.c: 44:     clcd_putch((speed/10)+48,(0xC0 + (14)));
  5591   0019F6  0ECE               	movlw	206
  5592   0019F8  6E41               	movwf	clcd_putch@addr^0,c
  5593   0019FA  C01C  F035         	movff	_speed,___lwdiv@dividend
  5594   0019FE  C01D  F036         	movff	_speed+1,___lwdiv@dividend+1
  5595   001A02  0E00               	movlw	0
  5596   001A04  6E38               	movwf	(___lwdiv@divisor+1)^0,c
  5597   001A06  0E0A               	movlw	10
  5598   001A08  6E37               	movwf	___lwdiv@divisor^0,c
  5599   001A0A  EC9C  F00C         	call	___lwdiv	;wreg free
  5600   001A0E  5035               	movf	?___lwdiv^0,w,c
  5601   001A10  0F30               	addlw	48
  5602   001A12  ECFF  F00E         	call	_clcd_putch
  5603   001A16  0012               	return		;funcret
  5604   001A18                     __end_of_display_speed:
  5605                           	callstack 0
  5606                           
  5607 ;; *************** function _read_adc *****************
  5608 ;; Defined at:
  5609 ;;		line 51 in file "adc.c"
  5610 ;; Parameters:    Size  Location     Type
  5611 ;;  channel         1    wreg     unsigned char 
  5612 ;; Auto vars:     Size  Location     Type
  5613 ;;  channel         1    6[COMRAM] unsigned char 
  5614 ;;  reg_val         2    4[COMRAM] unsigned short 
  5615 ;; Return value:  Size  Location     Type
  5616 ;;                  2    0[COMRAM] unsigned short 
  5617 ;; Registers used:
  5618 ;;		wreg, status,2, status,0
  5619 ;; Tracked objects:
  5620 ;;		On entry : 0/0
  5621 ;;		On exit  : 0/0
  5622 ;;		Unchanged: 0/0
  5623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5624 ;;      Params:         2       0       0       0       0       0       0
  5625 ;;      Locals:         3       0       0       0       0       0       0
  5626 ;;      Temps:          2       0       0       0       0       0       0
  5627 ;;      Totals:         7       0       0       0       0       0       0
  5628 ;;Total ram usage:        7 bytes
  5629 ;; Hardware stack levels used: 1
  5630 ;; Hardware stack levels required when called: 1
  5631 ;; This function calls:
  5632 ;;		Nothing
  5633 ;; This function is called by:
  5634 ;;		_display_speed
  5635 ;; This function uses a non-reentrant model
  5636 ;;
  5637                           
  5638                           	psect	text29
  5639   001BF0                     __ptext29:
  5640                           	callstack 0
  5641   001BF0                     _read_adc:
  5642                           	callstack 27
  5643                           
  5644                           ;incstack = 0
  5645                           ;read_adc@channel stored from wreg
  5646   001BF0  6E3B               	movwf	read_adc@channel^0,c
  5647   001BF2                     
  5648                           ;adc.c: 51: unsigned short read_adc(unsigned char channel);adc.c: 52: {;adc.c: 53:  unsi
      +                          gned short reg_val;;adc.c: 56:  ADCON0 = (ADCON0 & 0xC3) | (channel << 2);
  5649   001BF2  C03B  F037         	movff	read_adc@channel,??_read_adc
  5650   001BF6  90D8               	bcf	status,0,c
  5651   001BF8  3637               	rlcf	??_read_adc^0,f,c
  5652   001BFA  90D8               	bcf	status,0,c
  5653   001BFC  3637               	rlcf	??_read_adc^0,f,c
  5654   001BFE  50C2               	movf	194,w,c	;volatile
  5655   001C00  0BC3               	andlw	195
  5656   001C02  1037               	iorwf	??_read_adc^0,w,c
  5657   001C04  6EC2               	movwf	194,c	;volatile
  5658   001C06                     
  5659                           ;adc.c: 59:  GO = 1;
  5660   001C06  82C2               	bsf	4034,1,c	;volatile
  5661   001C08                     l198:
  5662   001C08  B2C2               	btfsc	4034,1,c	;volatile
  5663   001C0A  EF09  F00E         	goto	u1881
  5664   001C0E  EF0B  F00E         	goto	u1880
  5665   001C12                     u1881:
  5666   001C12  EF04  F00E         	goto	l198
  5667   001C16                     u1880:
  5668   001C16                     
  5669                           ;adc.c: 61:  reg_val = (ADRESH << 8) | ADRESL;
  5670   001C16  50C3               	movf	195,w,c	;volatile
  5671   001C18  CFC4 F037          	movff	4036,??_read_adc	;volatile
  5672   001C1C  6A38               	clrf	(??_read_adc+1)^0,c
  5673   001C1E  C037  F038         	movff	??_read_adc,??_read_adc+1
  5674   001C22  6A37               	clrf	??_read_adc^0,c
  5675   001C24  1037               	iorwf	??_read_adc^0,w,c
  5676   001C26  6E39               	movwf	read_adc@reg_val^0,c
  5677   001C28  5038               	movf	(??_read_adc+1)^0,w,c
  5678   001C2A  6E3A               	movwf	(read_adc@reg_val+1)^0,c
  5679   001C2C                     
  5680                           ;adc.c: 63:  return reg_val;
  5681   001C2C  C039  F035         	movff	read_adc@reg_val,?_read_adc
  5682   001C30  C03A  F036         	movff	read_adc@reg_val+1,?_read_adc+1
  5683   001C34  0012               	return		;funcret
  5684   001C36                     __end_of_read_adc:
  5685                           	callstack 0
  5686                           
  5687 ;; *************** function _clcd_putch *****************
  5688 ;; Defined at:
  5689 ;;		line 75 in file "clcd.c"
  5690 ;; Parameters:    Size  Location     Type
  5691 ;;  data            1    wreg     const unsigned char 
  5692 ;;  addr            1   12[COMRAM] unsigned char 
  5693 ;; Auto vars:     Size  Location     Type
  5694 ;;  data            1   13[COMRAM] const unsigned char 
  5695 ;; Return value:  Size  Location     Type
  5696 ;;                  1    wreg      void 
  5697 ;; Registers used:
  5698 ;;		wreg, status,2, cstack
  5699 ;; Tracked objects:
  5700 ;;		On entry : 0/0
  5701 ;;		On exit  : 0/0
  5702 ;;		Unchanged: 0/0
  5703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5704 ;;      Params:         1       0       0       0       0       0       0
  5705 ;;      Locals:         1       0       0       0       0       0       0
  5706 ;;      Temps:          0       0       0       0       0       0       0
  5707 ;;      Totals:         2       0       0       0       0       0       0
  5708 ;;Total ram usage:        2 bytes
  5709 ;; Hardware stack levels used: 1
  5710 ;; Hardware stack levels required when called: 2
  5711 ;; This function calls:
  5712 ;;		_clcd_write
  5713 ;; This function is called by:
  5714 ;;		_display_speed
  5715 ;;		_password
  5716 ;;		_menu
  5717 ;;		_view_log
  5718 ;; This function uses a non-reentrant model
  5719 ;;
  5720                           
  5721                           	psect	text30
  5722   001DFE                     __ptext30:
  5723                           	callstack 0
  5724   001DFE                     _clcd_putch:
  5725                           	callstack 27
  5726                           
  5727                           ;incstack = 0
  5728                           ;clcd_putch@data stored from wreg
  5729   001DFE  6E42               	movwf	clcd_putch@data^0,c
  5730   001E00                     
  5731                           ;clcd.c: 75: void clcd_putch(const unsigned char data, unsigned char addr);clcd.c: 76: {
      +                          ;clcd.c: 77:  clcd_write(addr, 0);
  5732   001E00  0E00               	movlw	0
  5733   001E02  6E35               	movwf	clcd_write@control_bit^0,c
  5734   001E04  5041               	movf	clcd_putch@addr^0,w,c
  5735   001E06  EC5C  F00E         	call	_clcd_write
  5736                           
  5737                           ;clcd.c: 78:  clcd_write(data, 1);
  5738   001E0A  0E01               	movlw	1
  5739   001E0C  6E35               	movwf	clcd_write@control_bit^0,c
  5740   001E0E  5042               	movf	clcd_putch@data^0,w,c
  5741   001E10  EC5C  F00E         	call	_clcd_write
  5742   001E14  0012               	return		;funcret
  5743   001E16                     __end_of_clcd_putch:
  5744                           	callstack 0
  5745                           
  5746 ;; *************** function _display_event *****************
  5747 ;; Defined at:
  5748 ;;		line 49 in file "dashboard.c"
  5749 ;; Parameters:    Size  Location     Type
  5750 ;;  key             1    wreg     unsigned char 
  5751 ;; Auto vars:     Size  Location     Type
  5752 ;;  key             1   16[COMRAM] unsigned char 
  5753 ;; Return value:  Size  Location     Type
  5754 ;;                  1    wreg      void 
  5755 ;; Registers used:
  5756 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5757 ;; Tracked objects:
  5758 ;;		On entry : 0/0
  5759 ;;		On exit  : 0/0
  5760 ;;		Unchanged: 0/0
  5761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5762 ;;      Params:         0       0       0       0       0       0       0
  5763 ;;      Locals:         1       0       0       0       0       0       0
  5764 ;;      Temps:          0       0       0       0       0       0       0
  5765 ;;      Totals:         1       0       0       0       0       0       0
  5766 ;;Total ram usage:        1 bytes
  5767 ;; Hardware stack levels used: 1
  5768 ;; Hardware stack levels required when called: 5
  5769 ;; This function calls:
  5770 ;;		_clcd_print
  5771 ;;		_store_event
  5772 ;; This function is called by:
  5773 ;;		_dashboard
  5774 ;; This function uses a non-reentrant model
  5775 ;;
  5776                           
  5777                           	psect	text31
  5778   001610                     __ptext31:
  5779                           	callstack 0
  5780   001610                     _display_event:
  5781                           	callstack 24
  5782                           
  5783                           ;incstack = 0
  5784                           ;display_event@key stored from wreg
  5785   001610  6E45               	movwf	display_event@key^0,c
  5786   001612                     
  5787                           ;dashboard.c: 49: void display_event(char key);dashboard.c: 50: {;dashboard.c: 51:     i
      +                          f(key == 2 && flag1 == 0)
  5788   001612  0E02               	movlw	2
  5789   001614  1845               	xorwf	display_event@key^0,w,c
  5790   001616  A4D8               	btfss	status,2,c
  5791   001618  EF10  F00B         	goto	u1911
  5792   00161C  EF12  F00B         	goto	u1910
  5793   001620                     u1911:
  5794   001620  EF2C  F00B         	goto	l2888
  5795   001624                     u1910:
  5796   001624  5018               	movf	_flag1^0,w,c
  5797   001626  1019               	iorwf	(_flag1+1)^0,w,c
  5798   001628  A4D8               	btfss	status,2,c
  5799   00162A  EF19  F00B         	goto	u1921
  5800   00162E  EF1B  F00B         	goto	u1920
  5801   001632                     u1921:
  5802   001632  EF2C  F00B         	goto	l2888
  5803   001636                     u1920:
  5804   001636                     
  5805                           ;dashboard.c: 52:     {;dashboard.c: 53:         if(i<6)
  5806   001636  501B               	movf	(_i+1)^0,w,c
  5807   001638  E107               	bnz	u1931
  5808   00163A  0E06               	movlw	6
  5809   00163C  5C1A               	subwf	_i^0,w,c
  5810   00163E  B0D8               	btfsc	status,0,c
  5811   001640  EF24  F00B         	goto	u1931
  5812   001644  EF26  F00B         	goto	u1930
  5813   001648                     u1931:
  5814   001648  EF7A  F00B         	goto	l2912
  5815   00164C                     u1930:
  5816   00164C                     
  5817                           ;dashboard.c: 54:         {;dashboard.c: 55:             i++;
  5818   00164C  4A1A               	infsnz	_i^0,f,c
  5819   00164E  2A1B               	incf	(_i+1)^0,f,c
  5820   001650                     l2886:
  5821                           
  5822                           ;dashboard.c: 56:             store_event();
  5823   001650  EC85  F00A         	call	_store_event	;wreg free
  5824   001654  EF7A  F00B         	goto	l2912
  5825   001658                     l2888:
  5826   001658  0E03               	movlw	3
  5827   00165A  1845               	xorwf	display_event@key^0,w,c
  5828   00165C  A4D8               	btfss	status,2,c
  5829   00165E  EF33  F00B         	goto	u1941
  5830   001662  EF35  F00B         	goto	u1940
  5831   001666                     u1941:
  5832   001666  EF4C  F00B         	goto	l2898
  5833   00166A                     u1940:
  5834   00166A  5018               	movf	_flag1^0,w,c
  5835   00166C  1019               	iorwf	(_flag1+1)^0,w,c
  5836   00166E  A4D8               	btfss	status,2,c
  5837   001670  EF3C  F00B         	goto	u1951
  5838   001674  EF3E  F00B         	goto	u1950
  5839   001678                     u1951:
  5840   001678  EF4C  F00B         	goto	l2898
  5841   00167C                     u1950:
  5842   00167C                     
  5843                           ;dashboard.c: 60:     {;dashboard.c: 61:         if(i>0)
  5844   00167C  501A               	movf	_i^0,w,c
  5845   00167E  101B               	iorwf	(_i+1)^0,w,c
  5846   001680  B4D8               	btfsc	status,2,c
  5847   001682  EF45  F00B         	goto	u1961
  5848   001686  EF47  F00B         	goto	u1960
  5849   00168A                     u1961:
  5850   00168A  EF7A  F00B         	goto	l2912
  5851   00168E                     u1960:
  5852   00168E                     
  5853                           ;dashboard.c: 62:         {;dashboard.c: 63:             i--;
  5854   00168E  061A               	decf	_i^0,f,c
  5855   001690  A0D8               	btfss	status,0,c
  5856   001692  061B               	decf	(_i+1)^0,f,c
  5857   001694  EF28  F00B         	goto	l2886
  5858   001698                     l2898:
  5859   001698  0445               	decf	display_event@key^0,w,c
  5860   00169A  A4D8               	btfss	status,2,c
  5861   00169C  EF52  F00B         	goto	u1971
  5862   0016A0  EF54  F00B         	goto	u1970
  5863   0016A4                     u1971:
  5864   0016A4  EF5E  F00B         	goto	l2904
  5865   0016A8                     u1970:
  5866   0016A8                     
  5867                           ;dashboard.c: 68:     {;dashboard.c: 69:         i=7;
  5868   0016A8  0E00               	movlw	0
  5869   0016AA  6E1B               	movwf	(_i+1)^0,c
  5870   0016AC  0E07               	movlw	7
  5871   0016AE  6E1A               	movwf	_i^0,c
  5872                           
  5873                           ;dashboard.c: 70:         flag1=1;
  5874   0016B0  0E00               	movlw	0
  5875   0016B2  6E19               	movwf	(_flag1+1)^0,c
  5876   0016B4  0E01               	movlw	1
  5877   0016B6  6E18               	movwf	_flag1^0,c
  5878   0016B8  EF28  F00B         	goto	l2886
  5879   0016BC                     l2904:
  5880   0016BC  0E02               	movlw	2
  5881   0016BE  1845               	xorwf	display_event@key^0,w,c
  5882   0016C0  B4D8               	btfsc	status,2,c
  5883   0016C2  EF65  F00B         	goto	u1981
  5884   0016C6  EF67  F00B         	goto	u1980
  5885   0016CA                     u1981:
  5886   0016CA  EF70  F00B         	goto	l2908
  5887   0016CE                     u1980:
  5888   0016CE  0E03               	movlw	3
  5889   0016D0  1845               	xorwf	display_event@key^0,w,c
  5890   0016D2  A4D8               	btfss	status,2,c
  5891   0016D4  EF6E  F00B         	goto	u1991
  5892   0016D8  EF70  F00B         	goto	u1990
  5893   0016DC                     u1991:
  5894   0016DC  EF7A  F00B         	goto	l2912
  5895   0016E0                     u1990:
  5896   0016E0                     l2908:
  5897                           
  5898                           ;dashboard.c: 74:     {;dashboard.c: 75:         i=2;
  5899   0016E0  0E00               	movlw	0
  5900   0016E2  6E1B               	movwf	(_i+1)^0,c
  5901   0016E4  0E02               	movlw	2
  5902   0016E6  6E1A               	movwf	_i^0,c
  5903                           
  5904                           ;dashboard.c: 76:         flag1=0;
  5905   0016E8  0E00               	movlw	0
  5906   0016EA  6E19               	movwf	(_flag1+1)^0,c
  5907   0016EC  0E00               	movlw	0
  5908   0016EE  6E18               	movwf	_flag1^0,c
  5909   0016F0  EF28  F00B         	goto	l2886
  5910   0016F4                     l2912:
  5911                           
  5912                           ;dashboard.c: 79:     clcd_print(event[i],(0xC0 + (10)));
  5913   0016F4  501A               	movf	_i^0,w,c
  5914   0016F6  0D02               	mullw	2
  5915   0016F8  50F3               	movf	243,w,c
  5916   0016FA  0F83               	addlw	low _event
  5917   0016FC  6ED9               	movwf	fsr2l,c
  5918   0016FE  6ADA               	clrf	fsr2h,c
  5919   001700  CFDE F037          	movff	postinc2,clcd_print@data
  5920   001704  CFDD F038          	movff	postdec2,clcd_print@data+1
  5921   001708  0ECA               	movlw	202
  5922   00170A  6E39               	movwf	clcd_print@addr^0,c
  5923   00170C  EC0C  F00D         	call	_clcd_print	;wreg free
  5924   001710  0012               	return		;funcret
  5925   001712                     __end_of_display_event:
  5926                           	callstack 0
  5927                           
  5928 ;; *************** function _clear_log *****************
  5929 ;; Defined at:
  5930 ;;		line 7 in file "clear_log.c"
  5931 ;; Parameters:    Size  Location     Type
  5932 ;;  key             1    wreg     unsigned char 
  5933 ;; Auto vars:     Size  Location     Type
  5934 ;;  key             1    5[COMRAM] unsigned char 
  5935 ;; Return value:  Size  Location     Type
  5936 ;;                  1    wreg      void 
  5937 ;; Registers used:
  5938 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5939 ;; Tracked objects:
  5940 ;;		On entry : 0/0
  5941 ;;		On exit  : 0/0
  5942 ;;		Unchanged: 0/0
  5943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5944 ;;      Params:         0       0       0       0       0       0       0
  5945 ;;      Locals:         1       0       0       0       0       0       0
  5946 ;;      Temps:          0       0       0       0       0       0       0
  5947 ;;      Totals:         1       0       0       0       0       0       0
  5948 ;;Total ram usage:        1 bytes
  5949 ;; Hardware stack levels used: 1
  5950 ;; Hardware stack levels required when called: 3
  5951 ;; This function calls:
  5952 ;;		_clcd_print
  5953 ;; This function is called by:
  5954 ;;		_main
  5955 ;; This function uses a non-reentrant model
  5956 ;;
  5957                           
  5958                           	psect	text32
  5959   001C36                     __ptext32:
  5960                           	callstack 0
  5961   001C36                     _clear_log:
  5962                           	callstack 27
  5963                           
  5964                           ;incstack = 0
  5965                           ;clear_log@key stored from wreg
  5966   001C36  6E3A               	movwf	clear_log@key^0,c
  5967   001C38                     
  5968                           ;clear_log.c: 7: void clear_log(char key);clear_log.c: 8: {;clear_log.c: 9:     lap= 0,o
      +                          verflow = 0;
  5969   001C38  0E00               	movlw	0
  5970   001C3A  6E24               	movwf	_lap^0,c
  5971   001C3C  0E00               	movlw	0
  5972   001C3E  6E23               	movwf	_overflow^0,c
  5973   001C40                     
  5974                           ;clear_log.c: 10:     clcd_print("LOGS ARE CLEARED",(0x80 + (0)));
  5975   001C40  0E3D               	movlw	low STR_39
  5976   001C42  6E37               	movwf	clcd_print@data^0,c
  5977   001C44  0E2F               	movlw	high STR_39
  5978   001C46  6E38               	movwf	(clcd_print@data+1)^0,c
  5979   001C48  0E80               	movlw	128
  5980   001C4A  6E39               	movwf	clcd_print@addr^0,c
  5981   001C4C  EC0C  F00D         	call	_clcd_print	;wreg free
  5982   001C50                     
  5983                           ;clear_log.c: 11:     clcd_print("SUCCESSFULLY",(0xC0 + (2)));
  5984   001C50  0E9C               	movlw	low STR_40
  5985   001C52  6E37               	movwf	clcd_print@data^0,c
  5986   001C54  0E2F               	movlw	high STR_40
  5987   001C56  6E38               	movwf	(clcd_print@data+1)^0,c
  5988   001C58  0EC2               	movlw	194
  5989   001C5A  6E39               	movwf	clcd_print@addr^0,c
  5990   001C5C  EC0C  F00D         	call	_clcd_print	;wreg free
  5991   001C60                     
  5992                           ;clear_log.c: 12: if(key==16)
  5993   001C60  0E10               	movlw	16
  5994   001C62  183A               	xorwf	clear_log@key^0,w,c
  5995   001C64  A4D8               	btfss	status,2,c
  5996   001C66  EF37  F00E         	goto	u2511
  5997   001C6A  EF39  F00E         	goto	u2510
  5998   001C6E                     u2511:
  5999   001C6E  EF3B  F00E         	goto	l659
  6000   001C72                     u2510:
  6001   001C72                     
  6002                           ;clear_log.c: 13: {;clear_log.c: 14:     main_f=2;
  6003   001C72  0E02               	movlw	2
  6004   001C74  6E2B               	movwf	_main_f^0,c
  6005   001C76                     l659:
  6006   001C76  0012               	return		;funcret
  6007   001C78                     __end_of_clear_log:
  6008                           	callstack 0
  6009                           
  6010 ;; *************** function _change_pass *****************
  6011 ;; Defined at:
  6012 ;;		line 11 in file "change_password.c"
  6013 ;; Parameters:    Size  Location     Type
  6014 ;;  key             1    wreg     unsigned char 
  6015 ;; Auto vars:     Size  Location     Type
  6016 ;;  key             1   27[COMRAM] unsigned char 
  6017 ;;  i               4   22[COMRAM] unsigned long 
  6018 ;;  i               4   18[COMRAM] unsigned long 
  6019 ;;  prev_i          1   26[COMRAM] unsigned char 
  6020 ;;  k               1    0        unsigned char 
  6021 ;;  i               2   28[COMRAM] int 
  6022 ;; Return value:  Size  Location     Type
  6023 ;;                  1    wreg      void 
  6024 ;; Registers used:
  6025 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6026 ;; Tracked objects:
  6027 ;;		On entry : 0/0
  6028 ;;		On exit  : 0/0
  6029 ;;		Unchanged: 0/0
  6030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6031 ;;      Params:         0       0       0       0       0       0       0
  6032 ;;      Locals:        12       0       0       0       0       0       0
  6033 ;;      Temps:          2       0       0       0       0       0       0
  6034 ;;      Totals:        14       0       0       0       0       0       0
  6035 ;;Total ram usage:       14 bytes
  6036 ;; Hardware stack levels used: 1
  6037 ;; Hardware stack levels required when called: 5
  6038 ;; This function calls:
  6039 ;;		_clcd_print
  6040 ;;		_clcd_write
  6041 ;;		_store_event
  6042 ;; This function is called by:
  6043 ;;		_main
  6044 ;; This function uses a non-reentrant model
  6045 ;;
  6046                           
  6047                           	psect	text33
  6048   000874                     __ptext33:
  6049                           	callstack 0
  6050   000874                     _change_pass:
  6051                           	callstack 25
  6052                           
  6053                           ;incstack = 0
  6054                           ;change_pass@key stored from wreg
  6055   000874  6E50               	movwf	change_pass@key^0,c
  6056   000876                     
  6057                           ;change_password.c: 11: void change_pass(char key);change_password.c: 12: {;change_passw
      +                          ord.c: 13:     static char index1=0,index2=0,pass_f = 0;;change_password.c: 14:     stat
      +                          ic unsigned int delay = 0;;change_password.c: 16:     if(index1 < 4 && pass_f ==0)
  6058   000876  0E04               	movlw	4
  6059   000878  6021               	cpfslt	change_pass@index1^0,c
  6060   00087A  EF41  F004         	goto	u2851
  6061   00087E  EF43  F004         	goto	u2850
  6062   000882                     u2851:
  6063   000882  EFDD  F004         	goto	l3516
  6064   000886                     u2850:
  6065   000886  501F               	movf	change_pass@pass_f^0,w,c
  6066   000888  A4D8               	btfss	status,2,c
  6067   00088A  EF49  F004         	goto	u2861
  6068   00088E  EF4B  F004         	goto	u2860
  6069   000892                     u2861:
  6070   000892  EFDD  F004         	goto	l3516
  6071   000896                     u2860:
  6072   000896                     
  6073                           ;change_password.c: 17:     {;change_password.c: 18:         clcd_print("ENTER NEW PASSW
      +                          ORD",(0x80 + (0)));
  6074   000896  0EAD               	movlw	low STR_41
  6075   000898  6E37               	movwf	clcd_print@data^0,c
  6076   00089A  0E2E               	movlw	high STR_41
  6077   00089C  6E38               	movwf	(clcd_print@data+1)^0,c
  6078   00089E  0E80               	movlw	128
  6079   0008A0  6E39               	movwf	clcd_print@addr^0,c
  6080   0008A2  EC0C  F00D         	call	_clcd_print	;wreg free
  6081   0008A6                     
  6082                           ;change_password.c: 19:         if(delay++ < 1000)
  6083   0008A6  500E               	movf	change_pass@delay^0,w,c
  6084   0008A8  6E45               	movwf	??_change_pass^0,c
  6085   0008AA  500F               	movf	(change_pass@delay+1)^0,w,c
  6086   0008AC  6E46               	movwf	(??_change_pass+1)^0,c
  6087   0008AE  4A0E               	infsnz	change_pass@delay^0,f,c
  6088   0008B0  2A0F               	incf	(change_pass@delay+1)^0,f,c
  6089   0008B2  0EE8               	movlw	232
  6090   0008B4  5C45               	subwf	??_change_pass^0,w,c
  6091   0008B6  0E03               	movlw	3
  6092   0008B8  5846               	subwfb	(??_change_pass+1)^0,w,c
  6093   0008BA  B0D8               	btfsc	status,0,c
  6094   0008BC  EF62  F004         	goto	u2871
  6095   0008C0  EF64  F004         	goto	u2870
  6096   0008C4                     u2871:
  6097   0008C4  EF6F  F004         	goto	l3486
  6098   0008C8                     u2870:
  6099   0008C8                     
  6100                           ;change_password.c: 20:         {;change_password.c: 21:             clcd_print("_",(0xC
      +                          0 + (index1)));
  6101   0008C8  0EFD               	movlw	low STR_13
  6102   0008CA  6E37               	movwf	clcd_print@data^0,c
  6103   0008CC  0E2F               	movlw	high STR_13
  6104   0008CE  6E38               	movwf	(clcd_print@data+1)^0,c
  6105   0008D0  5021               	movf	change_pass@index1^0,w,c
  6106   0008D2  0FC0               	addlw	192
  6107   0008D4  6E39               	movwf	clcd_print@addr^0,c
  6108   0008D6  EC0C  F00D         	call	_clcd_print	;wreg free
  6109                           
  6110                           ;change_password.c: 22:         }
  6111   0008DA  EF9A  F004         	goto	l3494
  6112   0008DE                     l3486:
  6113   0008DE  500E               	movf	change_pass@delay^0,w,c
  6114   0008E0  6E45               	movwf	??_change_pass^0,c
  6115   0008E2  500F               	movf	(change_pass@delay+1)^0,w,c
  6116   0008E4  6E46               	movwf	(??_change_pass+1)^0,c
  6117   0008E6  4A0E               	infsnz	change_pass@delay^0,f,c
  6118   0008E8  2A0F               	incf	(change_pass@delay+1)^0,f,c
  6119   0008EA  0EE9               	movlw	233
  6120   0008EC  5C45               	subwf	??_change_pass^0,w,c
  6121   0008EE  0E03               	movlw	3
  6122   0008F0  5846               	subwfb	(??_change_pass+1)^0,w,c
  6123   0008F2  A0D8               	btfss	status,0,c
  6124   0008F4  EF7E  F004         	goto	u2881
  6125   0008F8  EF80  F004         	goto	u2880
  6126   0008FC                     u2881:
  6127   0008FC  EF96  F004         	goto	l3492
  6128   000900                     u2880:
  6129   000900  0ED0               	movlw	208
  6130   000902  5C0E               	subwf	change_pass@delay^0,w,c
  6131   000904  0E07               	movlw	7
  6132   000906  580F               	subwfb	(change_pass@delay+1)^0,w,c
  6133   000908  B0D8               	btfsc	status,0,c
  6134   00090A  EF89  F004         	goto	u2891
  6135   00090E  EF8B  F004         	goto	u2890
  6136   000912                     u2891:
  6137   000912  EF96  F004         	goto	l3492
  6138   000916                     u2890:
  6139   000916                     
  6140                           ;change_password.c: 24:         {;change_password.c: 25:             clcd_print(" ",(0xC
      +                          0 + (index1)));
  6141   000916  0EAB               	movlw	low (STR_23+21)
  6142   000918  6E37               	movwf	clcd_print@data^0,c
  6143   00091A  0E2E               	movlw	high (STR_23+21)
  6144   00091C  6E38               	movwf	(clcd_print@data+1)^0,c
  6145   00091E  5021               	movf	change_pass@index1^0,w,c
  6146   000920  0FC0               	addlw	192
  6147   000922  6E39               	movwf	clcd_print@addr^0,c
  6148   000924  EC0C  F00D         	call	_clcd_print	;wreg free
  6149                           
  6150                           ;change_password.c: 26:         }
  6151   000928  EF9A  F004         	goto	l3494
  6152   00092C                     l3492:
  6153                           
  6154                           ;change_password.c: 28:             delay = 0;
  6155   00092C  0E00               	movlw	0
  6156   00092E  6E0F               	movwf	(change_pass@delay+1)^0,c
  6157   000930  0E00               	movlw	0
  6158   000932  6E0E               	movwf	change_pass@delay^0,c
  6159   000934                     l3494:
  6160                           
  6161                           ;change_password.c: 29:         if(key == 5)
  6162   000934  0E05               	movlw	5
  6163   000936  1850               	xorwf	change_pass@key^0,w,c
  6164   000938  A4D8               	btfss	status,2,c
  6165   00093A  EFA1  F004         	goto	u2901
  6166   00093E  EFA3  F004         	goto	u2900
  6167   000942                     u2901:
  6168   000942  EFB2  F004         	goto	l3502
  6169   000946                     u2900:
  6170   000946                     
  6171                           ;change_password.c: 30:         {;change_password.c: 31:             new_password[index1
      +                          ] = 0;
  6172   000946  5021               	movf	change_pass@index1^0,w,c
  6173   000948  0F7F               	addlw	low _new_password
  6174   00094A  6ED9               	movwf	fsr2l,c
  6175   00094C  6ADA               	clrf	fsr2h,c
  6176   00094E  6ADF               	clrf	indf2,c
  6177   000950                     
  6178                           ;change_password.c: 32:             clcd_print("*",(0xC0 + (index1)));
  6179   000950  0EFB               	movlw	low STR_15
  6180   000952  6E37               	movwf	clcd_print@data^0,c
  6181   000954  0E2F               	movlw	high STR_15
  6182   000956  6E38               	movwf	(clcd_print@data+1)^0,c
  6183   000958  5021               	movf	change_pass@index1^0,w,c
  6184   00095A  0FC0               	addlw	192
  6185   00095C  6E39               	movwf	clcd_print@addr^0,c
  6186   00095E  EC0C  F00D         	call	_clcd_print	;wreg free
  6187   000962                     
  6188                           ;change_password.c: 33:             index1++;
  6189   000962  2A21               	incf	change_pass@index1^0,f,c
  6190   000964                     l3502:
  6191                           
  6192                           ;change_password.c: 35:         if(key == 6)
  6193   000964  0E06               	movlw	6
  6194   000966  1850               	xorwf	change_pass@key^0,w,c
  6195   000968  A4D8               	btfss	status,2,c
  6196   00096A  EFB9  F004         	goto	u2911
  6197   00096E  EFBB  F004         	goto	u2910
  6198   000972                     u2911:
  6199   000972  EFCB  F004         	goto	l3510
  6200   000976                     u2910:
  6201   000976                     
  6202                           ;change_password.c: 36:         {;change_password.c: 37:             new_password[index1
      +                          ] = 1;
  6203   000976  5021               	movf	change_pass@index1^0,w,c
  6204   000978  0F7F               	addlw	low _new_password
  6205   00097A  6ED9               	movwf	fsr2l,c
  6206   00097C  6ADA               	clrf	fsr2h,c
  6207   00097E  0E01               	movlw	1
  6208   000980  6EDF               	movwf	indf2,c
  6209   000982                     
  6210                           ;change_password.c: 38:             clcd_print("*",(0xC0 + (index1)));
  6211   000982  0EFB               	movlw	low STR_15
  6212   000984  6E37               	movwf	clcd_print@data^0,c
  6213   000986  0E2F               	movlw	high STR_15
  6214   000988  6E38               	movwf	(clcd_print@data+1)^0,c
  6215   00098A  5021               	movf	change_pass@index1^0,w,c
  6216   00098C  0FC0               	addlw	192
  6217   00098E  6E39               	movwf	clcd_print@addr^0,c
  6218   000990  EC0C  F00D         	call	_clcd_print	;wreg free
  6219   000994                     
  6220                           ;change_password.c: 39:             index1++;
  6221   000994  2A21               	incf	change_pass@index1^0,f,c
  6222   000996                     l3510:
  6223                           
  6224                           ;change_password.c: 41:         if(index1 == 4)
  6225   000996  0E04               	movlw	4
  6226   000998  1821               	xorwf	change_pass@index1^0,w,c
  6227   00099A  A4D8               	btfss	status,2,c
  6228   00099C  EFD2  F004         	goto	u2921
  6229   0009A0  EFD4  F004         	goto	u2920
  6230   0009A4                     u2921:
  6231   0009A4  EF2F  F006         	goto	l716
  6232   0009A8                     u2920:
  6233   0009A8                     
  6234                           ;change_password.c: 42:         {;change_password.c: 43:             clcd_write(0x01, 0)
      +                          ;
  6235   0009A8  0E00               	movlw	0
  6236   0009AA  6E35               	movwf	clcd_write@control_bit^0,c
  6237   0009AC  0E01               	movlw	1
  6238   0009AE  EC5C  F00E         	call	_clcd_write
  6239   0009B2                     l3514:
  6240                           
  6241                           ;change_password.c: 44:             pass_f = 1;
  6242   0009B2  0E01               	movlw	1
  6243   0009B4  6E1F               	movwf	change_pass@pass_f^0,c
  6244   0009B6  EF2F  F006         	goto	l716
  6245   0009BA                     l3516:
  6246   0009BA  0E04               	movlw	4
  6247   0009BC  6020               	cpfslt	change_pass@index2^0,c
  6248   0009BE  EFE3  F004         	goto	u2931
  6249   0009C2  EFE5  F004         	goto	u2930
  6250   0009C6                     u2931:
  6251   0009C6  EF78  F005         	goto	l3554
  6252   0009CA                     u2930:
  6253   0009CA  041F               	decf	change_pass@pass_f^0,w,c
  6254   0009CC  A4D8               	btfss	status,2,c
  6255   0009CE  EFEB  F004         	goto	u2941
  6256   0009D2  EFED  F004         	goto	u2940
  6257   0009D6                     u2941:
  6258   0009D6  EF78  F005         	goto	l3554
  6259   0009DA                     u2940:
  6260   0009DA                     
  6261                           ;change_password.c: 48:     {;change_password.c: 49:         clcd_print("RE ENTER PASSWO
      +                          RD",(0x80 + (0)));
  6262   0009DA  0EE6               	movlw	low STR_46
  6263   0009DC  6E37               	movwf	clcd_print@data^0,c
  6264   0009DE  0E2E               	movlw	high STR_46
  6265   0009E0  6E38               	movwf	(clcd_print@data+1)^0,c
  6266   0009E2  0E80               	movlw	128
  6267   0009E4  6E39               	movwf	clcd_print@addr^0,c
  6268   0009E6  EC0C  F00D         	call	_clcd_print	;wreg free
  6269   0009EA                     
  6270                           ;change_password.c: 50:         if(delay++ < 1000)
  6271   0009EA  500E               	movf	change_pass@delay^0,w,c
  6272   0009EC  6E45               	movwf	??_change_pass^0,c
  6273   0009EE  500F               	movf	(change_pass@delay+1)^0,w,c
  6274   0009F0  6E46               	movwf	(??_change_pass+1)^0,c
  6275   0009F2  4A0E               	infsnz	change_pass@delay^0,f,c
  6276   0009F4  2A0F               	incf	(change_pass@delay+1)^0,f,c
  6277   0009F6  0EE8               	movlw	232
  6278   0009F8  5C45               	subwf	??_change_pass^0,w,c
  6279   0009FA  0E03               	movlw	3
  6280   0009FC  5846               	subwfb	(??_change_pass+1)^0,w,c
  6281   0009FE  B0D8               	btfsc	status,0,c
  6282   000A00  EF04  F005         	goto	u2951
  6283   000A04  EF06  F005         	goto	u2950
  6284   000A08                     u2951:
  6285   000A08  EF11  F005         	goto	l3526
  6286   000A0C                     u2950:
  6287   000A0C                     
  6288                           ;change_password.c: 51:         {;change_password.c: 52:             clcd_print("_",(0xC
      +                          0 + (index2)));
  6289   000A0C  0EFD               	movlw	low STR_13
  6290   000A0E  6E37               	movwf	clcd_print@data^0,c
  6291   000A10  0E2F               	movlw	high STR_13
  6292   000A12  6E38               	movwf	(clcd_print@data+1)^0,c
  6293   000A14  5020               	movf	change_pass@index2^0,w,c
  6294   000A16  0FC0               	addlw	192
  6295   000A18  6E39               	movwf	clcd_print@addr^0,c
  6296   000A1A  EC0C  F00D         	call	_clcd_print	;wreg free
  6297                           
  6298                           ;change_password.c: 53:         }
  6299   000A1E  EF3C  F005         	goto	l3534
  6300   000A22                     l3526:
  6301   000A22  500E               	movf	change_pass@delay^0,w,c
  6302   000A24  6E45               	movwf	??_change_pass^0,c
  6303   000A26  500F               	movf	(change_pass@delay+1)^0,w,c
  6304   000A28  6E46               	movwf	(??_change_pass+1)^0,c
  6305   000A2A  4A0E               	infsnz	change_pass@delay^0,f,c
  6306   000A2C  2A0F               	incf	(change_pass@delay+1)^0,f,c
  6307   000A2E  0EE9               	movlw	233
  6308   000A30  5C45               	subwf	??_change_pass^0,w,c
  6309   000A32  0E03               	movlw	3
  6310   000A34  5846               	subwfb	(??_change_pass+1)^0,w,c
  6311   000A36  A0D8               	btfss	status,0,c
  6312   000A38  EF20  F005         	goto	u2961
  6313   000A3C  EF22  F005         	goto	u2960
  6314   000A40                     u2961:
  6315   000A40  EF38  F005         	goto	l3532
  6316   000A44                     u2960:
  6317   000A44  0ED0               	movlw	208
  6318   000A46  5C0E               	subwf	change_pass@delay^0,w,c
  6319   000A48  0E07               	movlw	7
  6320   000A4A  580F               	subwfb	(change_pass@delay+1)^0,w,c
  6321   000A4C  B0D8               	btfsc	status,0,c
  6322   000A4E  EF2B  F005         	goto	u2971
  6323   000A52  EF2D  F005         	goto	u2970
  6324   000A56                     u2971:
  6325   000A56  EF38  F005         	goto	l3532
  6326   000A5A                     u2970:
  6327   000A5A                     
  6328                           ;change_password.c: 55:         {;change_password.c: 56:             clcd_print(" ",(0xC
      +                          0 + (index2)));
  6329   000A5A  0EAB               	movlw	low (STR_23+21)
  6330   000A5C  6E37               	movwf	clcd_print@data^0,c
  6331   000A5E  0E2E               	movlw	high (STR_23+21)
  6332   000A60  6E38               	movwf	(clcd_print@data+1)^0,c
  6333   000A62  5020               	movf	change_pass@index2^0,w,c
  6334   000A64  0FC0               	addlw	192
  6335   000A66  6E39               	movwf	clcd_print@addr^0,c
  6336   000A68  EC0C  F00D         	call	_clcd_print	;wreg free
  6337                           
  6338                           ;change_password.c: 57:         }
  6339   000A6C  EF3C  F005         	goto	l3534
  6340   000A70                     l3532:
  6341                           
  6342                           ;change_password.c: 59:             delay = 0;
  6343   000A70  0E00               	movlw	0
  6344   000A72  6E0F               	movwf	(change_pass@delay+1)^0,c
  6345   000A74  0E00               	movlw	0
  6346   000A76  6E0E               	movwf	change_pass@delay^0,c
  6347   000A78                     l3534:
  6348                           
  6349                           ;change_password.c: 60:         if(key == 5)
  6350   000A78  0E05               	movlw	5
  6351   000A7A  1850               	xorwf	change_pass@key^0,w,c
  6352   000A7C  A4D8               	btfss	status,2,c
  6353   000A7E  EF43  F005         	goto	u2981
  6354   000A82  EF45  F005         	goto	u2980
  6355   000A86                     u2981:
  6356   000A86  EF54  F005         	goto	l3542
  6357   000A8A                     u2980:
  6358   000A8A                     
  6359                           ;change_password.c: 61:         {;change_password.c: 62:             re_password[index2]
      +                          = 0;
  6360   000A8A  5020               	movf	change_pass@index2^0,w,c
  6361   000A8C  0F6B               	addlw	low _re_password
  6362   000A8E  6ED9               	movwf	fsr2l,c
  6363   000A90  6ADA               	clrf	fsr2h,c
  6364   000A92  6ADF               	clrf	indf2,c
  6365   000A94                     
  6366                           ;change_password.c: 63:             clcd_print("*",(0xC0 + (index2)));
  6367   000A94  0EFB               	movlw	low STR_15
  6368   000A96  6E37               	movwf	clcd_print@data^0,c
  6369   000A98  0E2F               	movlw	high STR_15
  6370   000A9A  6E38               	movwf	(clcd_print@data+1)^0,c
  6371   000A9C  5020               	movf	change_pass@index2^0,w,c
  6372   000A9E  0FC0               	addlw	192
  6373   000AA0  6E39               	movwf	clcd_print@addr^0,c
  6374   000AA2  EC0C  F00D         	call	_clcd_print	;wreg free
  6375   000AA6                     
  6376                           ;change_password.c: 64:             index2++;
  6377   000AA6  2A20               	incf	change_pass@index2^0,f,c
  6378   000AA8                     l3542:
  6379                           
  6380                           ;change_password.c: 66:         if(key == 6)
  6381   000AA8  0E06               	movlw	6
  6382   000AAA  1850               	xorwf	change_pass@key^0,w,c
  6383   000AAC  A4D8               	btfss	status,2,c
  6384   000AAE  EF5B  F005         	goto	u2991
  6385   000AB2  EF5D  F005         	goto	u2990
  6386   000AB6                     u2991:
  6387   000AB6  EF6D  F005         	goto	l3550
  6388   000ABA                     u2990:
  6389   000ABA                     
  6390                           ;change_password.c: 67:         {;change_password.c: 68:             re_password[index2]
      +                           = 1;
  6391   000ABA  5020               	movf	change_pass@index2^0,w,c
  6392   000ABC  0F6B               	addlw	low _re_password
  6393   000ABE  6ED9               	movwf	fsr2l,c
  6394   000AC0  6ADA               	clrf	fsr2h,c
  6395   000AC2  0E01               	movlw	1
  6396   000AC4  6EDF               	movwf	indf2,c
  6397   000AC6                     
  6398                           ;change_password.c: 69:             clcd_print("*",(0xC0 + (index2)));
  6399   000AC6  0EFB               	movlw	low STR_15
  6400   000AC8  6E37               	movwf	clcd_print@data^0,c
  6401   000ACA  0E2F               	movlw	high STR_15
  6402   000ACC  6E38               	movwf	(clcd_print@data+1)^0,c
  6403   000ACE  5020               	movf	change_pass@index2^0,w,c
  6404   000AD0  0FC0               	addlw	192
  6405   000AD2  6E39               	movwf	clcd_print@addr^0,c
  6406   000AD4  EC0C  F00D         	call	_clcd_print	;wreg free
  6407   000AD8                     
  6408                           ;change_password.c: 70:             index2++;
  6409   000AD8  2A20               	incf	change_pass@index2^0,f,c
  6410   000ADA                     l3550:
  6411                           
  6412                           ;change_password.c: 72:         if(index2 == 4)
  6413   000ADA  0E04               	movlw	4
  6414   000ADC  1820               	xorwf	change_pass@index2^0,w,c
  6415   000ADE  A4D8               	btfss	status,2,c
  6416   000AE0  EF74  F005         	goto	u3001
  6417   000AE4  EF76  F005         	goto	u3000
  6418   000AE8                     u3001:
  6419   000AE8  EF2F  F006         	goto	l716
  6420   000AEC                     u3000:
  6421   000AEC  EFD9  F004         	goto	l3514
  6422   000AF0                     l3554:
  6423   000AF0  0E04               	movlw	4
  6424   000AF2  1821               	xorwf	change_pass@index1^0,w,c
  6425   000AF4  A4D8               	btfss	status,2,c
  6426   000AF6  EF7F  F005         	goto	u3011
  6427   000AFA  EF81  F005         	goto	u3010
  6428   000AFE                     u3011:
  6429   000AFE  EF2F  F006         	goto	l716
  6430   000B02                     u3010:
  6431   000B02  0E04               	movlw	4
  6432   000B04  1820               	xorwf	change_pass@index2^0,w,c
  6433   000B06  A4D8               	btfss	status,2,c
  6434   000B08  EF88  F005         	goto	u3021
  6435   000B0C  EF8A  F005         	goto	u3020
  6436   000B10                     u3021:
  6437   000B10  EF2F  F006         	goto	l716
  6438   000B14                     u3020:
  6439   000B14                     
  6440                           ;change_password.c: 76:     {;change_password.c: 77:         for(int i =0;i<4;i++)
  6441   000B14  0E00               	movlw	0
  6442   000B16  6E52               	movwf	(change_pass@i+1)^0,c
  6443   000B18  0E00               	movlw	0
  6444   000B1A  6E51               	movwf	change_pass@i^0,c
  6445   000B1C                     l3564:
  6446                           
  6447                           ;change_password.c: 78:         {;change_password.c: 79:             if(new_password[i] 
      +                          != re_password[i])
  6448   000B1C  5051               	movf	change_pass@i^0,w,c
  6449   000B1E  0F6B               	addlw	low _re_password
  6450   000B20  6ED9               	movwf	fsr2l,c
  6451   000B22  6ADA               	clrf	fsr2h,c
  6452   000B24  5051               	movf	change_pass@i^0,w,c
  6453   000B26  0F7F               	addlw	low _new_password
  6454   000B28  6EE1               	movwf	fsr1l,c
  6455   000B2A  6AE2               	clrf	fsr1h,c
  6456   000B2C  50DE               	movf	postinc2,w,c
  6457   000B2E  18E6               	xorwf	postinc1,w,c
  6458   000B30  B4D8               	btfsc	status,2,c
  6459   000B32  EF9D  F005         	goto	u3031
  6460   000B36  EF9F  F005         	goto	u3030
  6461   000B3A                     u3031:
  6462   000B3A  EFA1  F005         	goto	l3568
  6463   000B3E                     u3030:
  6464   000B3E                     
  6465                           ;change_password.c: 80:                 pass_f = 2;
  6466   000B3E  0E02               	movlw	2
  6467   000B40  6E1F               	movwf	change_pass@pass_f^0,c
  6468   000B42                     l3568:
  6469                           
  6470                           ;change_password.c: 81:         }
  6471   000B42  4A51               	infsnz	change_pass@i^0,f,c
  6472   000B44  2A52               	incf	(change_pass@i+1)^0,f,c
  6473   000B46  BE52               	btfsc	(change_pass@i+1)^0,7,c
  6474   000B48  EFAF  F005         	goto	u3041
  6475   000B4C  5052               	movf	(change_pass@i+1)^0,w,c
  6476   000B4E  E109               	bnz	u3040
  6477   000B50  0E04               	movlw	4
  6478   000B52  5C51               	subwf	change_pass@i^0,w,c
  6479   000B54  A0D8               	btfss	status,0,c
  6480   000B56  EFAF  F005         	goto	u3041
  6481   000B5A  EFB1  F005         	goto	u3040
  6482   000B5E                     u3041:
  6483   000B5E  EF8E  F005         	goto	l3564
  6484   000B62                     u3040:
  6485   000B62                     
  6486                           ;change_password.c: 82:         if(pass_f == 2)
  6487   000B62  0E02               	movlw	2
  6488   000B64  181F               	xorwf	change_pass@pass_f^0,w,c
  6489   000B66  A4D8               	btfss	status,2,c
  6490   000B68  EFB8  F005         	goto	u3051
  6491   000B6C  EFBA  F005         	goto	u3050
  6492   000B70                     u3051:
  6493   000B70  EFEF  F005         	goto	l3584
  6494   000B74                     u3050:
  6495   000B74                     
  6496                           ;change_password.c: 83:         {;change_password.c: 84:             clcd_print("CHANGE 
      +                          PASSWORD ",(0x80 + (0)));
  6497   000B74  0E2C               	movlw	low STR_51
  6498   000B76  6E37               	movwf	clcd_print@data^0,c
  6499   000B78  0E2F               	movlw	high STR_51
  6500   000B7A  6E38               	movwf	(clcd_print@data+1)^0,c
  6501   000B7C  0E80               	movlw	128
  6502   000B7E  6E39               	movwf	clcd_print@addr^0,c
  6503   000B80  EC0C  F00D         	call	_clcd_print	;wreg free
  6504                           
  6505                           ;change_password.c: 85:             clcd_print("    FAILURE     ",(0xC0 + (0)));
  6506   000B84  0E0A               	movlw	low STR_52
  6507   000B86  6E37               	movwf	clcd_print@data^0,c
  6508   000B88  0E2F               	movlw	high STR_52
  6509   000B8A  6E38               	movwf	(clcd_print@data+1)^0,c
  6510   000B8C  0EC0               	movlw	192
  6511   000B8E  6E39               	movwf	clcd_print@addr^0,c
  6512   000B90  EC0C  F00D         	call	_clcd_print	;wreg free
  6513   000B94                     
  6514                           ;change_password.c: 86:             pass_f = index1 = index2 = 0;
  6515   000B94  0E00               	movlw	0
  6516   000B96  6E20               	movwf	change_pass@index2^0,c
  6517   000B98  C020  F021         	movff	change_pass@index2,change_pass@index1
  6518   000B9C  C021  F01F         	movff	change_pass@index1,change_pass@pass_f
  6519   000BA0                     
  6520                           ;change_password.c: 87:             for(unsigned long int i= 500000;i--;);
  6521   000BA0  0E20               	movlw	32
  6522   000BA2  6E47               	movwf	change_pass@i_578^0,c
  6523   000BA4  0EA1               	movlw	161
  6524   000BA6  6E48               	movwf	(change_pass@i_578+1)^0,c
  6525   000BA8  0E07               	movlw	7
  6526   000BAA  6E49               	movwf	(change_pass@i_578+2)^0,c
  6527   000BAC  0E00               	movlw	0
  6528   000BAE  6E4A               	movwf	(change_pass@i_578+3)^0,c
  6529   000BB0                     l3580:
  6530   000BB0  0647               	decf	change_pass@i_578^0,f,c
  6531   000BB2  0E00               	movlw	0
  6532   000BB4  5A48               	subwfb	(change_pass@i_578+1)^0,f,c
  6533   000BB6  5A49               	subwfb	(change_pass@i_578+2)^0,f,c
  6534   000BB8  5A4A               	subwfb	(change_pass@i_578+3)^0,f,c
  6535   000BBA  2847               	incf	change_pass@i_578^0,w,c
  6536   000BBC  E10A               	bnz	u3061
  6537   000BBE  2848               	incf	(change_pass@i_578+1)^0,w,c
  6538   000BC0  E108               	bnz	u3061
  6539   000BC2  2849               	incf	(change_pass@i_578+2)^0,w,c
  6540   000BC4  E106               	bnz	u3061
  6541   000BC6  284A               	incf	(change_pass@i_578+3)^0,w,c
  6542   000BC8  A4D8               	btfss	status,2,c
  6543   000BCA  EFE9  F005         	goto	u3061
  6544   000BCE  EFEB  F005         	goto	u3060
  6545   000BD2                     u3061:
  6546   000BD2  EFD8  F005         	goto	l3580
  6547   000BD6                     u3060:
  6548   000BD6                     l3582:
  6549                           
  6550                           ;change_password.c: 88:             main_f = 2;
  6551   000BD6  0E02               	movlw	2
  6552   000BD8  6E2B               	movwf	_main_f^0,c
  6553                           
  6554                           ;change_password.c: 89:         }
  6555   000BDA  EF2F  F006         	goto	l716
  6556   000BDE                     l3584:
  6557                           
  6558                           ;change_password.c: 91:         {;change_password.c: 92:             clcd_print("CHANGE 
      +                          PASSWORD ",(0x80 + (0)));
  6559   000BDE  0E2C               	movlw	low STR_51
  6560   000BE0  6E37               	movwf	clcd_print@data^0,c
  6561   000BE2  0E2F               	movlw	high STR_51
  6562   000BE4  6E38               	movwf	(clcd_print@data+1)^0,c
  6563   000BE6  0E80               	movlw	128
  6564   000BE8  6E39               	movwf	clcd_print@addr^0,c
  6565   000BEA  EC0C  F00D         	call	_clcd_print	;wreg free
  6566                           
  6567                           ;change_password.c: 93:             clcd_print(" SUCCESSFULLY   ",(0xC0 + (0)));
  6568   000BEE  0E1B               	movlw	low STR_54
  6569   000BF0  6E37               	movwf	clcd_print@data^0,c
  6570   000BF2  0E2F               	movlw	high STR_54
  6571   000BF4  6E38               	movwf	(clcd_print@data+1)^0,c
  6572   000BF6  0EC0               	movlw	192
  6573   000BF8  6E39               	movwf	clcd_print@addr^0,c
  6574   000BFA  EC0C  F00D         	call	_clcd_print	;wreg free
  6575   000BFE                     
  6576                           ;change_password.c: 95:             cp_f = 1;
  6577   000BFE  0E01               	movlw	1
  6578   000C00  6E25               	movwf	_cp_f^0,c
  6579   000C02                     
  6580                           ;change_password.c: 96:             char prev_i = i;
  6581   000C02  C01A  F04F         	movff	_i,change_pass@prev_i
  6582   000C06                     
  6583                           ;change_password.c: 97:             i = 10;
  6584   000C06  0E00               	movlw	0
  6585   000C08  6E1B               	movwf	(_i+1)^0,c
  6586   000C0A  0E0A               	movlw	10
  6587   000C0C  6E1A               	movwf	_i^0,c
  6588   000C0E                     
  6589                           ;change_password.c: 98:             store_event();
  6590   000C0E  EC85  F00A         	call	_store_event	;wreg free
  6591   000C12                     
  6592                           ;change_password.c: 99:             i = prev_i;
  6593   000C12  C04F  F01A         	movff	change_pass@prev_i,_i
  6594   000C16  6A1B               	clrf	(_i+1)^0,c
  6595   000C18                     
  6596                           ;change_password.c: 100:             pass_f = index1 = index2 = 0;
  6597   000C18  0E00               	movlw	0
  6598   000C1A  6E20               	movwf	change_pass@index2^0,c
  6599   000C1C  C020  F021         	movff	change_pass@index2,change_pass@index1
  6600   000C20  C021  F01F         	movff	change_pass@index1,change_pass@pass_f
  6601   000C24                     
  6602                           ;change_password.c: 101:             for(unsigned long int i = 500000;i--;);
  6603   000C24  0E20               	movlw	32
  6604   000C26  6E4B               	movwf	change_pass@i_583^0,c
  6605   000C28  0EA1               	movlw	161
  6606   000C2A  6E4C               	movwf	(change_pass@i_583+1)^0,c
  6607   000C2C  0E07               	movlw	7
  6608   000C2E  6E4D               	movwf	(change_pass@i_583+2)^0,c
  6609   000C30  0E00               	movlw	0
  6610   000C32  6E4E               	movwf	(change_pass@i_583+3)^0,c
  6611   000C34                     l3602:
  6612   000C34  064B               	decf	change_pass@i_583^0,f,c
  6613   000C36  0E00               	movlw	0
  6614   000C38  5A4C               	subwfb	(change_pass@i_583+1)^0,f,c
  6615   000C3A  5A4D               	subwfb	(change_pass@i_583+2)^0,f,c
  6616   000C3C  5A4E               	subwfb	(change_pass@i_583+3)^0,f,c
  6617   000C3E  284B               	incf	change_pass@i_583^0,w,c
  6618   000C40  E10A               	bnz	u3071
  6619   000C42  284C               	incf	(change_pass@i_583+1)^0,w,c
  6620   000C44  E108               	bnz	u3071
  6621   000C46  284D               	incf	(change_pass@i_583+2)^0,w,c
  6622   000C48  E106               	bnz	u3071
  6623   000C4A  284E               	incf	(change_pass@i_583+3)^0,w,c
  6624   000C4C  A4D8               	btfss	status,2,c
  6625   000C4E  EF2B  F006         	goto	u3071
  6626   000C52  EF2D  F006         	goto	u3070
  6627   000C56                     u3071:
  6628   000C56  EF1A  F006         	goto	l3602
  6629   000C5A                     u3070:
  6630   000C5A  EFEB  F005         	goto	l3582
  6631   000C5E                     l716:
  6632   000C5E  0012               	return		;funcret
  6633   000C60                     __end_of_change_pass:
  6634                           	callstack 0
  6635                           
  6636 ;; *************** function _store_event *****************
  6637 ;; Defined at:
  6638 ;;		line 13 in file "store_event.c"
  6639 ;; Parameters:    Size  Location     Type
  6640 ;;		None
  6641 ;; Auto vars:     Size  Location     Type
  6642 ;;  i               2   14[COMRAM] unsigned int 
  6643 ;; Return value:  Size  Location     Type
  6644 ;;                  1    wreg      void 
  6645 ;; Registers used:
  6646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6647 ;; Tracked objects:
  6648 ;;		On entry : 0/0
  6649 ;;		On exit  : 0/0
  6650 ;;		Unchanged: 0/0
  6651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6652 ;;      Params:         0       0       0       0       0       0       0
  6653 ;;      Locals:         2       0       0       0       0       0       0
  6654 ;;      Temps:          2       0       0       0       0       0       0
  6655 ;;      Totals:         4       0       0       0       0       0       0
  6656 ;;Total ram usage:        4 bytes
  6657 ;; Hardware stack levels used: 1
  6658 ;; Hardware stack levels required when called: 4
  6659 ;; This function calls:
  6660 ;;		___lwdiv
  6661 ;;		___lwmod
  6662 ;;		_write_external_eeprom
  6663 ;; This function is called by:
  6664 ;;		_dashboard
  6665 ;;		_display_event
  6666 ;;		_download_log
  6667 ;;		_change_pass
  6668 ;; This function uses a non-reentrant model
  6669 ;;
  6670                           
  6671                           	psect	text34
  6672   00150A                     __ptext34:
  6673                           	callstack 0
  6674   00150A                     _store_event:
  6675                           	callstack 25
  6676   00150A                     
  6677                           ;store_event.c: 15:         arr[0]=time[0];
  6678   00150A  C02C  F060         	movff	_time,_arr
  6679                           
  6680                           ;store_event.c: 16:         arr[1]=time[1];
  6681   00150E  C02D  F061         	movff	_time+1,_arr+1
  6682                           
  6683                           ;store_event.c: 17:         arr[2]=time[3];
  6684   001512  C02F  F062         	movff	_time+3,_arr+2
  6685                           
  6686                           ;store_event.c: 18:         arr[3]=time[4];
  6687   001516  C030  F063         	movff	_time+4,_arr+3
  6688                           
  6689                           ;store_event.c: 19:         arr[4]=time[6];
  6690   00151A  C032  F064         	movff	_time+6,_arr+4
  6691                           
  6692                           ;store_event.c: 20:         arr[5]=time[7];
  6693   00151E  C033  F065         	movff	_time+7,_arr+5
  6694   001522                     
  6695                           ;store_event.c: 21:         arr[6]=event[i][0];
  6696   001522  501A               	movf	_i^0,w,c
  6697   001524  0D02               	mullw	2
  6698   001526  50F3               	movf	243,w,c
  6699   001528  0F83               	addlw	low _event
  6700   00152A  6ED9               	movwf	fsr2l,c
  6701   00152C  6ADA               	clrf	fsr2h,c
  6702   00152E  CFDE FFF6          	movff	postinc2,tblptrl
  6703   001532  CFDD FFF7          	movff	postdec2,tblptrh
  6704   001536                     	if	0	;tblptru may be non-zero
  6705   001536                     	endif
  6706   001536                     	if	0	;tblptru may be non-zero
  6707   001536                     	endif
  6708   001536  0008               	tblrd		*
  6709   001538  CFF5 F066          	movff	tablat,_arr+6
  6710                           
  6711                           ;store_event.c: 22:         arr[7]=event[i][1];
  6712   00153C  501A               	movf	_i^0,w,c
  6713   00153E  0D02               	mullw	2
  6714   001540  50F3               	movf	243,w,c
  6715   001542  0F83               	addlw	low _event
  6716   001544  6ED9               	movwf	fsr2l,c
  6717   001546  6ADA               	clrf	fsr2h,c
  6718   001548  CFDE F041          	movff	postinc2,??_store_event
  6719   00154C  CFDD F042          	movff	postdec2,??_store_event+1
  6720   001550  0E01               	movlw	1
  6721   001552  2641               	addwf	??_store_event^0,f,c
  6722   001554  0E00               	movlw	0
  6723   001556  2242               	addwfc	(??_store_event+1)^0,f,c
  6724   001558  C041  FFF6         	movff	??_store_event,tblptrl
  6725   00155C  C042  FFF7         	movff	??_store_event+1,tblptrh
  6726   001560                     	if	0	;tblptru may be non-zero
  6727   001560                     	endif
  6728   001560                     	if	0	;tblptru may be non-zero
  6729   001560                     	endif
  6730   001560  0008               	tblrd		*
  6731   001562  CFF5 F067          	movff	tablat,_arr+7
  6732   001566                     
  6733                           ;store_event.c: 23:         arr[8]=((speed/10)+48);
  6734   001566  C01C  F035         	movff	_speed,___lwdiv@dividend
  6735   00156A  C01D  F036         	movff	_speed+1,___lwdiv@dividend+1
  6736   00156E  0E00               	movlw	0
  6737   001570  6E38               	movwf	(___lwdiv@divisor+1)^0,c
  6738   001572  0E0A               	movlw	10
  6739   001574  6E37               	movwf	___lwdiv@divisor^0,c
  6740   001576  EC9C  F00C         	call	___lwdiv	;wreg free
  6741   00157A  5035               	movf	?___lwdiv^0,w,c
  6742   00157C  0F30               	addlw	48
  6743   00157E  0100               	movlb	0	; () banked
  6744   001580  6F68               	movwf	(_arr+8)& (0+255),b
  6745   001582                     
  6746                           ; BSR set to: 0
  6747                           ;store_event.c: 24:         arr[9]=((speed%10)+48);
  6748   001582  C01C  F03C         	movff	_speed,___lwmod@dividend
  6749   001586  C01D  F03D         	movff	_speed+1,___lwmod@dividend+1
  6750   00158A  0E00               	movlw	0
  6751   00158C  6E3F               	movwf	(___lwmod@divisor+1)^0,c
  6752   00158E  0E0A               	movlw	10
  6753   001590  6E3E               	movwf	___lwmod@divisor^0,c
  6754   001592  EC42  F00D         	call	___lwmod	;wreg free
  6755   001596  503C               	movf	?___lwmod^0,w,c
  6756   001598  0F30               	addlw	48
  6757   00159A  0100               	movlb	0	; () banked
  6758   00159C  6F69               	movwf	(_arr+9)& (0+255),b
  6759   00159E                     
  6760                           ; BSR set to: 0
  6761                           ;store_event.c: 26:     for(unsigned int i=0;i<10;i++)
  6762   00159E  0E00               	movlw	0
  6763   0015A0  6E44               	movwf	(store_event@i+1)^0,c
  6764   0015A2  0E00               	movlw	0
  6765   0015A4  6E43               	movwf	store_event@i^0,c
  6766   0015A6                     l2758:
  6767                           
  6768                           ;store_event.c: 27:     {;store_event.c: 28:         write_external_eeprom((lap*10)+i,ar
      +                          r[i]);
  6769   0015A6  5043               	movf	store_event@i^0,w,c
  6770   0015A8  0F60               	addlw	low _arr
  6771   0015AA  6ED9               	movwf	fsr2l,c
  6772   0015AC  6ADA               	clrf	fsr2h,c
  6773   0015AE  50DF               	movf	indf2,w,c
  6774   0015B0  6E36               	movwf	write_external_eeprom@data^0,c
  6775   0015B2  5024               	movf	_lap^0,w,c
  6776   0015B4  0D0A               	mullw	10
  6777   0015B6  50F3               	movf	243,w,c
  6778   0015B8  2443               	addwf	store_event@i^0,w,c
  6779   0015BA  EC3C  F00E         	call	_write_external_eeprom
  6780   0015BE                     
  6781                           ;store_event.c: 29:         if(i==9)
  6782   0015BE  0E09               	movlw	9
  6783   0015C0  1843               	xorwf	store_event@i^0,w,c
  6784   0015C2  1044               	iorwf	(store_event@i+1)^0,w,c
  6785   0015C4  A4D8               	btfss	status,2,c
  6786   0015C6  EFE7  F00A         	goto	u1851
  6787   0015CA  EFE9  F00A         	goto	u1850
  6788   0015CE                     u1851:
  6789   0015CE  EFEC  F00A         	goto	l2764
  6790   0015D2                     u1850:
  6791   0015D2                     
  6792                           ;store_event.c: 30:         {;store_event.c: 31:             lap++;
  6793   0015D2  2A24               	incf	_lap^0,f,c
  6794                           
  6795                           ;store_event.c: 32:         }
  6796   0015D4  EFFA  F00A         	goto	l2770
  6797   0015D8                     l2764:
  6798   0015D8  5044               	movf	(store_event@i+1)^0,w,c
  6799   0015DA  E109               	bnz	u1860
  6800   0015DC  0E0A               	movlw	10
  6801   0015DE  5C43               	subwf	store_event@i^0,w,c
  6802   0015E0  A0D8               	btfss	status,0,c
  6803   0015E2  EFF5  F00A         	goto	u1861
  6804   0015E6  EFF7  F00A         	goto	u1860
  6805   0015EA                     u1861:
  6806   0015EA  EFFA  F00A         	goto	l2770
  6807   0015EE                     u1860:
  6808   0015EE                     
  6809                           ;store_event.c: 34:         {;store_event.c: 35:             lap=0;
  6810   0015EE  0E00               	movlw	0
  6811   0015F0  6E24               	movwf	_lap^0,c
  6812   0015F2                     
  6813                           ;store_event.c: 36:             overflow++;
  6814   0015F2  2A23               	incf	_overflow^0,f,c
  6815   0015F4                     l2770:
  6816                           
  6817                           ;store_event.c: 38:     }
  6818   0015F4  4A43               	infsnz	store_event@i^0,f,c
  6819   0015F6  2A44               	incf	(store_event@i+1)^0,f,c
  6820   0015F8  5044               	movf	(store_event@i+1)^0,w,c
  6821   0015FA  E109               	bnz	u1870
  6822   0015FC  0E0A               	movlw	10
  6823   0015FE  5C43               	subwf	store_event@i^0,w,c
  6824   001600  A0D8               	btfss	status,0,c
  6825   001602  EF05  F00B         	goto	u1871
  6826   001606  EF07  F00B         	goto	u1870
  6827   00160A                     u1871:
  6828   00160A  EFD3  F00A         	goto	l2758
  6829   00160E                     u1870:
  6830   00160E  0012               	return		;funcret
  6831   001610                     __end_of_store_event:
  6832                           	callstack 0
  6833                           
  6834 ;; *************** function _write_external_eeprom *****************
  6835 ;; Defined at:
  6836 ;;		line 53 in file "eeprom.c"
  6837 ;; Parameters:    Size  Location     Type
  6838 ;;  address         1    wreg     unsigned char 
  6839 ;;  data            1    1[COMRAM] unsigned char 
  6840 ;; Auto vars:     Size  Location     Type
  6841 ;;  address         1    4[COMRAM] unsigned char 
  6842 ;;  i               2    2[COMRAM] int 
  6843 ;; Return value:  Size  Location     Type
  6844 ;;                  1    wreg      void 
  6845 ;; Registers used:
  6846 ;;		wreg, status,2, status,0, cstack
  6847 ;; Tracked objects:
  6848 ;;		On entry : 0/0
  6849 ;;		On exit  : 0/0
  6850 ;;		Unchanged: 0/0
  6851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6852 ;;      Params:         1       0       0       0       0       0       0
  6853 ;;      Locals:         3       0       0       0       0       0       0
  6854 ;;      Temps:          0       0       0       0       0       0       0
  6855 ;;      Totals:         4       0       0       0       0       0       0
  6856 ;;Total ram usage:        4 bytes
  6857 ;; Hardware stack levels used: 1
  6858 ;; Hardware stack levels required when called: 3
  6859 ;; This function calls:
  6860 ;;		_i2c_start
  6861 ;;		_i2c_stop
  6862 ;;		_i2c_write
  6863 ;; This function is called by:
  6864 ;;		_password
  6865 ;;		_store_event
  6866 ;; This function uses a non-reentrant model
  6867 ;;
  6868                           
  6869                           	psect	text35
  6870   001C78                     __ptext35:
  6871                           	callstack 0
  6872   001C78                     _write_external_eeprom:
  6873                           	callstack 26
  6874                           
  6875                           ;incstack = 0
  6876                           ;write_external_eeprom@address stored from wreg
  6877   001C78  6E39               	movwf	write_external_eeprom@address^0,c
  6878   001C7A                     
  6879                           ;eeprom.c: 53: void write_external_eeprom(unsigned char address, unsigned char data);eep
      +                          rom.c: 54: {;eeprom.c: 55:  i2c_start();
  6880   001C7A  EC61  F00F         	call	_i2c_start	;wreg free
  6881   001C7E                     
  6882                           ;eeprom.c: 56:  i2c_write(0xA0);
  6883   001C7E  0EA0               	movlw	160
  6884   001C80  EC4F  F00F         	call	_i2c_write
  6885   001C84                     
  6886                           ;eeprom.c: 57:  i2c_write(address);
  6887   001C84  5039               	movf	write_external_eeprom@address^0,w,c
  6888   001C86  EC4F  F00F         	call	_i2c_write
  6889   001C8A                     
  6890                           ;eeprom.c: 58:  i2c_write(data);
  6891   001C8A  5036               	movf	write_external_eeprom@data^0,w,c
  6892   001C8C  EC4F  F00F         	call	_i2c_write
  6893   001C90                     
  6894                           ;eeprom.c: 59:  i2c_stop();
  6895   001C90  EC5D  F00F         	call	_i2c_stop	;wreg free
  6896   001C94                     
  6897                           ;eeprom.c: 60:     for(int i=3000;i--;);
  6898   001C94  0E0B               	movlw	11
  6899   001C96  6E38               	movwf	(write_external_eeprom@i+1)^0,c
  6900   001C98  0EB8               	movlw	184
  6901   001C9A  6E37               	movwf	write_external_eeprom@i^0,c
  6902   001C9C                     l2686:
  6903   001C9C  0637               	decf	write_external_eeprom@i^0,f,c
  6904   001C9E  A0D8               	btfss	status,0,c
  6905   001CA0  0638               	decf	(write_external_eeprom@i+1)^0,f,c
  6906   001CA2  2837               	incf	write_external_eeprom@i^0,w,c
  6907   001CA4  E106               	bnz	u1751
  6908   001CA6  2838               	incf	(write_external_eeprom@i+1)^0,w,c
  6909   001CA8  A4D8               	btfss	status,2,c
  6910   001CAA  EF59  F00E         	goto	u1751
  6911   001CAE  EF5B  F00E         	goto	u1750
  6912   001CB2                     u1751:
  6913   001CB2  EF4E  F00E         	goto	l2686
  6914   001CB6                     u1750:
  6915   001CB6  0012               	return		;funcret
  6916   001CB8                     __end_of_write_external_eeprom:
  6917                           	callstack 0
  6918                           
  6919 ;; *************** function _i2c_write *****************
  6920 ;; Defined at:
  6921 ;;		line 63 in file "i2c.c"
  6922 ;; Parameters:    Size  Location     Type
  6923 ;;  data            1    wreg     unsigned char 
  6924 ;; Auto vars:     Size  Location     Type
  6925 ;;  data            1    0[COMRAM] unsigned char 
  6926 ;; Return value:  Size  Location     Type
  6927 ;;                  1    wreg      void 
  6928 ;; Registers used:
  6929 ;;		wreg, cstack
  6930 ;; Tracked objects:
  6931 ;;		On entry : 0/0
  6932 ;;		On exit  : 0/0
  6933 ;;		Unchanged: 0/0
  6934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6935 ;;      Params:         0       0       0       0       0       0       0
  6936 ;;      Locals:         1       0       0       0       0       0       0
  6937 ;;      Temps:          0       0       0       0       0       0       0
  6938 ;;      Totals:         1       0       0       0       0       0       0
  6939 ;;Total ram usage:        1 bytes
  6940 ;; Hardware stack levels used: 1
  6941 ;; Hardware stack levels required when called: 2
  6942 ;; This function calls:
  6943 ;;		_i2c_idle
  6944 ;; This function is called by:
  6945 ;;		_write_ds1307
  6946 ;;		_read_ds1307
  6947 ;;		_write_external_eeprom
  6948 ;;		_read_external_eeprom
  6949 ;; This function uses a non-reentrant model
  6950 ;;
  6951                           
  6952                           	psect	text36
  6953   001E9E                     __ptext36:
  6954                           	callstack 0
  6955   001E9E                     _i2c_write:
  6956                           	callstack 26
  6957                           
  6958                           ;incstack = 0
  6959                           ;i2c_write@data stored from wreg
  6960   001E9E  6E35               	movwf	i2c_write@data^0,c
  6961   001EA0                     
  6962                           ;i2c.c: 63: void i2c_write(unsigned char data);i2c.c: 64: {;i2c.c: 65:  SSPBUF = data;
  6963   001EA0  C035  FFC9         	movff	i2c_write@data,4041	;volatile
  6964   001EA4                     
  6965                           ;i2c.c: 66:  i2c_idle();
  6966   001EA4  EC40  F00F         	call	_i2c_idle	;wreg free
  6967   001EA8  0012               	return		;funcret
  6968   001EAA                     __end_of_i2c_write:
  6969                           	callstack 0
  6970                           
  6971 ;; *************** function _i2c_stop *****************
  6972 ;; Defined at:
  6973 ;;		line 51 in file "i2c.c"
  6974 ;; Parameters:    Size  Location     Type
  6975 ;;		None
  6976 ;; Auto vars:     Size  Location     Type
  6977 ;;		None
  6978 ;; Return value:  Size  Location     Type
  6979 ;;                  1    wreg      void 
  6980 ;; Registers used:
  6981 ;;		cstack
  6982 ;; Tracked objects:
  6983 ;;		On entry : 0/0
  6984 ;;		On exit  : 0/0
  6985 ;;		Unchanged: 0/0
  6986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6987 ;;      Params:         0       0       0       0       0       0       0
  6988 ;;      Locals:         0       0       0       0       0       0       0
  6989 ;;      Temps:          0       0       0       0       0       0       0
  6990 ;;      Totals:         0       0       0       0       0       0       0
  6991 ;;Total ram usage:        0 bytes
  6992 ;; Hardware stack levels used: 1
  6993 ;; Hardware stack levels required when called: 2
  6994 ;; This function calls:
  6995 ;;		_i2c_idle
  6996 ;; This function is called by:
  6997 ;;		_write_ds1307
  6998 ;;		_read_ds1307
  6999 ;;		_write_external_eeprom
  7000 ;;		_read_external_eeprom
  7001 ;; This function uses a non-reentrant model
  7002 ;;
  7003                           
  7004                           	psect	text37
  7005   001EBA                     __ptext37:
  7006                           	callstack 0
  7007   001EBA                     _i2c_stop:
  7008                           	callstack 26
  7009   001EBA                     
  7010                           ;i2c.c: 53:  PEN = 1;
  7011   001EBA  84C5               	bsf	4037,2,c	;volatile
  7012   001EBC                     
  7013                           ;i2c.c: 54:  i2c_idle();
  7014   001EBC  EC40  F00F         	call	_i2c_idle	;wreg free
  7015   001EC0  0012               	return		;funcret
  7016   001EC2                     __end_of_i2c_stop:
  7017                           	callstack 0
  7018                           
  7019 ;; *************** function _i2c_start *****************
  7020 ;; Defined at:
  7021 ;;		line 45 in file "i2c.c"
  7022 ;; Parameters:    Size  Location     Type
  7023 ;;		None
  7024 ;; Auto vars:     Size  Location     Type
  7025 ;;		None
  7026 ;; Return value:  Size  Location     Type
  7027 ;;                  1    wreg      void 
  7028 ;; Registers used:
  7029 ;;		cstack
  7030 ;; Tracked objects:
  7031 ;;		On entry : 0/0
  7032 ;;		On exit  : 0/0
  7033 ;;		Unchanged: 0/0
  7034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7035 ;;      Params:         0       0       0       0       0       0       0
  7036 ;;      Locals:         0       0       0       0       0       0       0
  7037 ;;      Temps:          0       0       0       0       0       0       0
  7038 ;;      Totals:         0       0       0       0       0       0       0
  7039 ;;Total ram usage:        0 bytes
  7040 ;; Hardware stack levels used: 1
  7041 ;; Hardware stack levels required when called: 2
  7042 ;; This function calls:
  7043 ;;		_i2c_idle
  7044 ;; This function is called by:
  7045 ;;		_write_ds1307
  7046 ;;		_read_ds1307
  7047 ;;		_write_external_eeprom
  7048 ;;		_read_external_eeprom
  7049 ;; This function uses a non-reentrant model
  7050 ;;
  7051                           
  7052                           	psect	text38
  7053   001EC2                     __ptext38:
  7054                           	callstack 0
  7055   001EC2                     _i2c_start:
  7056                           	callstack 26
  7057   001EC2                     
  7058                           ;i2c.c: 47:  SEN = 1;
  7059   001EC2  80C5               	bsf	4037,0,c	;volatile
  7060   001EC4                     
  7061                           ;i2c.c: 48:  i2c_idle();
  7062   001EC4  EC40  F00F         	call	_i2c_idle	;wreg free
  7063   001EC8  0012               	return		;funcret
  7064   001ECA                     __end_of_i2c_start:
  7065                           	callstack 0
  7066                           
  7067 ;; *************** function _i2c_idle *****************
  7068 ;; Defined at:
  7069 ;;		line 31 in file "i2c.c"
  7070 ;; Parameters:    Size  Location     Type
  7071 ;;		None
  7072 ;; Auto vars:     Size  Location     Type
  7073 ;;		None
  7074 ;; Return value:  Size  Location     Type
  7075 ;;                  1    wreg      void 
  7076 ;; Registers used:
  7077 ;;		None
  7078 ;; Tracked objects:
  7079 ;;		On entry : 0/0
  7080 ;;		On exit  : 0/0
  7081 ;;		Unchanged: 0/0
  7082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7083 ;;      Params:         0       0       0       0       0       0       0
  7084 ;;      Locals:         0       0       0       0       0       0       0
  7085 ;;      Temps:          0       0       0       0       0       0       0
  7086 ;;      Totals:         0       0       0       0       0       0       0
  7087 ;;Total ram usage:        0 bytes
  7088 ;; Hardware stack levels used: 1
  7089 ;; Hardware stack levels required when called: 1
  7090 ;; This function calls:
  7091 ;;		Nothing
  7092 ;; This function is called by:
  7093 ;;		_i2c_start
  7094 ;;		_i2c_stop
  7095 ;;		_i2c_rep_start
  7096 ;;		_i2c_write
  7097 ;;		_i2c_rx_mode
  7098 ;; This function uses a non-reentrant model
  7099 ;;
  7100                           
  7101                           	psect	text39
  7102   001E80                     __ptext39:
  7103                           	callstack 0
  7104   001E80                     _i2c_idle:
  7105                           	callstack 26
  7106   001E80                     l412:
  7107   001E80  A69E               	btfss	3998,3,c	;volatile
  7108   001E82  EF45  F00F         	goto	u1711
  7109   001E86  EF47  F00F         	goto	u1710
  7110   001E8A                     u1711:
  7111   001E8A  EF40  F00F         	goto	l412
  7112   001E8E                     u1710:
  7113   001E8E                     
  7114                           ;i2c.c: 34:  SSPIF = 0;
  7115   001E8E  969E               	bcf	3998,3,c	;volatile
  7116   001E90  0012               	return		;funcret
  7117   001E92                     __end_of_i2c_idle:
  7118                           	callstack 0
  7119                           
  7120 ;; *************** function ___lwmod *****************
  7121 ;; Defined at:
  7122 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwmod.c"
  7123 ;; Parameters:    Size  Location     Type
  7124 ;;  dividend        2    7[COMRAM] unsigned int 
  7125 ;;  divisor         2    9[COMRAM] unsigned int 
  7126 ;; Auto vars:     Size  Location     Type
  7127 ;;  counter         1   11[COMRAM] unsigned char 
  7128 ;; Return value:  Size  Location     Type
  7129 ;;                  2    7[COMRAM] unsigned int 
  7130 ;; Registers used:
  7131 ;;		wreg, status,2, status,0
  7132 ;; Tracked objects:
  7133 ;;		On entry : 0/0
  7134 ;;		On exit  : 0/0
  7135 ;;		Unchanged: 0/0
  7136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7137 ;;      Params:         4       0       0       0       0       0       0
  7138 ;;      Locals:         1       0       0       0       0       0       0
  7139 ;;      Temps:          0       0       0       0       0       0       0
  7140 ;;      Totals:         5       0       0       0       0       0       0
  7141 ;;Total ram usage:        5 bytes
  7142 ;; Hardware stack levels used: 1
  7143 ;; Hardware stack levels required when called: 1
  7144 ;; This function calls:
  7145 ;;		Nothing
  7146 ;; This function is called by:
  7147 ;;		_display_speed
  7148 ;;		_password
  7149 ;;		_store_event
  7150 ;;		_save_exit
  7151 ;; This function uses a non-reentrant model
  7152 ;;
  7153                           
  7154                           	psect	text40
  7155   001A84                     __ptext40:
  7156                           	callstack 0
  7157   001A84                     ___lwmod:
  7158                           	callstack 27
  7159   001A84  503E               	movf	___lwmod@divisor^0,w,c
  7160   001A86  103F               	iorwf	(___lwmod@divisor+1)^0,w,c
  7161   001A88  B4D8               	btfsc	status,2,c
  7162   001A8A  EF49  F00D         	goto	u1791
  7163   001A8E  EF4B  F00D         	goto	u1790
  7164   001A92                     u1791:
  7165   001A92  EF6F  F00D         	goto	l1288
  7166   001A96                     u1790:
  7167   001A96  0E01               	movlw	1
  7168   001A98  6E40               	movwf	___lwmod@counter^0,c
  7169   001A9A  EF53  F00D         	goto	l2726
  7170   001A9E                     l2724:
  7171   001A9E  90D8               	bcf	status,0,c
  7172   001AA0  363E               	rlcf	___lwmod@divisor^0,f,c
  7173   001AA2  363F               	rlcf	(___lwmod@divisor+1)^0,f,c
  7174   001AA4  2A40               	incf	___lwmod@counter^0,f,c
  7175   001AA6                     l2726:
  7176   001AA6  AE3F               	btfss	(___lwmod@divisor+1)^0,7,c
  7177   001AA8  EF58  F00D         	goto	u1801
  7178   001AAC  EF5A  F00D         	goto	u1800
  7179   001AB0                     u1801:
  7180   001AB0  EF4F  F00D         	goto	l2724
  7181   001AB4                     u1800:
  7182   001AB4                     l2728:
  7183   001AB4  503E               	movf	___lwmod@divisor^0,w,c
  7184   001AB6  5C3C               	subwf	___lwmod@dividend^0,w,c
  7185   001AB8  503F               	movf	(___lwmod@divisor+1)^0,w,c
  7186   001ABA  583D               	subwfb	(___lwmod@dividend+1)^0,w,c
  7187   001ABC  A0D8               	btfss	status,0,c
  7188   001ABE  EF63  F00D         	goto	u1811
  7189   001AC2  EF65  F00D         	goto	u1810
  7190   001AC6                     u1811:
  7191   001AC6  EF69  F00D         	goto	l2732
  7192   001ACA                     u1810:
  7193   001ACA  503E               	movf	___lwmod@divisor^0,w,c
  7194   001ACC  5E3C               	subwf	___lwmod@dividend^0,f,c
  7195   001ACE  503F               	movf	(___lwmod@divisor+1)^0,w,c
  7196   001AD0  5A3D               	subwfb	(___lwmod@dividend+1)^0,f,c
  7197   001AD2                     l2732:
  7198   001AD2  90D8               	bcf	status,0,c
  7199   001AD4  323F               	rrcf	(___lwmod@divisor+1)^0,f,c
  7200   001AD6  323E               	rrcf	___lwmod@divisor^0,f,c
  7201   001AD8  2E40               	decfsz	___lwmod@counter^0,f,c
  7202   001ADA  EF5A  F00D         	goto	l2728
  7203   001ADE                     l1288:
  7204   001ADE  C03C  F03C         	movff	___lwmod@dividend,?___lwmod
  7205   001AE2  C03D  F03D         	movff	___lwmod@dividend+1,?___lwmod+1
  7206   001AE6  0012               	return		;funcret
  7207   001AE8                     __end_of___lwmod:
  7208                           	callstack 0
  7209                           
  7210 ;; *************** function ___lwdiv *****************
  7211 ;; Defined at:
  7212 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  7213 ;; Parameters:    Size  Location     Type
  7214 ;;  dividend        2    0[COMRAM] unsigned int 
  7215 ;;  divisor         2    2[COMRAM] unsigned int 
  7216 ;; Auto vars:     Size  Location     Type
  7217 ;;  quotient        2    4[COMRAM] unsigned int 
  7218 ;;  counter         1    6[COMRAM] unsigned char 
  7219 ;; Return value:  Size  Location     Type
  7220 ;;                  2    0[COMRAM] unsigned int 
  7221 ;; Registers used:
  7222 ;;		wreg, status,2, status,0
  7223 ;; Tracked objects:
  7224 ;;		On entry : 0/0
  7225 ;;		On exit  : 0/0
  7226 ;;		Unchanged: 0/0
  7227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7228 ;;      Params:         4       0       0       0       0       0       0
  7229 ;;      Locals:         3       0       0       0       0       0       0
  7230 ;;      Temps:          0       0       0       0       0       0       0
  7231 ;;      Totals:         7       0       0       0       0       0       0
  7232 ;;Total ram usage:        7 bytes
  7233 ;; Hardware stack levels used: 1
  7234 ;; Hardware stack levels required when called: 1
  7235 ;; This function calls:
  7236 ;;		Nothing
  7237 ;; This function is called by:
  7238 ;;		_display_speed
  7239 ;;		_password
  7240 ;;		_store_event
  7241 ;;		_save_exit
  7242 ;; This function uses a non-reentrant model
  7243 ;;
  7244                           
  7245                           	psect	text41
  7246   001938                     __ptext41:
  7247                           	callstack 0
  7248   001938                     ___lwdiv:
  7249                           	callstack 27
  7250   001938  0E00               	movlw	0
  7251   00193A  6E3A               	movwf	(___lwdiv@quotient+1)^0,c
  7252   00193C  0E00               	movlw	0
  7253   00193E  6E39               	movwf	___lwdiv@quotient^0,c
  7254   001940  5037               	movf	___lwdiv@divisor^0,w,c
  7255   001942  1038               	iorwf	(___lwdiv@divisor+1)^0,w,c
  7256   001944  B4D8               	btfsc	status,2,c
  7257   001946  EFA7  F00C         	goto	u1761
  7258   00194A  EFA9  F00C         	goto	u1760
  7259   00194E                     u1761:
  7260   00194E  EFD1  F00C         	goto	l1278
  7261   001952                     u1760:
  7262   001952  0E01               	movlw	1
  7263   001954  6E3B               	movwf	___lwdiv@counter^0,c
  7264   001956  EFB1  F00C         	goto	l2706
  7265   00195A                     l2704:
  7266   00195A  90D8               	bcf	status,0,c
  7267   00195C  3637               	rlcf	___lwdiv@divisor^0,f,c
  7268   00195E  3638               	rlcf	(___lwdiv@divisor+1)^0,f,c
  7269   001960  2A3B               	incf	___lwdiv@counter^0,f,c
  7270   001962                     l2706:
  7271   001962  AE38               	btfss	(___lwdiv@divisor+1)^0,7,c
  7272   001964  EFB6  F00C         	goto	u1771
  7273   001968  EFB8  F00C         	goto	u1770
  7274   00196C                     u1771:
  7275   00196C  EFAD  F00C         	goto	l2704
  7276   001970                     u1770:
  7277   001970                     l2708:
  7278   001970  90D8               	bcf	status,0,c
  7279   001972  3639               	rlcf	___lwdiv@quotient^0,f,c
  7280   001974  363A               	rlcf	(___lwdiv@quotient+1)^0,f,c
  7281   001976  5037               	movf	___lwdiv@divisor^0,w,c
  7282   001978  5C35               	subwf	___lwdiv@dividend^0,w,c
  7283   00197A  5038               	movf	(___lwdiv@divisor+1)^0,w,c
  7284   00197C  5836               	subwfb	(___lwdiv@dividend+1)^0,w,c
  7285   00197E  A0D8               	btfss	status,0,c
  7286   001980  EFC4  F00C         	goto	u1781
  7287   001984  EFC6  F00C         	goto	u1780
  7288   001988                     u1781:
  7289   001988  EFCB  F00C         	goto	l2716
  7290   00198C                     u1780:
  7291   00198C  5037               	movf	___lwdiv@divisor^0,w,c
  7292   00198E  5E35               	subwf	___lwdiv@dividend^0,f,c
  7293   001990  5038               	movf	(___lwdiv@divisor+1)^0,w,c
  7294   001992  5A36               	subwfb	(___lwdiv@dividend+1)^0,f,c
  7295   001994  8039               	bsf	___lwdiv@quotient^0,0,c
  7296   001996                     l2716:
  7297   001996  90D8               	bcf	status,0,c
  7298   001998  3238               	rrcf	(___lwdiv@divisor+1)^0,f,c
  7299   00199A  3237               	rrcf	___lwdiv@divisor^0,f,c
  7300   00199C  2E3B               	decfsz	___lwdiv@counter^0,f,c
  7301   00199E  EFB8  F00C         	goto	l2708
  7302   0019A2                     l1278:
  7303   0019A2  C039  F035         	movff	___lwdiv@quotient,?___lwdiv
  7304   0019A6  C03A  F036         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7305   0019AA  0012               	return		;funcret
  7306   0019AC                     __end_of___lwdiv:
  7307                           	callstack 0
  7308                           
  7309 ;; *************** function _clcd_print *****************
  7310 ;; Defined at:
  7311 ;;		line 66 in file "clcd.c"
  7312 ;; Parameters:    Size  Location     Type
  7313 ;;  data            2    2[COMRAM] PTR const unsigned char 
  7314 ;;		 -> STR_60(3), STR_59(9), STR_58(3), STR_57(9), 
  7315 ;;		 -> STR_56(3), STR_55(9), STR_54(17), STR_53(17), 
  7316 ;;		 -> STR_52(17), STR_51(17), STR_50(2), STR_49(2), 
  7317 ;;		 -> STR_48(2), STR_47(2), STR_46(18), STR_45(2), 
  7318 ;;		 -> STR_44(2), STR_43(2), STR_42(2), STR_41(19), 
  7319 ;;		 -> STR_40(13), STR_39(17), STR_38(18), STR_37(19), 
  7320 ;;		 -> STR_35(2), STR_34(2), STR_33(2), STR_32(2), 
  7321 ;;		 -> STR_31(2), STR_30(5), STR_29(14), STR_28(3), 
  7322 ;;		 -> STR_27(3), STR_26(25), STR_25(17), STR_24(19), 
  7323 ;;		 -> STR_23(23), STR_22(16), STR_21(8), STR_20(5), 
  7324 ;;		 -> STR_19(16), STR_18(13), STR_17(15), STR_16(2), 
  7325 ;;		 -> STR_15(2), STR_14(2), STR_13(2), STR_12(15), 
  7326 ;;		 -> time(9), STR_11(3), STR_10(3), STR_9(5), 
  7327 ;;		 -> STR_8(3), STR_7(3), STR_6(3), STR_5(3), 
  7328 ;;		 -> STR_4(3), STR_3(3), STR_2(3), STR_1(3), 
  7329 ;;  addr            1    4[COMRAM] unsigned char 
  7330 ;; Auto vars:     Size  Location     Type
  7331 ;;		None
  7332 ;; Return value:  Size  Location     Type
  7333 ;;                  1    wreg      void 
  7334 ;; Registers used:
  7335 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7336 ;; Tracked objects:
  7337 ;;		On entry : 0/0
  7338 ;;		On exit  : 0/0
  7339 ;;		Unchanged: 0/0
  7340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7341 ;;      Params:         3       0       0       0       0       0       0
  7342 ;;      Locals:         0       0       0       0       0       0       0
  7343 ;;      Temps:          0       0       0       0       0       0       0
  7344 ;;      Totals:         3       0       0       0       0       0       0
  7345 ;;Total ram usage:        3 bytes
  7346 ;; Hardware stack levels used: 1
  7347 ;; Hardware stack levels required when called: 2
  7348 ;; This function calls:
  7349 ;;		_clcd_write
  7350 ;; This function is called by:
  7351 ;;		_dashboard
  7352 ;;		_display_event
  7353 ;;		_password
  7354 ;;		_menu
  7355 ;;		_view_log
  7356 ;;		_download_log
  7357 ;;		_clear_log
  7358 ;;		_change_pass
  7359 ;;		_settime
  7360 ;; This function uses a non-reentrant model
  7361 ;;
  7362                           
  7363                           	psect	text42
  7364   001A18                     __ptext42:
  7365                           	callstack 0
  7366   001A18                     _clcd_print:
  7367                           	callstack 27
  7368   001A18                     
  7369                           ;clcd.c: 66: void clcd_print(const unsigned char *data, unsigned char addr);clcd.c: 67: 
      +                          {;clcd.c: 68:  clcd_write(addr, 0);
  7370   001A18  0E00               	movlw	0
  7371   001A1A  6E35               	movwf	clcd_write@control_bit^0,c
  7372   001A1C  5039               	movf	clcd_print@addr^0,w,c
  7373   001A1E  EC5C  F00E         	call	_clcd_write
  7374                           
  7375                           ;clcd.c: 69:  while (*data != '\0')
  7376   001A22  EF29  F00D         	goto	l2742
  7377   001A26                     l2738:
  7378                           
  7379                           ;clcd.c: 70:  {;clcd.c: 71:   clcd_write(*data++, 1);
  7380   001A26  0E01               	movlw	1
  7381   001A28  6E35               	movwf	clcd_write@control_bit^0,c
  7382   001A2A  C037  FFF6         	movff	clcd_print@data,tblptrl
  7383   001A2E  C038  FFF7         	movff	clcd_print@data+1,tblptrh
  7384   001A32  6AF8               	clrf	tblptru,c
  7385   001A34  0E05               	movlw	(high __ramtop+-1)
  7386   001A36  64F7               	cpfsgt	tblptrh,c
  7387   001A38  D003               	bra	u1827
  7388   001A3A  0008               	tblrd		*
  7389   001A3C  50F5               	movf	tablat,w,c
  7390   001A3E  D005               	bra	u1820
  7391   001A40                     u1827:
  7392   001A40  CFF6 FFE9          	movff	tblptrl,fsr0l
  7393   001A44  CFF7 FFEA          	movff	tblptrh,fsr0h
  7394   001A48  50EF               	movf	indf0,w,c
  7395   001A4A                     u1820:
  7396   001A4A  EC5C  F00E         	call	_clcd_write
  7397   001A4E  4A37               	infsnz	clcd_print@data^0,f,c
  7398   001A50  2A38               	incf	(clcd_print@data+1)^0,f,c
  7399   001A52                     l2742:
  7400                           
  7401                           ;clcd.c: 69:  while (*data != '\0')
  7402   001A52  C037  FFF6         	movff	clcd_print@data,tblptrl
  7403   001A56  C038  FFF7         	movff	clcd_print@data+1,tblptrh
  7404   001A5A  6AF8               	clrf	tblptru,c
  7405   001A5C  0E05               	movlw	(high __ramtop+-1)
  7406   001A5E  64F7               	cpfsgt	tblptrh,c
  7407   001A60  D003               	bra	u1837
  7408   001A62  0008               	tblrd		*
  7409   001A64  50F5               	movf	tablat,w,c
  7410   001A66  D005               	bra	u1830
  7411   001A68                     u1837:
  7412   001A68  CFF6 FFE9          	movff	tblptrl,fsr0l
  7413   001A6C  CFF7 FFEA          	movff	tblptrh,fsr0h
  7414   001A70  50EF               	movf	indf0,w,c
  7415   001A72                     u1830:
  7416   001A72  0900               	iorlw	0
  7417   001A74  A4D8               	btfss	status,2,c
  7418   001A76  EF3F  F00D         	goto	u1841
  7419   001A7A  EF41  F00D         	goto	u1840
  7420   001A7E                     u1841:
  7421   001A7E  EF13  F00D         	goto	l2738
  7422   001A82                     u1840:
  7423   001A82  0012               	return		;funcret
  7424   001A84                     __end_of_clcd_print:
  7425                           	callstack 0
  7426                           
  7427 ;; *************** function _clcd_write *****************
  7428 ;; Defined at:
  7429 ;;		line 12 in file "clcd.c"
  7430 ;; Parameters:    Size  Location     Type
  7431 ;;  byte            1    wreg     unsigned char 
  7432 ;;  control_bit     1    0[COMRAM] unsigned char 
  7433 ;; Auto vars:     Size  Location     Type
  7434 ;;  byte            1    1[COMRAM] unsigned char 
  7435 ;; Return value:  Size  Location     Type
  7436 ;;                  1    wreg      void 
  7437 ;; Registers used:
  7438 ;;		wreg
  7439 ;; Tracked objects:
  7440 ;;		On entry : 0/0
  7441 ;;		On exit  : 0/0
  7442 ;;		Unchanged: 0/0
  7443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7444 ;;      Params:         1       0       0       0       0       0       0
  7445 ;;      Locals:         1       0       0       0       0       0       0
  7446 ;;      Temps:          0       0       0       0       0       0       0
  7447 ;;      Totals:         2       0       0       0       0       0       0
  7448 ;;Total ram usage:        2 bytes
  7449 ;; Hardware stack levels used: 1
  7450 ;; Hardware stack levels required when called: 1
  7451 ;; This function calls:
  7452 ;;		Nothing
  7453 ;; This function is called by:
  7454 ;;		_dashboard
  7455 ;;		_init_clcd
  7456 ;;		_clcd_print
  7457 ;;		_clcd_putch
  7458 ;;		_password
  7459 ;;		_menu
  7460 ;;		_view_log
  7461 ;;		_change_pass
  7462 ;; This function uses a non-reentrant model
  7463 ;;
  7464                           
  7465                           	psect	text43
  7466   001CB8                     __ptext43:
  7467                           	callstack 0
  7468   001CB8                     _clcd_write:
  7469                           	callstack 28
  7470                           
  7471                           ;incstack = 0
  7472                           ;clcd_write@byte stored from wreg
  7473   001CB8  6E36               	movwf	clcd_write@byte^0,c
  7474   001CBA                     
  7475                           ;clcd.c: 12: void clcd_write(unsigned char byte, unsigned char control_bit);clcd.c: 13: 
      +                          {;clcd.c: 14:  RC1 = control_bit;
  7476   001CBA  B035               	btfsc	clcd_write@control_bit^0,0,c
  7477   001CBC  EF62  F00E         	goto	u1721
  7478   001CC0  EF65  F00E         	goto	u1720
  7479   001CC4                     u1721:
  7480   001CC4  8282               	bsf	3970,1,c	;volatile
  7481   001CC6  EF66  F00E         	goto	u1735
  7482   001CCA                     u1720:
  7483   001CCA  9282               	bcf	3970,1,c	;volatile
  7484   001CCC                     u1735:
  7485   001CCC                     
  7486                           ;clcd.c: 15:  PORTD = byte;
  7487   001CCC  C036  FF83         	movff	clcd_write@byte,3971	;volatile
  7488   001CD0                     
  7489                           ;clcd.c: 18:  RC2 = 1;
  7490   001CD0  8482               	bsf	3970,2,c	;volatile
  7491   001CD2                     
  7492                           ;clcd.c: 19:  RC2 = 0;
  7493   001CD2  9482               	bcf	3970,2,c	;volatile
  7494   001CD4                     
  7495                           ;clcd.c: 21:  TRISD7 = 0xFF;
  7496   001CD4  8E95               	bsf	3989,7,c	;volatile
  7497   001CD6                     
  7498                           ;clcd.c: 22:  RC0 = 1;
  7499   001CD6  8082               	bsf	3970,0,c	;volatile
  7500   001CD8                     
  7501                           ;clcd.c: 23:  RC1 = 0;
  7502   001CD8  9282               	bcf	3970,1,c	;volatile
  7503   001CDA                     l2668:
  7504                           
  7505                           ;clcd.c: 26:  {;clcd.c: 27:   RC2 = 1;
  7506   001CDA  8482               	bsf	3970,2,c	;volatile
  7507   001CDC                     
  7508                           ;clcd.c: 28:   RC2 = 0;
  7509   001CDC  9482               	bcf	3970,2,c	;volatile
  7510   001CDE                     
  7511                           ;clcd.c: 29:  } while (RD7);
  7512   001CDE  BE83               	btfsc	3971,7,c	;volatile
  7513   001CE0  EF74  F00E         	goto	u1741
  7514   001CE4  EF76  F00E         	goto	u1740
  7515   001CE8                     u1741:
  7516   001CE8  EF6D  F00E         	goto	l2668
  7517   001CEC                     u1740:
  7518   001CEC                     
  7519                           ;clcd.c: 31:  RC0 = 0;
  7520   001CEC  9082               	bcf	3970,0,c	;volatile
  7521                           
  7522                           ;clcd.c: 32:  TRISD7 = 0x00;
  7523   001CEE  9E95               	bcf	3989,7,c	;volatile
  7524   001CF0  0012               	return		;funcret
  7525   001CF2                     __end_of_clcd_write:
  7526                           	callstack 0
  7527                           
  7528 ;; *************** function _isr *****************
  7529 ;; Defined at:
  7530 ;;		line 13 in file "isr.c"
  7531 ;; Parameters:    Size  Location     Type
  7532 ;;		None
  7533 ;; Auto vars:     Size  Location     Type
  7534 ;;		None
  7535 ;; Return value:  Size  Location     Type
  7536 ;;                  1    wreg      void 
  7537 ;; Registers used:
  7538 ;;		wreg, status,2, status,0
  7539 ;; Tracked objects:
  7540 ;;		On entry : 0/0
  7541 ;;		On exit  : 0/0
  7542 ;;		Unchanged: 0/0
  7543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7544 ;;      Params:         0       0       0       0       0       0       0
  7545 ;;      Locals:         0       0       0       0       0       0       0
  7546 ;;      Temps:          0       0       0       0       0       0       0
  7547 ;;      Totals:         0       0       0       0       0       0       0
  7548 ;;Total ram usage:        0 bytes
  7549 ;; Hardware stack levels used: 1
  7550 ;; This function calls:
  7551 ;;		Nothing
  7552 ;; This function is called by:
  7553 ;;		Interrupt level 2
  7554 ;; This function uses a non-reentrant model
  7555 ;;
  7556                           
  7557                           	psect	intcode
  7558   000008                     __pintcode:
  7559                           	callstack 0
  7560   000008                     _isr:
  7561                           	callstack 24
  7562                           
  7563                           ;incstack = 0
  7564   000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7565   00000A  ED74  F00D         	call	int_func,f	;refresh shadow registers
  7566                           
  7567                           	psect	intcode_body
  7568   001AE8                     __pintcode_body:
  7569                           	callstack 24
  7570   001AE8                     int_func:
  7571                           	callstack 24
  7572   001AE8  0006               	pop		; remove dummy address from shadow register refresh
  7573   001AEA                     
  7574                           ;isr.c: 15:  static unsigned long int count;;isr.c: 17:  if (TMR0IF)
  7575   001AEA  A4F2               	btfss	4082,2,c	;volatile
  7576   001AEC  EF7A  F00D         	goto	i2u321_41
  7577   001AF0  EF7C  F00D         	goto	i2u321_40
  7578   001AF4                     i2u321_41:
  7579   001AF4  EFA3  F00D         	goto	i2l351
  7580   001AF8                     i2u321_40:
  7581   001AF8                     
  7582                           ;isr.c: 18:  {;isr.c: 19:   TMR0 = TMR0 + 8;
  7583   001AF8  0E08               	movlw	8
  7584   001AFA  24D6               	addwf	214,w,c	;volatile
  7585   001AFC  6ED6               	movwf	214,c	;volatile
  7586   001AFE  0E00               	movlw	0
  7587   001B00  20D7               	addwfc	215,w,c	;volatile
  7588   001B02  6ED7               	movwf	215,c	;volatile
  7589                           
  7590                           ;isr.c: 21:   if (count++ == 20000)
  7591   001B04  0E01               	movlw	1
  7592   001B06  0100               	movlb	0	; () banked
  7593   001B08  276F               	addwf	isr@count& (0+255),f,b
  7594   001B0A  0E00               	movlw	0
  7595   001B0C  2370               	addwfc	(isr@count+1)& (0+255),f,b
  7596   001B0E  2371               	addwfc	(isr@count+2)& (0+255),f,b
  7597   001B10  2372               	addwfc	(isr@count+3)& (0+255),f,b
  7598   001B12  0E21               	movlw	33
  7599   001B14  196F               	xorwf	isr@count& (0+255),w,b
  7600   001B16  E109               	bnz	i2u322_41
  7601   001B18  0E4E               	movlw	78
  7602   001B1A  1970               	xorwf	(isr@count+1)& (0+255),w,b
  7603   001B1C  1171               	iorwf	(isr@count+2)& (0+255),w,b
  7604   001B1E  1172               	iorwf	(isr@count+3)& (0+255),w,b
  7605   001B20  A4D8               	btfss	status,2,c
  7606   001B22  EF95  F00D         	goto	i2u322_41
  7607   001B26  EF97  F00D         	goto	i2u322_40
  7608   001B2A                     i2u322_41:
  7609   001B2A  EFA2  F00D         	goto	i2l3674
  7610   001B2E                     i2u322_40:
  7611   001B2E                     
  7612                           ; BSR set to: 0
  7613                           ;isr.c: 22:   {;isr.c: 23:    count = 0;
  7614   001B2E  0E00               	movlw	0
  7615   001B30  6F6F               	movwf	isr@count& (0+255),b
  7616   001B32  0E00               	movlw	0
  7617   001B34  6F70               	movwf	(isr@count+1)& (0+255),b
  7618   001B36  0E00               	movlw	0
  7619   001B38  6F71               	movwf	(isr@count+2)& (0+255),b
  7620   001B3A  0E00               	movlw	0
  7621   001B3C  6F72               	movwf	(isr@count+3)& (0+255),b
  7622   001B3E                     
  7623                           ; BSR set to: 0
  7624                           ;isr.c: 24:             sec--;
  7625   001B3E  0616               	decf	_sec^0,f,c
  7626   001B40  A0D8               	btfss	status,0,c
  7627   001B42  0617               	decf	(_sec+1)^0,f,c
  7628   001B44                     i2l3674:
  7629                           
  7630                           ; BSR set to: 0
  7631                           ;isr.c: 26:   TMR0IF = 0;
  7632   001B44  94F2               	bcf	4082,2,c	;volatile
  7633   001B46                     i2l351:
  7634   001B46  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7635   001B48  0011               	retfie		f
  7636   001B4A                     __end_of_isr:
  7637                           	callstack 0
  7638                           
  7639                           	psect	rparam
  7640   000000                     
  7641                           	psect	temp
  7642   00005A                     btemp:
  7643                           	callstack 0
  7644   00005A                     	ds	1
  7645   000000                     int$flags	set	btemp
  7646   000000                     wtemp8	set	btemp+1
  7647   000000                     ttemp5	set	btemp+1
  7648   000000                     ttemp6	set	btemp+4
  7649   000000                     ttemp7	set	btemp+8
  7650                           
  7651                           	psect	idloc
  7652                           
  7653                           ;Config register IDLOC0 @ 0x200000
  7654                           ;	unspecified, using default values
  7655   200000                     	org	2097152
  7656   200000  FF                 	db	255
  7657                           
  7658                           ;Config register IDLOC1 @ 0x200001
  7659                           ;	unspecified, using default values
  7660   200001                     	org	2097153
  7661   200001  FF                 	db	255
  7662                           
  7663                           ;Config register IDLOC2 @ 0x200002
  7664                           ;	unspecified, using default values
  7665   200002                     	org	2097154
  7666   200002  FF                 	db	255
  7667                           
  7668                           ;Config register IDLOC3 @ 0x200003
  7669                           ;	unspecified, using default values
  7670   200003                     	org	2097155
  7671   200003  FF                 	db	255
  7672                           
  7673                           ;Config register IDLOC4 @ 0x200004
  7674                           ;	unspecified, using default values
  7675   200004                     	org	2097156
  7676   200004  FF                 	db	255
  7677                           
  7678                           ;Config register IDLOC5 @ 0x200005
  7679                           ;	unspecified, using default values
  7680   200005                     	org	2097157
  7681   200005  FF                 	db	255
  7682                           
  7683                           ;Config register IDLOC6 @ 0x200006
  7684                           ;	unspecified, using default values
  7685   200006                     	org	2097158
  7686   200006  FF                 	db	255
  7687                           
  7688                           ;Config register IDLOC7 @ 0x200007
  7689                           ;	unspecified, using default values
  7690   200007                     	org	2097159
  7691   200007  FF                 	db	255
  7692                           
  7693                           	psect	config
  7694                           
  7695                           ; Padding undefined space
  7696   300000                     	org	3145728
  7697   300000  FF                 	db	255
  7698                           
  7699                           ;Config register CONFIG1H @ 0x300001
  7700                           ;	unspecified, using default values
  7701                           ;	Oscillator Selection bits
  7702                           ;	OSC = 0x7, unprogrammed default
  7703                           ;	Fail-Safe Clock Monitor Enable bit
  7704                           ;	FCMEN = 0x0, unprogrammed default
  7705                           ;	Internal/External Oscillator Switchover bit
  7706                           ;	IESO = 0x0, unprogrammed default
  7707   300001                     	org	3145729
  7708   300001  07                 	db	7
  7709                           
  7710                           ;Config register CONFIG2L @ 0x300002
  7711                           ;	unspecified, using default values
  7712                           ;	Power-up Timer Enable bit
  7713                           ;	PWRT = 0x1, unprogrammed default
  7714                           ;	Brown-out Reset Enable bits
  7715                           ;	BOREN = 0x3, unprogrammed default
  7716                           ;	Brown-out Reset Voltage bits
  7717                           ;	BORV = 0x3, unprogrammed default
  7718   300002                     	org	3145730
  7719   300002  1F                 	db	31
  7720                           
  7721                           ;Config register CONFIG2H @ 0x300003
  7722                           ;	unspecified, using default values
  7723                           ;	Watchdog Timer Enable bit
  7724                           ;	WDT = 0x1, unprogrammed default
  7725                           ;	Watchdog Timer Postscale Select bits
  7726                           ;	WDTPS = 0xF, unprogrammed default
  7727   300003                     	org	3145731
  7728   300003  1F                 	db	31
  7729                           
  7730                           ; Padding undefined space
  7731   300004                     	org	3145732
  7732   300004  FF                 	db	255
  7733                           
  7734                           ;Config register CONFIG3H @ 0x300005
  7735                           ;	unspecified, using default values
  7736                           ;	PORTB A/D Enable bit
  7737                           ;	PBADEN = 0x1, unprogrammed default
  7738                           ;	Low-Power Timer 1 Oscillator Enable bit
  7739                           ;	LPT1OSC = 0x0, unprogrammed default
  7740                           ;	MCLR Pin Enable bit
  7741                           ;	MCLRE = 0x1, unprogrammed default
  7742   300005                     	org	3145733
  7743   300005  82                 	db	130
  7744                           
  7745                           ;Config register CONFIG4L @ 0x300006
  7746                           ;	unspecified, using default values
  7747                           ;	Stack Full/Underflow Reset Enable bit
  7748                           ;	STVREN = 0x1, unprogrammed default
  7749                           ;	Single-Supply ICSP Enable bit
  7750                           ;	LVP = 0x1, unprogrammed default
  7751                           ;	Boot Block Size Select bit
  7752                           ;	BBSIZ = 0x0, unprogrammed default
  7753                           ;	Extended Instruction Set Enable bit
  7754                           ;	XINST = 0x0, unprogrammed default
  7755                           ;	Background Debugger Enable bit
  7756                           ;	DEBUG = 0x1, unprogrammed default
  7757   300006                     	org	3145734
  7758   300006  85                 	db	133
  7759                           
  7760                           ; Padding undefined space
  7761   300007                     	org	3145735
  7762   300007  FF                 	db	255
  7763                           
  7764                           ;Config register CONFIG5L @ 0x300008
  7765                           ;	unspecified, using default values
  7766                           ;	Code Protection bit
  7767                           ;	CP0 = 0x1, unprogrammed default
  7768                           ;	Code Protection bit
  7769                           ;	CP1 = 0x1, unprogrammed default
  7770                           ;	Code Protection bit
  7771                           ;	CP2 = 0x1, unprogrammed default
  7772                           ;	Code Protection bit
  7773                           ;	CP3 = 0x1, unprogrammed default
  7774   300008                     	org	3145736
  7775   300008  0F                 	db	15
  7776                           
  7777                           ;Config register CONFIG5H @ 0x300009
  7778                           ;	unspecified, using default values
  7779                           ;	Boot Block Code Protection bit
  7780                           ;	CPB = 0x1, unprogrammed default
  7781                           ;	Data EEPROM Code Protection bit
  7782                           ;	CPD = 0x1, unprogrammed default
  7783   300009                     	org	3145737
  7784   300009  C0                 	db	192
  7785                           
  7786                           ;Config register CONFIG6L @ 0x30000A
  7787                           ;	unspecified, using default values
  7788                           ;	Write Protection bit
  7789                           ;	WRT0 = 0x1, unprogrammed default
  7790                           ;	Write Protection bit
  7791                           ;	WRT1 = 0x1, unprogrammed default
  7792                           ;	Write Protection bit
  7793                           ;	WRT2 = 0x1, unprogrammed default
  7794                           ;	Write Protection bit
  7795                           ;	WRT3 = 0x1, unprogrammed default
  7796   30000A                     	org	3145738
  7797   30000A  0F                 	db	15
  7798                           
  7799                           ;Config register CONFIG6H @ 0x30000B
  7800                           ;	unspecified, using default values
  7801                           ;	Configuration Register Write Protection bit
  7802                           ;	WRTC = 0x1, unprogrammed default
  7803                           ;	Boot Block Write Protection bit
  7804                           ;	WRTB = 0x1, unprogrammed default
  7805                           ;	Data EEPROM Write Protection bit
  7806                           ;	WRTD = 0x1, unprogrammed default
  7807   30000B                     	org	3145739
  7808   30000B  E0                 	db	224
  7809                           
  7810                           ;Config register CONFIG7L @ 0x30000C
  7811                           ;	unspecified, using default values
  7812                           ;	Table Read Protection bit
  7813                           ;	EBTR0 = 0x1, unprogrammed default
  7814                           ;	Table Read Protection bit
  7815                           ;	EBTR1 = 0x1, unprogrammed default
  7816                           ;	Table Read Protection bit
  7817                           ;	EBTR2 = 0x1, unprogrammed default
  7818                           ;	Table Read Protection bit
  7819                           ;	EBTR3 = 0x1, unprogrammed default
  7820   30000C                     	org	3145740
  7821   30000C  0F                 	db	15
  7822                           
  7823                           ;Config register CONFIG7H @ 0x30000D
  7824                           ;	unspecified, using default values
  7825                           ;	Boot Block Table Read Protection bit
  7826                           ;	EBTRB = 0x1, unprogrammed default
  7827   30000D                     	org	3145741
  7828   30000D  40                 	db	64
  7829                           tosu	equ	0xFFF
  7830                           tosh	equ	0xFFE
  7831                           tosl	equ	0xFFD
  7832                           stkptr	equ	0xFFC
  7833                           pclatu	equ	0xFFB
  7834                           pclath	equ	0xFFA
  7835                           pcl	equ	0xFF9
  7836                           tblptru	equ	0xFF8
  7837                           tblptrh	equ	0xFF7
  7838                           tblptrl	equ	0xFF6
  7839                           tablat	equ	0xFF5
  7840                           prodh	equ	0xFF4
  7841                           prodl	equ	0xFF3
  7842                           indf0	equ	0xFEF
  7843                           postinc0	equ	0xFEE
  7844                           postdec0	equ	0xFED
  7845                           preinc0	equ	0xFEC
  7846                           plusw0	equ	0xFEB
  7847                           fsr0h	equ	0xFEA
  7848                           fsr0l	equ	0xFE9
  7849                           wreg	equ	0xFE8
  7850                           indf1	equ	0xFE7
  7851                           postinc1	equ	0xFE6
  7852                           postdec1	equ	0xFE5
  7853                           preinc1	equ	0xFE4
  7854                           plusw1	equ	0xFE3
  7855                           fsr1h	equ	0xFE2
  7856                           fsr1l	equ	0xFE1
  7857                           bsr	equ	0xFE0
  7858                           indf2	equ	0xFDF
  7859                           postinc2	equ	0xFDE
  7860                           postdec2	equ	0xFDD
  7861                           preinc2	equ	0xFDC
  7862                           plusw2	equ	0xFDB
  7863                           fsr2h	equ	0xFDA
  7864                           fsr2l	equ	0xFD9
  7865                           status	equ	0xFD8

Data Sizes:
    Strings     386
    Constant    0
    Data        28
    BSS         87
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      89
    BANK0           160      0      61
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    clcd_print@data	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[3]), STR_10(CODE[3]), STR_11(CODE[3]), STR_12(CODE[15]), 
		 -> STR_13(CODE[2]), STR_14(CODE[2]), STR_15(CODE[2]), STR_16(CODE[2]), 
		 -> STR_17(CODE[15]), STR_18(CODE[13]), STR_19(CODE[16]), STR_2(CODE[3]), 
		 -> STR_20(CODE[5]), STR_21(CODE[8]), STR_22(CODE[16]), STR_23(CODE[23]), 
		 -> STR_24(CODE[19]), STR_25(CODE[17]), STR_26(CODE[25]), STR_27(CODE[3]), 
		 -> STR_28(CODE[3]), STR_29(CODE[14]), STR_3(CODE[3]), STR_30(CODE[5]), 
		 -> STR_31(CODE[2]), STR_32(CODE[2]), STR_33(CODE[2]), STR_34(CODE[2]), 
		 -> STR_35(CODE[2]), STR_37(CODE[19]), STR_38(CODE[18]), STR_39(CODE[17]), 
		 -> STR_4(CODE[3]), STR_40(CODE[13]), STR_41(CODE[19]), STR_42(CODE[2]), 
		 -> STR_43(CODE[2]), STR_44(CODE[2]), STR_45(CODE[2]), STR_46(CODE[18]), 
		 -> STR_47(CODE[2]), STR_48(CODE[2]), STR_49(CODE[2]), STR_5(CODE[3]), 
		 -> STR_50(CODE[2]), STR_51(CODE[17]), STR_52(CODE[17]), STR_53(CODE[17]), 
		 -> STR_54(CODE[17]), STR_55(CODE[9]), STR_56(CODE[3]), STR_57(CODE[9]), 
		 -> STR_58(CODE[3]), STR_59(CODE[9]), STR_6(CODE[3]), STR_60(CODE[3]), 
		 -> STR_7(CODE[3]), STR_8(CODE[3]), STR_9(CODE[5]), time(COMRAM[9]), 

    event	PTR unsigned char [8] size(2) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), STR_4(CODE[3]), 
		 -> STR_5(CODE[3]), STR_6(CODE[3]), STR_7(CODE[3]), STR_8(CODE[3]), 

    logs	PTR unsigned char [5] size(2) Largest target is 25
		 -> STR_22(CODE[16]), STR_23(CODE[23]), STR_24(CODE[19]), STR_25(CODE[17]), 
		 -> STR_26(CODE[25]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_36(CODE[3]), 


Critical Paths under _main in COMRAM

    _main->_change_pass
    _main->_password
    _view_log->_clcd_putch
    _settime->_save_exit
    _save_exit->_write_ds1307
    _password->_clcd_putch
    _menu->_clcd_putch
    _inti_config->_init_ds1307
    _init_ds1307->_write_ds1307
    _write_ds1307->___lwmod
    _init_clcd->_clcd_write
    _download_log->_store_event
    _read_external_eeprom->_i2c_write
    _puts->_putch
    _dashboard->_display_event
    _display_time->_read_ds1307
    _read_ds1307->_i2c_write
    _display_speed->_clcd_putch
    _clcd_putch->___lwmod
    _display_event->_store_event
    _clear_log->_clcd_print
    _change_pass->_store_event
    _store_event->___lwmod
    _write_external_eeprom->_i2c_write
    ___lwmod->___lwdiv
    _clcd_print->_clcd_write

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  138289
                                             30 COMRAM     5     5      0
                        _change_pass
                          _clear_log
                          _dashboard
                       _download_log
                        _inti_config
                               _menu
                           _password
                      _read_switches
                            _settime
                           _view_log
 ---------------------------------------------------------------------------------
 (1) _view_log                                             6     6      0   14892
                                             14 COMRAM     6     6      0
                         _clcd_print
                         _clcd_putch
                         _clcd_write
               _read_external_eeprom
 ---------------------------------------------------------------------------------
 (1) _settime                                              3     3      0   13737
                                             17 COMRAM     3     3      0
                         _clcd_print
                          _save_exit
 ---------------------------------------------------------------------------------
 (2) _save_exit                                            3     3      0    3440
                                             14 COMRAM     3     3      0
                            ___lwdiv
                            ___lwmod
                        _read_ds1307
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (1) _read_switches                                        1     1      0      30
                                              0 COMRAM     1     1      0
                           _scan_key
 ---------------------------------------------------------------------------------
 (2) _scan_key                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _password                                            16    16      0   18360
                                             14 COMRAM    16    16      0
                            ___lwdiv
                            ___lwmod
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                        _init_timer0
               _read_external_eeprom
              _write_external_eeprom
 ---------------------------------------------------------------------------------
 (2) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _menu                                                 1     1      0   14847
                                             14 COMRAM     1     1      0
                         _clcd_print
                         _clcd_putch
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _inti_config                                          0     0      0    2450
                           _init_adc
                          _init_clcd
                        _init_ds1307
                           _init_i2c
                 _init_matrix_keypad
 ---------------------------------------------------------------------------------
 (2) _init_matrix_keypad                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_i2c                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_ds1307                                          1     1      0     886
                                             14 COMRAM     1     1      0
                        _read_ds1307
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (3) _write_ds1307                                         2     1      1     750
                                             12 COMRAM     2     1      1
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            1     1      0    1564
                                              2 COMRAM     1     1      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _download_log                                         7     7      0   13904
                                             16 COMRAM     6     6      0
                         _clcd_print
                          _init_uart
                              _putch
                               _puts
               _read_external_eeprom
                        _store_event
 ---------------------------------------------------------------------------------
 (2) _read_external_eeprom                                 2     2      0      67
                                              1 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _puts                                                 2     0      2     143
                                              1 COMRAM     2     0      2
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_uart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dashboard                                            1     1      0   34352
                                             17 COMRAM     1     1      0
                         _clcd_print
                         _clcd_write
                      _display_event
                      _display_speed
                       _display_time
                        _store_event
 ---------------------------------------------------------------------------------
 (2) _display_time                                         0     0      0      67
                        _read_ds1307
 ---------------------------------------------------------------------------------
 (3) _read_ds1307                                          2     2      0      67
                                              1 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_rep_start                                        0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                             0     0      0       0
                         _i2c_no_ack
                        _i2c_rx_mode
 ---------------------------------------------------------------------------------
 (4) _i2c_rx_mode                                          0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_no_ack                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_speed                                        2     2      0    5721
                                             14 COMRAM     2     2      0
                            ___lwdiv
                            ___lwmod
                         _clcd_putch
                           _read_adc
 ---------------------------------------------------------------------------------
 (3) _read_adc                                             7     5      2      45
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) _clcd_putch                                           2     1      1    3052
                                             12 COMRAM     2     1      1
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                         _clcd_write
               _read_external_eeprom (ARG)
 ---------------------------------------------------------------------------------
 (2) _display_event                                        1     1      0   13533
                                             16 COMRAM     1     1      0
                         _clcd_print
                        _store_event
 ---------------------------------------------------------------------------------
 (1) _clear_log                                            1     1      0   10165
                                              5 COMRAM     1     1      0
                         _clcd_print
 ---------------------------------------------------------------------------------
 (1) _change_pass                                         15    15      0   15235
                                             16 COMRAM    14    14      0
                         _clcd_print
                         _clcd_write
                        _store_event
 ---------------------------------------------------------------------------------
 (2) _store_event                                          4     4      0    3280
                                             12 COMRAM     4     4      0
                            ___lwdiv
                            ___lwmod
              _write_external_eeprom
 ---------------------------------------------------------------------------------
 (2) _write_external_eeprom                                4     3      1     545
                                              1 COMRAM     4     3      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_stop                                             0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_idle                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4    1223
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4    1378
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           3     0      3   10143
                                              2 COMRAM     3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_write                                           2     1      1    1564
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _change_pass
     _clcd_print
       _clcd_write
     _clcd_write
     _store_event
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _write_external_eeprom
         _i2c_start
           _i2c_idle
         _i2c_stop
           _i2c_idle
         _i2c_write
           _i2c_idle
   _clear_log
     _clcd_print
   _dashboard
     _clcd_print
     _clcd_write
     _display_event
       _clcd_print
       _store_event
     _display_speed
       ___lwdiv
       ___lwmod
       _clcd_putch
         ___lwdiv (ARG)
         ___lwmod (ARG)
         _clcd_write (ARG)
         _read_external_eeprom (ARG)
           _i2c_read
             _i2c_no_ack
             _i2c_rx_mode
               _i2c_idle
           _i2c_rep_start
             _i2c_idle
           _i2c_start
           _i2c_stop
           _i2c_write
       _read_adc
     _display_time
       _read_ds1307
         _i2c_read
         _i2c_rep_start
         _i2c_start
         _i2c_stop
         _i2c_write
     _store_event
   _download_log
     _clcd_print
     _init_uart
     _putch
     _puts
       _putch
     _read_external_eeprom
     _store_event
   _inti_config
     _init_adc
     _init_clcd
       _clcd_write
     _init_ds1307
       _read_ds1307
       _write_ds1307
         ___lwdiv (ARG)
         ___lwmod (ARG)
         _i2c_start (ARG)
         _i2c_stop (ARG)
         _i2c_write (ARG)
     _init_i2c
     _init_matrix_keypad
   _menu
     _clcd_print
     _clcd_putch
     _clcd_write
   _password
     ___lwdiv
     ___lwmod
     _clcd_print
     _clcd_putch
     _clcd_write
     _init_timer0
     _read_external_eeprom
     _write_external_eeprom
   _read_switches
     _scan_key
   _settime
     _clcd_print
     _save_exit
       ___lwdiv
       ___lwmod
       _read_ds1307
       _write_ds1307
   _view_log
     _clcd_print
     _clcd_putch
     _clcd_write
     _read_external_eeprom

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      27        0.0%
BITBIGSFRl         281      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      3D       5       38.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     23      59       1       94.7%
BITBIGSFRhhhhhl     19      0       0      17        0.0%
BITBIGSFRhl          F      0       0      24        0.0%
BITBIGSFRhhhhhh      D      0       0      16        0.0%
BITBIGSFRhhhhhl      B      0       0      18        0.0%
BITBIGSFRhhlhhl      9      0       0      21        0.0%
BITBIGSFRhhlhhh      8      0       0      20        0.0%
BITBIGSFRhhlhhh      7      0       0      19        0.0%
BITBIGSFRhhll        7      0       0      23        0.0%
BITBIGSFRhhlhl       2      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      96      26        0.0%
DATA                 0      0      96       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Jun 05 20:33:45 2024

                            _i 001A                              _j 0026          _write_external_eeprom 1C78  
               clcd_print@addr 0039                 clcd_print@data 0037                             l31 1E40  
                           l44 0F24                             l56 100C                             _GO 7E11  
                           _on 0029             _init_matrix_keypad 1E6E                            l101 1840  
                          l104 1A16                            l201 1C34                            l122 1710  
                          l220 1430                            l150 1CF0                            l214 1E7E  
                          l222 1444                            l127 18C0                            l232 14CA  
                          l153 17B8                            l225 1472                            l217 141C  
                          l162 1E14                            l234 14DE                            l226 14AE  
                          l218 1508                            l235 1506                            l227 1486  
                          l219 1458                            l412 1E80                            l308 0340  
                          l236 14F2                            l149 1CEC                            l229 149A  
                          l414 1E8E                            l422 1EC8                            l159 1A82  
                          l415 1E90                            l431 1EA8                            l319 0456  
                          l247 1936                            l440 1E9C                            l336 1E2A  
                          l425 1EC0                            l601 1E6C                            l409 1E56  
                          l434 1EB8                            l195 1DC4                            l371 1DE2  
                          l428 1EB0                            l437 1ECE                            l550 160E  
                          l198 1C08                            l374 1DA4                            l526 0E92  
                          l607 1D26                            l456 1CB6                            l368 1BEE  
                          l459 1D50                            l716 0C5E                            l492 1188  
                          l646 13F8                            l750 05EA                            l647 1400  
                          l488 1168                            l659 1C76                            l595 1D7A  
                          l598 1E5A                            _CKE 7E3E                            l784 12F0  
                          l779 0872                            _GIE 7F97                            _RC0 7C10  
                          _RC1 7C11                            _RC2 7C12                            _RD7 7C1F  
                          u300 1416                            u301 1412                            u310 142A  
                          u311 1426                            u400 14EC                            u320 143E  
                          u401 14E8                            u321 143A                            u410 1500  
                          u330 1452                            u411 14FC                            u331 144E  
                          u340 146C                            u341 1468                            u350 1480  
                          u351 147C                            u360 1494                            u440 18D4  
                          _PEN 7E2A                            u361 1490                            u441 18D0  
                          u370 14A8                            u450 18EA                            u371 14A4  
                          u451 18E6                            u380 14C4                            u460 18FA  
                          u381 14C0                            u461 18F6                            u390 14D8  
                          u470 1914                            u391 14D4                            u471 1910  
                          u480 192C                            u481 1928                            _SEN 7E28  
                          _PSA 7EAB                            _RX9 7D5E                            _SMP 7E3F  
                          _TX9 7D66                  ?_display_time 0035                            _WUE 7DC1  
                          _arr 0060                            _lap 0024                            _key 0028  
                          _min 0006                            _hrs 0008                            _sec 0016  
                          _isr 0008                 clcd_putch@addr 0041                 clcd_putch@data 0042  
                          wreg 0FE8            ?_init_matrix_keypad 0035                           l3000 1818  
                         l3002 181C                           l3010 0014                           l3004 1820  
                         l3100 027A                           l3020 0058                           l3012 0024  
                         l3006 1832                           l3110 02DA                           l3102 0296  
                         l3022 006A                           l3014 0050                           l3008 1836  
                         l3200 1146                           l3120 0336                           l3112 02E6  
                         l3104 02A8                           l3040 00A0                           l3024 006C  
                         l3210 1184                           l3202 114A                           l3130 0360  
                         l3122 0338                           l3114 02F6                           l3106 02BA  
                         l3050 0106                           l3042 00BC                           l3034 008A  
                         l3026 006E                           l3300 1340                           l3204 115C  
                         l3140 03F4                           l3132 0370                           l3124 0344  
                         l3116 0306                           l3108 02CA                           l3060 0172  
                         l3052 011C                           l3044 00C4                           l3036 009A  
                         l3028 007E                           l3220 0CA4                           l3212 0C62  
                         l1285 19AA                           l1278 19A2                           l3310 1372  
                         l3302 1352                           l3206 1164                           l3150 041C  
                         l3142 0406                           l3134 0390                           l3126 0348  
                         l3118 032C                           l3070 01CC                           l3062 0198  
                         l3054 013E                           l3046 00D4                           l3038 009C  
                         l3222 0CB4                           l3230 0CFE                           l3214 0C72  
                         l1295 1AE6                           l1288 1ADE                           l3320 13C2  
                         l3312 1382                           l3304 1358                           l1640 1DBA  
                         l3208 117A                           l3160 0452                           l3144 040A  
                         l3136 03C4                           l3128 0350                           l3152 0420  
                         l3080 020E                           l3072 01DE                           l3064 01AC  
                         l3056 0154                           l3048 00E4                           l1800 1494  
                         l3400 0648                           l3240 0D3E                           l3232 0D10  
                         l3224 0CC4                           l3216 0C82                           l3330 1C38  
                         l3322 13D2                           l3314 138E                           l3306 136A  
                         l1642 1DC2                           l3170 1056                           l3162 1016  
                         l3154 0432                           l3146 0414                           l3138 03E4  
                         l3082 0220                           l3074 01E8                           l3066 01B6  
                         l3058 016A                           l1810 14C4                           l3410 06A6  
                         l3402 0656                           l3250 0D7E                           l3242 0D42  
                         l3234 0D20                           l3226 0CCA                           l3218 0C92  
                         l2700 1940                           l3500 0962                           l3332 1C40  
                         l3324 13F8                           l3308 1370                           l3316 1390  
                         l3180 10A2                           l3172 1060                           l3164 1028  
                         l3156 0444                           l3148 0418                           l3084 022C  
                         l3076 01FA                           l3068 01BA                           l3420 06FE  
                         l3412 06CE                           l3404 065E                           l3340 045A  
                         l3260 0DD6                           l3252 0D8E                           l3244 0D52  
                         l3236 0D22                           l2710 1976                           l2702 1952  
                         l3510 0996                           l3502 0964                           l3334 1C50  
                         l3326 13F8                           l3318 13A2                           l1638 1DA6  
                         l3190 10EE                           l3174 1072                           l3182 10A8  
                         l3166 1032                           l3158 044E                           l3094 0248  
                         l3086 023E                           l3078 01FC                           l1822 14EC  
                         l1806 14A8                           l1910 18D4                           l3430 0734  
                         l3422 0702                           l3406 067A                           l3414 06D6  
                         l3350 04A6                           l3342 046C                           l3270 0E32  
                         l3262 0DEA                           l3254 0DA0                           l3246 0D62  
                         l3238 0D34                           l2712 198C                           l2704 195A  
                         l2720 1A84                           l2640 1EA0                           l3600 0C24  
                         l3520 09DA                           l3512 09A8                           l3504 0976  
                         l3336 1C60                           l3328 13FC                           l3280 12F2  
                         l2800 1DC8                           l1680 1E6E                           l3184 10BA  
                         l3192 10F2                           l3176 1084                           l3168 1046  
                         l3096 026A                           l3088 0240                           l1832 1506  
                         l1816 14D8                           l1912 18DA                           l3440 0792  
                         l3432 0752                           l3424 0712                           l3416 06E8  
                         l3408 0696                           l3360 0504                           l3352 04C4  
                         l3344 0470                           l3272 0E46                           l3264 0DFA  
                         l3256 0DB2                           l3248 0D72                           l2714 1994  
                         l2706 1962                           l2730 1ACA                           l2722 1A96  
                         l2634 1E80                           l2642 1EA4                           l3602 0C34  
                         l3530 0A5A                           l3522 09EA                           l3514 09B2  
                         l3506 0982                           l3338 1C72                           l2650 1EB4  
                         l2810 1E5A                           l3290 1302                           l3282 12F6  
                         l2802 1DCC                           l1690 1E4E                           l1682 1E76  
                         l3194 110E                           l3186 10CC                           l3178 1090  
                         l3098 0276                           l1914 18EA                           l1922 1904  
                         l3442 07AE                           l3450 07FA                           l3434 0760  
                         l3426 0718                           l3418 06F8                           l3370 056C  
                         l3362 0520                           l3354 04D2                           l3346 048C  
                         l3274 0E5A                           l3266 0E0E                           l3258 0DC2  
                         l3610 0EA0                           l2660 1CD2                           l2740 1A4E  
                         l2716 1996                           l2708 1970                           l2732 1AD2  
                         l2724 1A9E                           l2636 1EC2                           l2644 1EBA  
                         l3540 0AA6                           l3532 0A70                           l3524 0A0C  
                         l3508 0994                           l3516 09BA                           l2900 16A8  
                         l2652 1ECA                           l2812 1E68                           l3292 1312  
                         l3284 12FE                           l2820 171E                           l2804 1DD2  
                         l1692 1E50                           l1684 1E78                           l3196 112A  
                         l3188 10D8                           l1828 1500                           l1772 142A  
                         l1764 1402                           l1924 1914                           l1932 1934  
                         l1916 18FA                           l1908 18C4                           l3460 0836  
                         l3452 080C                           l3444 07CA                           l3436 077C  
                         l3428 0720                           l3380 05AA                           l3364 053C  
                         l3372 0574                           l3356 04EE                           l3348 0494  
                         l3276 0E6A                           l3268 0E22                           l3620 0EDA  
                         l3612 0EA8                           l2670 1CDC                           l2662 1CD4  
                         l2654 1CBA                           l2742 1A52                           l2718 199C  
                         l2734 1AD8                           l2726 1AA6                           l2638 1EC4  
                         l2646 1EBC                           l2750 1582                           l3550 0ADA  
                         l3542 0AA8                           l3534 0A78                           l3526 0A22  
                         l3518 09CA                           l3294 1322                           l2830 175A  
                         l2822 172E                           l2814 1712                           l2806 1DD8  
                         l1694 1E52                           l1686 1E42                           l3198 113C  
                         l1766 1416                           l1926 191C                           l3470 085C  
                         l3462 083C                           l3454 081C                           l3446 07DA  
                         l3438 078A                           l3390 05E2                           l3382 05BC  
                         l3374 0586                           l3366 054C                           l3358 04FC  
                         l3278 0E7E                           l3630 0F1C                           l3622 0EE0  
                         l3614 0EB8                           l3606 0E94                           l2672 1CDE  
                         l2664 1CD6                           l2656 1CCC                           l2736 1A18  
                         l2728 1AB4                           l2680 1C8A                           l2760 15BE  
                         l2752 159E                           l2744 150A                           l3544 0ABA  
                         l3536 0A8A                           l3528 0A44                           l3480 0896  
                         l2904 16BC                           l2912 16F4                           l2648 1EB2  
                         l2920 1D34                           l3296 1328                           l2840 1786  
                         l2832 1764                           l2824 1738                           l2816 1716  
                         l2808 1DDE                           l1696 1E54                           l1688 1E46  
                         l1784 1452                           l1928 192C                           l3472 086E  
                         l3456 0822                           l3448 07F2                           l3376 0596  
                         l3384 05C8                           l3464 0840                           l3368 0550  
                         l3392 05EE                           l3640 0F58                           l3624 0EEC  
                         l3616 0EBE                           l3608 0E98                           l2666 1CD8  
                         l2658 1CD0                           l2738 1A26                           l2682 1C90  
                         l2674 1C7A                           l2770 15F4                           l2762 15D2  
                         l2746 1522                           l3570 0B46                           l3546 0AC6  
                         l3538 0A94                           l3554 0AF0                           l3490 0916  
                         l3482 08A6                           l2906 16CE                           l2914 19AC  
                         l2690 1EAC                           l2922 1D3A                           l3298 133A  
                         l2842 178E                           l2834 176A                           l2826 1748  
                         l2818 171C                           l2850 1BA8                           l2930 1E16  
                         l1794 1480                           l1778 143E                           l3466 0852  
                         l3458 0826                           l3394 0600                           l3386 05CC  
                         l3378 0598                           l3650 0FA0                           l3642 0F6A  
                         l3634 0F34                           l3618 0EC2                           l3626 0EF4  
                         l2668 1CDA                           l2684 1C94                           l2676 1C7E  
                         l2772 15F8                           l2764 15D8                           l2748 1566  
                         l3580 0BB0                           l3572 0B62                           l3564 0B1C  
                         l3556 0B02                           l3548 0AD8                           l3492 092C  
                         l3484 08C8                           l3476 0876                           l2908 16E0  
                         l2780 1C2C                           l2692 1E92                           l2860 1842  
                         l2940 1D6E                           l2924 1D3E                           l2916 1D2A  
                         l2844 1798                           l2836 1774                           l2828 1752  
                         l2852 1BB0                           l2932 1E1E                           l1788 146C  
                         l3396 061E                           l3388 05DC                           l3660 0FE6  
                         l3652 0FB0                           l3644 0F74                           l3636 0F3E  
                         l3628 0F0A                           l2686 1C9C                           l2678 1C84  
                         l2766 15EE                           l2758 15A6                           l3590 0C02  
                         l3582 0BD6                           l3574 0B74                           l3566 0B3E  
                         l3558 0B14                           l3494 0934                           l3486 08DE  
                         l3478 0886                           l2774 1BF2                           l2694 1E9A  
                         l2790 1D88                           l2870 1894                           l2862 185A  
                         l2942 1D72                           l2950 1CF2                           l2926 1D4A  
                         l2918 1D2E                           l2846 17A6                           l2838 177C  
                         l2854 1BBC                           l2934 1E26                           l3398 062C  
                         l3662 0FF0                           l3654 0FB8                           l3646 0F86  
                         l3638 0F4E                           l2768 15F2                           l3592 0C06  
                         l3576 0B94                           l3584 0BDE                           l3568 0B42  
                         l3496 0946                           l3488 0900                           l2880 1624  
                         l2784 1E00                           l2776 1C06                           l2688 1EAA  
                         l2792 1D8E                           l2872 189E                           l2864 1868  
                         l2944 1D74                           l2952 1CF6                           l2848 17B0  
                         l2856 1BD0                           l2936 1E28                           l2960 11EC  
                         l3664 1002                           l3656 0FCA                           l3648 0F96  
                         l2698 1938                           l3594 0C0E                           l3586 0BFE  
                         l3578 0BA0                           l3498 0950                           l2890 166A  
                         l2882 1636                           l2778 1C16                           l2794 1D92  
                         l2786 1D7E                           l2874 18A6                           l2866 187E  
                         l2946 1D76                           l2938 1D52                           l2954 1D06  
                         l2858 1BDA                           l2970 12C6                           l2962 11F4  
                         l3658 0FD4                           l3596 0C12                           l3588 0BFE  
                         l2892 167C                           l2884 164C                           l2796 1D9E  
                         l2788 1D82                           l2876 18BC                           l2868 1890  
                         l2948 1D78                           l2956 1D0A                           l2980 1E2C  
                         l2972 12CE                           l2964 1200                           l3598 0C18  
                         l2894 168E                           l2886 1650                           l2878 1612  
                         l2990 17EC                           l2982 1E30                           l2974 12DA  
                         l2966 1242                           l2958 118C                           l2888 1658  
                         l2992 17F0                           l2984 1E34                           l2976 12EC  
                         l2968 1284                           l2898 1698                           l2994 17FE  
                         l2986 1E3C                           l2996 1804                           l2988 17BC  
                         l2998 1808                           _ADFM 7E07                           ?_isr 0035  
                         _ADON 7E10                           STR_1 2FEB                           STR_2 2FF1  
                         STR_3 2FE8                           STR_4 2FD9                           STR_5 2FDC  
                         STR_6 2FDF                           STR_7 2FE2                           STR_8 2FE5  
                         STR_9 2FD1                           _BRGH 7D62                           _CREN 7D5C  
                         _T0CS 7EAD                           u2000 1D26                           u2001 1D22  
                         u2010 12EC                           u2011 12E8                           u2020 1818  
                         u2100 0154                           u2021 1814                           u2101 0150  
                         u2030 1832                           u2110 0198                           u2031 182E  
                         u2111 0194                           u3000 0AEC                           u2200 0406  
                         u2120 01CC                           u2040 0024                           u3001 0AE8  
                         u2201 0402                           u2121 01C8                           u2041 0020  
                         u3010 0B02                           u2210 0432                           u2130 020E  
                         u2050 007E                           u3011 0AFE                           u2211 042E  
                         u2131 020A                           u2051 007A                           u3020 0B14  
                         u2300 113C                           u2220 0444                           u2140 026A  
                         u2060 00BC                           u3100 0F0A                           u3021 0B10  
                         u2301 1138                           u2221 0440                           u2141 0266  
                         u2061 00B8                           u3101 0F06                           u3030 0B3E  
                         u2310 115C                           u2230 1028                           u2150 0296  
                         u2070 00D4                           u3110 0F1C                           u3031 0B3A  
                         u2311 1158                           u2231 1024                           u2151 0292  
                         u2071 00D0                           u3111 0F18                           u3040 0B62  
                         u2320 117A                           u2240 1072                           u2160 02A8  
                         u2080 0106                           u2400 0D20                           u3200 1002  
                         u3120 0F34                           u3041 0B5E                           u2321 1176  
                         u2241 106E                           u2161 02A4                           u2081 0102  
                         u2401 0D1C                           u3201 0FFE                           u3121 0F30  
                         u3050 0B74                           u2250 1084                           u2170 02BA  
                         u2090 013E                           u2410 0D34                           u2330 0C72  
                         u3130 0F4E                           u3051 0B70                           u2251 1080  
                         u2171 02B6                           u2091 013A                           u2411 0D30  
                         u2331 0C6E                           u3131 0F4A                           u3060 0BD6  
                         u2500 13F8                           u2260 10A2                           u2180 02CA  
                         u2420 0D52                           u2340 0C82                           u3140 0F6A  
                         u3061 0BD2                           u2501 13F4                           u2261 109E  
                         u2181 02C6                           u2421 0D4E                           u2341 0C7E  
                         u3141 0F66                           u1710 1E8E                           u3070 0C5A  
                         u2510 1C72                           u2270 10BA                           u2190 032C  
                         u2430 0D62                           u2350 0CA4                           u3150 0F86  
                         u1711 1E8A                           u3071 0C56                           u2511 1C6E  
                         u2271 10B6                           u2191 0328                           u2431 0D5E  
                         u2351 0CA0                           u3151 0F82                           u1720 1CCA  
                         u1800 1AB4                           u2440 1322                           u2280 10CC  
                         u2600 0586                           u2520 046C                           u2360 0CB4  
                         u3160 0F96                           u3080 0EB8                 ?_display_event 0035  
                         u1721 1CC4                           u1801 1AB0                           u2441 131E  
                         u2281 10C8                           u2601 0582                           u2521 0468  
                         u2361 0CB0                           u3161 0F92                           u3081 0EB4  
                         u1810 1ACA                           u2450 133A                           u2290 10EE  
                         u2610 0596                           u2530 048C                           u2370 0CC4  
                         u3170 0FB0                           u3090 0EDA                           u1811 1AC6  
                         u2451 1336                           u2291 10EA                           u2611 0592  
                         u2531 0488                           u2371 0CC0                           u3171 0FAC  
                         u3091 0ED6                           u1740 1CEC                           u1820 1A4A  
                         u1900 1868                           u2460 1352                           u2700 06CE  
                         u2620 05AA                           u2540 04A6                           u2380 0CFA  
                         u3180 0FCA                           u1741 1CE8                           u1901 1864  
                         u2461 134E                           u3237 1724                           u2701 06CA  
                         u2621 05A6                           u2541 04A2                           u2381 0CF6  
                         u3181 0FC6                           u1830 1A72                           u1750 1CB6  
                         u1910 1624                           u2470 136A                           u2710 06E8  
                         u2630 05BC                           u2550 04D2                           u2390 0D10  
                         u3190 0FE6                           u1735 1CCC                           u1751 1CB2  
                         u1911 1620                           u2471 1366                           u3247 173E  
                         u2711 06E4                           u2631 05B8                           u2551 04CE  
                         u2391 0D0C                           u3191 0FE2                           u1840 1A82  
                         u1760 1952                           u1920 1636                           u2480 1382  
                         u2800 080C                           u2720 06F8                           u2640 05DC  
                         u2560 04EE                           u1841 1A7E                           u1761 194E  
                         u1921 1632                           u2481 137E                           u3257 1754  
                         u2801 0808                           u2721 06F4                           u2641 05D8  
                         u2561 04EA                           u1770 1970                           u1850 15D2  
                         u1930 164C                           u2490 13A2                           u2810 081C  
                         u2730 0712                           u2650 0600                           u2570 0520  
        ?_read_external_eeprom 0035                           u1827 1A40                           u1771 196C  
                         u1851 15CE                           u1931 1648                           u2491 139E  
                         u3267 1776                           u2811 0818                           u2731 070E  
                         u2651 05FC                           u2571 051C                           u1780 198C  
                         u1860 15EE                           u2900 0946                           u1940 166A  
                         u2820 0836                           u2740 0734                           u2660 062C  
                         u2580 053C                           u1837 1A68                           u1781 1988  
                         u1861 15EA                           u2901 0942                           u1941 1666  
                         u3277 1788                           u2821 0832                           u2741 0730  
                         u2661 0628                           u2581 0538                           u1790 1A96  
                         u1870 160E                           u2910 0976                           u1950 167C  
                         u2830 0852                           u2750 0760                           u2670 0648  
                         u2590 056C                           u1791 1A92                           u1871 160A  
                         u2911 0972                           u1951 1678                           u3287 179E  
                         u2831 084E                           u2751 075C                           u2671 0644  
                         u2591 0568                           u2920 09A8                           u1960 168E  
                         u1880 1C16                           u2840 086E                           u2760 077C  
                         u2680 067A                           u2921 09A4                           u1961 168A  
                         u1881 1C12                           u3297 17B2                           u2841 086A  
                         u2761 0778                           u2681 0676                           u2930 09CA  
                         u2850 0886                           u1970 16A8                           u1890 1E68  
                         u2770 07AE                           u2690 0696                           u2931 09C6  
                         u2851 0882                           u1971 16A4                           u1891 1E64  
                         u2771 07AA                           u2691 0692                           _PEIE 7F96  
                         u2940 09DA                           u2860 0896                           u1980 16CE  
                         u2780 07CA                           u2941 09D6                           u2861 0892  
                         u1981 16CA                           u2781 07C6                           u2950 0A0C  
                         u2870 08C8                           u1990 16E0                           u2790 07F2  
                         u2951 0A08                           u2871 08C4                           u1991 16DC  
                         u2791 07EE                           u2960 0A44                           u2880 0900  
                         u2961 0A40                           u2881 08FC                           u2970 0A5A  
                         u2890 0916                           u2971 0A56                           u2891 0912  
                         _RCIE 7CED                           u2980 0A8A                           _RCEN 7E2B  
                         _RCIF 7CF5                           u2981 0A86                           u2990 0ABA  
                         u2991 0AB6                           _RBPU 7F8F                           _TMR0 0FD6  
                         _SPEN 7D5F                           _RSEN 7E29                           _TXIE 7CEC  
                         _TXEN 7D65                           _TXIF 7CF4                           _SYNC 7D64  
               ?_display_speed 0035                           _cp_f 0025                           _flag 0012  
                         _main 0E94                           _menu 1014                           _logs 0093  
                         _secs 0004                           _time 002C                           fsr0h 0FEA  
                         fsr1h 0FE2                           indf0 0FEF                           fsr2h 0FDA  
                         fsr0l 0FE9                           indf2 0FDF                           fsr1l 0FE1  
                         fsr2l 0FD9                           btemp 005A                           _puts 1CF2  
                         prodh 0FF4                           prodl 0FF3                           start 000E  
         ??_init_matrix_keypad 0035                   ___param_bank 0000                 clcd_write@byte 0036  
                  _store_event 150A                  _i2c_rep_start 1EAA                  ??_i2c_rx_mode 0035  
                        ??_isr 0035                   ?_init_ds1307 0035                          _ABDEN 7DC0  
                        _ADCS0 7E00                          _ADCS1 7E01                          _ADCS2 7E02  
                        ?_main 0035                   ?_read_ds1307 0035                          _ACKEN 7E2C  
                        _ACKDT 7E2D                 ??_display_time 0038                          ?_menu 0035  
                        _BCLIF 7D0B                          _ACQT0 7E03                          _ACQT1 7E04  
                        _ACQT2 7E05                          STR_10 2FF4                          STR_11 2FEE  
                        STR_12 2EE9                          STR_20 2FCC                          STR_13 2FFD  
                        STR_21 2FBF                          STR_14 2EAB                          STR_30 2FC7  
                        STR_22 2F5F                          STR_15 2FFB                          STR_31 2FF7  
                        STR_23 2E96                          STR_16 2FFB                          STR_32 2FF9  
                        STR_40 2F9C                          _BRG16 7DC3                          STR_24 2ED3  
                        STR_33 2FF9                          STR_17 2F7F                          STR_41 2EAD  
                        STR_25 2F4E                          STR_50 2FFB                          STR_34 2FF9  
                        STR_42 2FFD                          STR_18 2FA9                          STR_26 2E7D  
                        STR_43 2EAB                          STR_27 2EAA                          STR_35 2FF9  
                        STR_19 2F6F                          STR_51 2F2C                          STR_60 2EAA  
                        STR_28 2EAA                          STR_44 2FFB                          STR_36 2FD6  
                        STR_52 2F0A                          STR_53 2F2C                          STR_45 2FFB  
                        STR_29 2F8E                          STR_37 2EC0                          STR_54 2F1B  
                        STR_38 2EF8                          STR_46 2EE6                          STR_47 2FFD  
                        STR_55 2FB6                          STR_39 2F3D                          STR_48 2EAB  
                        STR_56 2EAA                          STR_49 2FFB                          STR_57 2FB6  
                        STR_58 2EAA                          STR_59 2FB6                          ?_puts 0036  
              __end_of___lwdiv 19AC                __end_of___lwmod 1AE8                          i2l351 1B46  
                        _VCFG0 7E0C                          _VCFG1 7E0D                          _RCREG 0FAE  
                        _SENDB 7D63                          _SPBRG 0FAF                          _PORTB 0F81  
                        _PORTD 0F83                          _TRISB 0F93                          _TRISC 0F94  
                        _TRISD 0F95                          _SSPIF 7CF3                          _TXREG 0FAD  
                 ?_init_timer0 0035      write_external_eeprom@data 0036                          _flag1 0018  
                        _atmpt 0058                          _event 0083                          _dummy 001E  
                        _speed 001C                          _putch 1E58                   main@prev_key 0053  
                 ?_inti_config 0035                          tablat 0FF5                __end_of_settime 0874  
                        puts@s 0036                          ttemp5 005B                          ttemp6 005E  
                        ttemp7 0062                          status 0FD8                          wtemp8 005B  
             init_ds1307@dummy 0043                     _i2c_no_ack 1ECA                __initialization 1B4A  
               ?_i2c_rep_start 0035         ?_write_external_eeprom 0036                   __end_of_main 1014  
                 __end_of_menu 118A                   __end_of_puts 1D28              change_pass@index1 0021  
            change_pass@index2 0020               __end_of_i2c_idle 1E92               __end_of_i2c_read 1E9E  
            change_pass@pass_f 001F               __end_of_i2c_stop 1EC2              change_pass@prev_i 004F  
                ?_download_log 0035                         ??_main 0053                         ??_menu 0043  
                       ??_puts 0038                  __activetblptr 0002            __end_of_i2c_rx_mode 1EBA  
              ??_display_event 0045                         _ADCON0 0FC2                         _ADCON1 0FC1  
                       _ABDOVF 7DC7               read_switches@key 0027         ??_read_external_eeprom 0036  
              ??_display_speed 0043                         _ADRESH 0FC4                         _ADRESL 0FC3  
                       _T08BIT 7EAE                         ?_putch 0035                         _GODONE 7E11  
                       i2l3670 1B2E                         i2l3672 1B3E                         i2l3674 1B44  
                       i2l3666 1AEA                         i2l3668 1AF8                   _write_ds1307 1DC6  
                       _TMR0IE 7F95                         _TMR0IF 7F92                         _TMR0ON 7EAF  
                       _SSPADD 0FC8                         _TRISC3 7CA3                         _TRISC4 7CA4  
                       _TRISC6 7CA6                         _TRISC7 7CA7                         _TRISD7 7CAF  
                       _SSPBUF 0FC9                      ??___lwdiv 0039                      ??___lwmod 0040  
                       _main_f 002B               __end_of_init_i2c 1E58               __end_of_init_adc 1DC6  
                       _menu_f 002A               __end_of_read_adc 1C36                         _t_flag 000A  
                       clear_0 1B88                         clear_1 1B94                 ??_download_log 0045  
                       isa$std 0001               __end_of_scan_key 150A               __end_of_password 0458  
                 __pdataCOMRAM 0058                   __mediumconst 2E7C                         tblptrh 0FF7  
                       tblptrl 0FF6                         tblptru 0FF8               __end_of_view_log 0E94  
                    ??_settime 0046                     __accesstop 0060        __end_of__initialization 1B9A  
         __end_of_display_time 18C2                  ___rparam_used 0001                ??_i2c_rep_start 0035  
                  ?_i2c_no_ack 0035                 __pcstackCOMRAM 0035                   __pidataBANK0 1DE4  
                  _i2c_rx_mode 1EB2                  __end_of_putch 1E6E              __end_of_i2c_start 1ECA  
            __end_of_i2c_write 1EAA                        ??_putch 0035                     __pbssBANK0 0060  
       write_external_eeprom@i 0037                      ?_i2c_idle 0035                      ?_i2c_read 0035  
                    ?_i2c_stop 0035                     _clcd_print 1A18                     _clcd_putch 1DFE  
                   _clcd_write 1CB8   write_external_eeprom@address 0039                   ?_store_event 0035  
              read_ds1307@data 0037              read_switches@once 0059                        _ACKSTAT 7E2E  
                  password@key 004B                        _SSPCON1 0FC6                  _read_switches 18C2  
                   ??_i2c_idle 0035                     ??_i2c_read 0035              __end_of_dashboard 1842  
                   ??_i2c_stop 0035                      ?_init_i2c 0035           __end_of_download_log 1402  
                    ?_init_adc 0035                      ?_read_adc 0035              __end_of_clear_log 1C78  
                    ?_scan_key 0035        ??_write_external_eeprom 0037                        __Hparam 0000  
                    ?_password 0035                        __Lparam 0000                      ?_view_log 0035  
                      ___lwdiv 1938                   store_event@i 0043                        ___lwmod 1A84  
     display_speed@adc_reg_val 0043                    _i@menu$F461 0010                        __pcinit 1B4A  
                      __ramtop 0600                        __ptext0 0E94                        __ptext1 0C60  
                      __ptext2 0458                        __ptext3 118A                        __ptext4 18C2  
                      __ptext5 1402                        __ptext6 0012                        __ptext7 1E16  
                      __ptext8 1014                        __ptext9 1E2C                        _oe_pass 0077  
            __end_of_init_clcd 17BA              __end_of_init_uart 1D7C                  ??_change_pass 0045  
                      _settime 0458                 ?_read_switches 0035                        main@key 0057  
               __pintcode_body 1AE8           end_of_initialization 1B9A              __end_of_save_exit 12F2  
                      menu@key 0043                     ??_init_i2c 0035                     ??_init_adc 0035  
                __Lmediumconst 2E7C                     ??_read_adc 0037                        int_func 1AE8  
                   ??_scan_key 0035                    ?_clcd_print 0037                    ?_clcd_putch 0041  
                  ?_clcd_write 0035                     ??_password 0043                        postdec1 0FE5  
                      postdec2 0FDD                        postinc0 0FEE                        postinc1 0FE6  
                      postinc2 0FDE                     ??_view_log 0043                  password@i_340 004E  
                password@i_350 0045                  password@i_347 0051                  password@k_339 004A  
                    _PORTBbits 0F81                read_adc@channel 003B                  password@delay 0014  
                password@count 0073                   _display_time 1842                  i2c_write@data 0035  
              read_adc@reg_val 0039          __end_of_display_event 1712          __end_of_display_speed 1A18  
          __end_of_change_pass 0C60       read_external_eeprom@data 0037                   ??_i2c_no_ack 0035  
                 ?_i2c_rx_mode 0035                  __pidataCOMRAM 1ED0                    view_log@key 0048  
          start_initialization 1B4A               change_pass@i_583 004B               change_pass@i_578 0047  
              ??_read_switches 0035                      _i2c_start 1EC2               change_pass@delay 000E  
                  __end_of_isr 1B4A                      _i2c_write 1E9E             __end_of_i2c_no_ack 1ED0  
        __end_of_i2c_rep_start 1EB2                  ??_init_ds1307 0043                    __pdataBANK0 0083  
                ??_read_ds1307 0036                   _download_log 12F2    read_switches@detection_type 0035  
                ??_init_timer0 0035                    __pbssCOMRAM 0001                    _change_pass 0874  
                   ?_i2c_start 0035                     ?_i2c_write 0035                 change_pass@key 0050  
                ??_inti_config 0044                   change_pass@i 0051                      _dashboard 17BA  
             ___lwdiv@dividend 0035  __end_of_write_external_eeprom 1CB8                      _clear_log 1C36  
                    __pintcode 0008                  __pmediumconst 2E7C             read_ds1307@address 0036  
                     ?___lwdiv 0035                      _clock_reg 0001                       ?___lwmod 003C  
          __end_of_init_ds1307 1BF0                       ?_settime 0035            __end_of_read_ds1307 1DA6  
             ___lwdiv@quotient 0039                      _init_clcd 1712                      _init_uart 1D52  
                ?_write_ds1307 0041            __end_of_init_timer0 1E2C    read_external_eeprom@address 0036  
                 ??_clcd_print 003A                   ??_clcd_putch 0042     __end_of_init_matrix_keypad 1E80  
                    _save_exit 118A                   ??_clcd_write 0036                     ?_dashboard 0035  
          __end_of_inti_config 1E42                       i2u321_40 1AF8                       i2u321_41 1AF4  
                     i2u322_40 1B2E                       i2u322_41 1B2A                     ?_clear_log 0035  
                 _new_password 007F                      _time_flag 000C                   dashboard@key 0046  
                download_log@i 0049                  download_log@j 004A          clcd_write@control_bit 0035  
                   settime@key 0048                      main@delay 0055                    ??_i2c_start 0035  
           __end_of_clcd_print 1A84                    ??_i2c_write 0035             __end_of_clcd_putch 1E16  
           __end_of_clcd_write 1CF2                     ?_init_clcd 0035                   save_exit@key 0045  
                   ?_init_uart 0035                      copy_data0 1B5E                 ??_write_ds1307 0042  
                     _i2c_idle 1E80                       _i2c_read 1E92                       _i2c_stop 1EBA  
                   ?_save_exit 0035                       __Hrparam 0000                   clear_log@key 003A  
                     __Lrparam 0000   __end_of_read_external_eeprom 1D52                    _init_ds1307 1BA8  
                  _read_ds1307 1D7C            write_ds1307@address 0042                    _init_timer0 1E16  
              ___lwdiv@divisor 0037                ___lwdiv@counter 003B                       __ptext10 1E6E  
                     __ptext11 1E42                       __ptext20 1D52                       __ptext12 1BA8  
                     __ptext21 17BA                       __ptext13 1DC6                       __ptext30 1DFE  
                     __ptext22 1842                       __ptext14 1712                       __ptext31 1610  
                     __ptext23 1D7C                       __ptext15 1DA6                       __ptext40 1A84  
                     __ptext32 1C36                       __ptext24 1EAA                       __ptext16 12F2  
                     __ptext41 1938                       __ptext33 0874                       __ptext25 1E92  
                     __ptext17 1D28                       __ptext42 1A18                       __ptext34 150A  
                     __ptext26 1EB2                       __ptext18 1CF2                       __ptext43 1CB8  
                     __ptext35 1C78                       __ptext27 1ECA                       __ptext19 1E58  
                     __ptext36 1E9E                       __ptext28 19AC                       __ptext37 1EBA  
                     __ptext29 1BF0                       __ptext38 1EC2                       __ptext39 1E80  
                    password@i 0050                      password@k 0049                       _ent_pass 007B  
                  _inti_config 1E2C                       _init_i2c 1E42                       _init_adc 1DA6  
                     _read_adc 1BF0                       _scan_key 1402                    ??_dashboard 0046  
                     _password 0012                    _re_password 006B                    ??_clear_log 003A  
                ??_store_event 0041                       isa$xinst 0000               display_event@key 0045  
                     _overflow 0023                       int$flags 005A                       _view_log 0C60  
                    view_log@i 0022                      putch@byte 0035                   ?_change_pass 0035  
                     isr@count 006F                    ??_init_clcd 0037          __end_of_read_switches 1938  
                  ??_init_uart 0035                       intlevel2 0000               ___lwmod@dividend 003C  
                  ??_save_exit 0043           __end_of_write_ds1307 1DE4            __end_of_store_event 1610  
              ___lwmod@divisor 003E                ___lwmod@counter 0040               write_ds1307@data 0041  
               password@pass_f 004C           _read_external_eeprom 1D28                  _display_event 1610  
            download_log@i_541 0045                  _display_speed 19AC  
